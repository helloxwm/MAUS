%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: supfig_HLS_xWSummary.pdf
%%Creator: (Adobe Acrobat 11.0.18)
%%For: martijm
%%CreationDate: 23/12/16, 08:43
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%CropBox: 0 0 576 432
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 842 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2016-12-23T08:39:05+02:00"
   xmp:CreatorTool="matplotlib 1.5.3, http://matplotlib.org"
   xmp:ModifyDate="2016-12-23T08:43:05+01:00"
   xmp:MetadataDate="2016-12-23T08:43:05+01:00"
   pdf:Producer="matplotlib pdf backend"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:88c11fcf-e143-644a-8fd0-2dc00bd95a49"
   xmpMM:InstanceID="uuid:447a4824-181b-2f4c-b528-53b228f491c3"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -432 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 432 li
576 432 li
576 0 li
cp
clp
gsave
0 432 mo
576 432 li
576 0 li
0 0 li
cp
clp
0 432 mo
576 432 li
576 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
f
1 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
182.641 206.582 mo
227.908 206.582 li
/1 
[/DeviceCMYK] /CSA add_res
.712398 0 .305882 0 cmyk
@
205.274 229.9 mo
205.274 183.265 li
@
330.441 131.086 mo
417.015 131.086 li
.384955 .899931 0 0 cmyk
@
373.728 156.35 mo
373.728 105.821 li
@
251.57 187.152 mo
311.906 187.152 li
.29987 .136965 1 0 cmyk
@
281.738 208.42 mo
281.738 165.884 li
@
190.891 223.073 mo
233.99 223.073 li
1 /0 /CSD get_res sepcs
1 sep
@
212.441 244.785 mo
212.441 201.362 li
@
112.272 321.927 mo
141.991 321.927 li
0 .993988 1 0 cmyk
@
127.132 347.21 mo
127.132 296.644 li
@
237.133 178.321 mo
312.627 178.321 li
.873533 .244297 1 .131685 cmyk
@
274.88 214.532 mo
274.88 142.11 li
@
305.145 111.974 mo
420.059 111.974 li
.883665 .769161 0 0 cmyk
@
362.602 151.579 mo
362.602 72.368 li
@
227.469 224.428 mo
300.678 224.428 li
1 /0 /CSD get_res sepcs
.7 sep
@
264.074 257.223 mo
264.074 191.632 li
@
182.641 209.582 mo
182.641 203.582 li
.712398 0 .305882 0 cmyk
f
.5 lw
182.641 209.582 mo
182.641 203.582 li
@
227.908 209.582 mo
227.908 203.582 li
f
227.908 209.582 mo
227.908 203.582 li
@
208.274 229.9 mo
202.274 229.9 li
f
208.274 229.9 mo
202.274 229.9 li
@
208.274 183.265 mo
202.274 183.265 li
f
208.274 183.265 mo
202.274 183.265 li
@
205.274 209.582 mo
206.07 209.582 206.833 209.266 207.395 208.703 cv
207.958 208.141 208.274 207.378 208.274 206.582 cv
208.274 205.786 207.958 205.023 207.395 204.461 cv
206.833 203.898 206.07 203.582 205.274 203.582 cv
204.478 203.582 203.715 203.898 203.153 204.461 cv
202.59 205.023 202.274 205.786 202.274 206.582 cv
202.274 207.378 202.59 208.141 203.153 208.703 cv
203.715 209.266 204.478 209.582 205.274 209.582 cv
cp
f
205.274 209.582 mo
206.07 209.582 206.833 209.266 207.395 208.703 cv
207.958 208.141 208.274 207.378 208.274 206.582 cv
208.274 205.786 207.958 205.023 207.395 204.461 cv
206.833 203.898 206.07 203.582 205.274 203.582 cv
204.478 203.582 203.715 203.898 203.153 204.461 cv
202.59 205.023 202.274 205.786 202.274 206.582 cv
202.274 207.378 202.59 208.141 203.153 208.703 cv
203.715 209.266 204.478 209.582 205.274 209.582 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
330.441 134.086 mo
330.441 128.086 li
.384955 .899931 0 0 cmyk
f
330.441 134.086 mo
330.441 128.086 li
@
417.015 134.086 mo
417.015 128.086 li
f
417.015 134.086 mo
417.015 128.086 li
@
376.728 156.35 mo
370.728 156.35 li
f
376.728 156.35 mo
370.728 156.35 li
@
376.728 105.821 mo
370.728 105.821 li
f
376.728 105.821 mo
370.728 105.821 li
@
373.728 134.086 mo
376.728 128.086 li
370.728 128.086 li
cp
f
0 lj
373.728 134.086 mo
376.728 128.086 li
370.728 128.086 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
251.57 190.152 mo
251.57 184.152 li
.29987 .136965 1 0 cmyk
f
1 lj
251.57 190.152 mo
251.57 184.152 li
@
311.906 190.152 mo
311.906 184.152 li
f
311.906 190.152 mo
311.906 184.152 li
@
284.738 208.42 mo
278.738 208.42 li
f
284.738 208.42 mo
278.738 208.42 li
@
284.738 165.884 mo
278.738 165.884 li
f
284.738 165.884 mo
278.738 165.884 li
@
281.738 184.152 mo
278.738 190.152 li
284.738 190.152 li
cp
f
0 lj
281.738 184.152 mo
278.738 190.152 li
284.738 190.152 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
190.891 226.073 mo
190.891 220.073 li
f
1 lj
190.891 226.073 mo
190.891 220.073 li
@
233.991 226.073 mo
233.991 220.073 li
f
233.991 226.073 mo
233.991 220.073 li
@
215.441 244.785 mo
209.441 244.785 li
f
215.441 244.785 mo
209.441 244.785 li
@
215.441 201.361 mo
209.441 201.361 li
f
215.441 201.361 mo
209.441 201.361 li
@
211.293 220.301 mo
209.669 221.926 li
209.669 224.222 li
211.293 225.845 li
213.589 225.845 li
215.213 224.222 li
215.213 221.926 li
213.589 220.301 li
cp
f
0 lj
211.293 220.301 mo
209.669 221.926 li
209.669 224.222 li
211.293 225.845 li
213.589 225.845 li
215.213 224.222 li
215.213 221.926 li
213.589 220.301 li
cp
@
112.272 324.927 mo
112.272 318.927 li
0 .993988 1 0 cmyk
f
1 lj
112.272 324.927 mo
112.272 318.927 li
@
141.991 324.927 mo
141.991 318.927 li
f
141.991 324.927 mo
141.991 318.927 li
@
130.132 347.21 mo
124.132 347.21 li
f
130.132 347.21 mo
124.132 347.21 li
@
130.132 296.644 mo
124.132 296.644 li
f
130.132 296.644 mo
124.132 296.644 li
@
124.132 324.927 mo
130.132 324.927 li
130.132 318.927 li
124.132 318.927 li
cp
f
0 lj
124.132 324.927 mo
130.132 324.927 li
130.132 318.927 li
124.132 318.927 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
237.133 181.321 mo
237.133 175.321 li
.873533 .244297 1 .131685 cmyk
f
1 lj
237.133 181.321 mo
237.133 175.321 li
@
312.627 181.321 mo
312.627 175.321 li
f
312.627 181.321 mo
312.627 175.321 li
@
277.88 214.532 mo
271.88 214.532 li
f
277.88 214.532 mo
271.88 214.532 li
@
277.88 142.11 mo
271.88 142.11 li
f
277.88 142.11 mo
271.88 142.11 li
@
274.88 175.321 mo
274.206 177.394 li
272.027 177.394 li
273.79 178.675 li
273.117 180.748 li
274.88 179.467 li
276.643 180.748 li
275.97 178.675 li
277.733 177.394 li
275.554 177.394 li
cp
f
2 lj
274.88 175.321 mo
274.206 177.394 li
272.027 177.394 li
273.79 178.675 li
273.117 180.748 li
274.88 179.467 li
276.643 180.748 li
275.97 178.675 li
277.733 177.394 li
275.554 177.394 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
305.145 114.974 mo
305.145 108.974 li
.883665 .769161 0 0 cmyk
f
1 lj
305.145 114.974 mo
305.145 108.974 li
@
420.059 114.974 mo
420.059 108.974 li
f
420.059 114.974 mo
420.059 108.974 li
@
365.602 151.579 mo
359.602 151.579 li
f
365.602 151.579 mo
359.602 151.579 li
@
365.602 72.3681 mo
359.602 72.3681 li
f
365.602 72.3681 mo
359.602 72.3681 li
@
362.602 116.216 mo
366.845 111.973 li
362.602 107.731 li
358.359 111.973 li
cp
f
0 lj
362.602 116.216 mo
366.845 111.973 li
362.602 107.731 li
358.359 111.973 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
227.469 227.428 mo
227.469 221.428 li
1 /0 /CSD get_res sepcs
.7 sep
f
1 lj
227.469 227.428 mo
227.469 221.428 li
@
300.678 227.428 mo
300.678 221.428 li
f
300.678 227.428 mo
300.678 221.428 li
@
267.074 257.223 mo
261.074 257.223 li
f
267.074 257.223 mo
261.074 257.223 li
@
267.074 191.632 mo
261.074 191.632 li
f
267.074 191.632 mo
261.074 191.632 li
@
264.074 227.428 mo
264.87 227.428 265.633 227.112 266.195 226.549 cv
266.758 225.987 267.074 225.224 267.074 224.428 cv
267.074 223.632 266.758 222.869 266.195 222.307 cv
265.633 221.744 264.87 221.428 264.074 221.428 cv
263.278 221.428 262.515 221.744 261.953 222.307 cv
261.39 222.869 261.074 223.632 261.074 224.428 cv
261.074 225.224 261.39 225.987 261.953 226.549 cv
262.515 227.112 263.278 227.428 264.074 227.428 cv
cp
f
264.074 227.428 mo
264.87 227.428 265.633 227.112 266.195 226.549 cv
266.758 225.987 267.074 225.224 267.074 224.428 cv
267.074 223.632 266.758 222.869 266.195 222.307 cv
265.633 221.744 264.87 221.428 264.074 221.428 cv
263.278 221.428 262.515 221.744 261.953 222.307 cv
261.39 222.869 261.074 223.632 261.074 224.428 cv
261.074 225.224 261.39 225.987 261.953 226.549 cv
262.515 227.112 263.278 227.428 264.074 227.428 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 lw
2 lc
0 lj
518.4 388.8 mo
518.4 43.2 li
@
72 43.2 mo
518.4 43.2 li
@
72 388.8 mo
72 43.2 li
@
72 388.8 mo
518.4 388.8 li
@
72 388.8 mo
72 384.8 li
f
.5 lw
0 lc
1 lj
72 388.8 mo
72 384.8 li
@
72 43.2 mo
72 47.2 li
f
72 43.2 mo
72 47.2 li
@
66.269 393.957 mo
65.657 393.957 65.201 394.257 64.889 394.857 cv
64.577 395.457 64.433 396.357 64.433 397.557 cv
64.433 398.757 64.577 399.657 64.889 400.257 cv
65.201 400.857 65.657 401.157 66.269 401.157 cv
66.881 401.157 67.337 400.857 67.649 400.257 cv
67.949 399.657 68.105 398.757 68.105 397.557 cv
68.105 396.357 67.949 395.457 67.649 394.857 cv
67.337 394.257 66.881 393.957 66.269 393.957 cv
66.269 393.021 mo
67.241 393.021 67.985 393.417 68.513 394.185 cv
69.029 394.965 69.293 396.093 69.293 397.557 cv
69.293 399.033 69.029 400.161 68.513 400.929 cv
67.985 401.697 67.241 402.081 66.269 402.081 cv
65.285 402.081 64.529 401.697 64.013 400.929 cv
63.497 400.161 63.245 399.033 63.245 397.557 cv
63.245 396.093 63.497 394.965 64.013 394.185 cv
64.529 393.417 65.285 393.021 66.269 393.021 cv
f
71.369 400.437 mo
72.605 400.437 li
72.605 401.925 li
71.369 401.925 li
71.369 400.437 li
f
75.3889 400.929 mo
77.3209 400.929 li
77.3209 394.257 li
75.2209 394.677 li
75.2209 393.597 li
77.3089 393.177 li
78.4969 393.177 li
78.4969 400.929 li
80.4289 400.929 li
80.4289 401.925 li
75.3889 401.925 li
75.3889 400.929 li
f
146.4 388.8 mo
146.4 384.8 li
f
146.4 388.8 mo
146.4 384.8 li
@
146.4 43.2 mo
146.4 47.2 li
f
146.4 43.2 mo
146.4 47.2 li
@
140.669 393.957 mo
140.057 393.957 139.601 394.257 139.289 394.857 cv
138.977 395.457 138.833 396.357 138.833 397.557 cv
138.833 398.757 138.977 399.657 139.289 400.257 cv
139.601 400.857 140.057 401.157 140.669 401.157 cv
141.281 401.157 141.737 400.857 142.049 400.257 cv
142.349 399.657 142.505 398.757 142.505 397.557 cv
142.505 396.357 142.349 395.457 142.049 394.857 cv
141.737 394.257 141.281 393.957 140.669 393.957 cv
140.669 393.021 mo
141.641 393.021 142.385 393.417 142.913 394.185 cv
143.429 394.965 143.693 396.093 143.693 397.557 cv
143.693 399.033 143.429 400.161 142.913 400.929 cv
142.385 401.697 141.641 402.081 140.669 402.081 cv
139.685 402.081 138.929 401.697 138.413 400.929 cv
137.897 400.161 137.645 399.033 137.645 397.557 cv
137.645 396.093 137.897 394.965 138.413 394.185 cv
138.929 393.417 139.685 393.021 140.669 393.021 cv
f
145.769 400.437 mo
147.005 400.437 li
147.005 401.925 li
145.769 401.925 li
145.769 400.437 li
f
150.605 400.929 mo
154.733 400.929 li
154.733 401.925 li
149.177 401.925 li
149.177 400.929 li
149.621 400.473 150.233 399.849 151.013 399.057 cv
151.781 398.277 152.273 397.773 152.477 397.545 cv
152.861 397.125 153.125 396.765 153.269 396.465 cv
153.413 396.177 153.497 395.877 153.497 395.589 cv
153.497 395.133 153.329 394.749 153.005 394.461 cv
152.681 394.173 152.261 394.017 151.733 394.017 cv
151.361 394.017 150.965 394.089 150.557 394.209 cv
150.149 394.341 149.705 394.533 149.237 394.797 cv
149.237 393.597 li
149.717 393.405 150.161 393.261 150.569 393.165 cv
150.977 393.069 151.361 393.021 151.709 393.021 cv
152.609 393.021 153.329 393.249 153.869 393.705 cv
154.409 394.161 154.685 394.761 154.685 395.517 cv
154.685 395.877 154.613 396.225 154.481 396.537 cv
154.349 396.861 154.109 397.245 153.749 397.677 cv
153.653 397.797 153.341 398.121 152.813 398.661 cv
152.285 399.201 151.553 399.957 150.605 400.929 cv
f
220.8 388.8 mo
220.8 384.8 li
f
220.8 388.8 mo
220.8 384.8 li
@
220.8 43.2 mo
220.8 47.2 li
f
220.8 43.2 mo
220.8 47.2 li
@
215.069 393.957 mo
214.457 393.957 214.001 394.257 213.689 394.857 cv
213.377 395.457 213.233 396.357 213.233 397.557 cv
213.233 398.757 213.377 399.657 213.689 400.257 cv
214.001 400.857 214.457 401.157 215.069 401.157 cv
215.681 401.157 216.137 400.857 216.449 400.257 cv
216.749 399.657 216.905 398.757 216.905 397.557 cv
216.905 396.357 216.749 395.457 216.449 394.857 cv
216.137 394.257 215.681 393.957 215.069 393.957 cv
215.069 393.021 mo
216.041 393.021 216.785 393.417 217.313 394.185 cv
217.829 394.965 218.093 396.093 218.093 397.557 cv
218.093 399.033 217.829 400.161 217.313 400.929 cv
216.785 401.697 216.041 402.081 215.069 402.081 cv
214.085 402.081 213.329 401.697 212.813 400.929 cv
212.297 400.161 212.045 399.033 212.045 397.557 cv
212.045 396.093 212.297 394.965 212.813 394.185 cv
213.329 393.417 214.085 393.021 215.069 393.021 cv
f
220.169 400.437 mo
221.405 400.437 li
221.405 401.925 li
220.169 401.925 li
220.169 400.437 li
f
227.573 397.209 mo
228.137 397.329 228.581 397.581 228.893 397.965 cv
229.205 398.349 229.373 398.829 229.373 399.381 cv
229.373 400.245 229.073 400.917 228.485 401.385 cv
227.885 401.853 227.045 402.081 225.953 402.081 cv
225.581 402.081 225.197 402.045 224.813 401.973 cv
224.429 401.913 224.021 401.805 223.613 401.661 cv
223.613 400.521 li
223.937 400.713 224.297 400.857 224.693 400.953 cv
225.077 401.049 225.485 401.097 225.917 401.097 cv
226.661 401.097 227.225 400.953 227.609 400.665 cv
227.993 400.377 228.197 399.945 228.197 399.381 cv
228.197 398.877 228.017 398.469 227.657 398.181 cv
227.297 397.893 226.793 397.737 226.145 397.737 cv
225.125 397.737 li
225.125 396.765 li
226.193 396.765 li
226.769 396.765 227.213 396.657 227.525 396.417 cv
227.837 396.189 227.993 395.853 227.993 395.409 cv
227.993 394.965 227.825 394.617 227.513 394.377 cv
227.189 394.137 226.733 394.017 226.145 394.017 cv
225.821 394.017 225.473 394.053 225.101 394.125 cv
224.729 394.197 224.321 394.305 223.877 394.449 cv
223.877 393.393 li
224.321 393.273 224.741 393.177 225.137 393.117 cv
225.521 393.057 225.893 393.021 226.253 393.021 cv
227.141 393.021 227.849 393.225 228.377 393.633 cv
228.905 394.041 229.169 394.593 229.169 395.289 cv
229.169 395.769 229.025 396.177 228.749 396.513 cv
228.473 396.849 228.077 397.089 227.573 397.209 cv
f
295.2 388.8 mo
295.2 384.8 li
f
295.2 388.8 mo
295.2 384.8 li
@
295.2 43.2 mo
295.2 47.2 li
f
295.2 43.2 mo
295.2 47.2 li
@
289.469 393.957 mo
288.857 393.957 288.401 394.257 288.089 394.857 cv
287.777 395.457 287.633 396.357 287.633 397.557 cv
287.633 398.757 287.777 399.657 288.089 400.257 cv
288.401 400.857 288.857 401.157 289.469 401.157 cv
290.081 401.157 290.537 400.857 290.849 400.257 cv
291.149 399.657 291.305 398.757 291.305 397.557 cv
291.305 396.357 291.149 395.457 290.849 394.857 cv
290.537 394.257 290.081 393.957 289.469 393.957 cv
289.469 393.021 mo
290.441 393.021 291.185 393.417 291.713 394.185 cv
292.229 394.965 292.493 396.093 292.493 397.557 cv
292.493 399.033 292.229 400.161 291.713 400.929 cv
291.185 401.697 290.441 402.081 289.469 402.081 cv
288.485 402.081 287.729 401.697 287.213 400.929 cv
286.697 400.161 286.445 399.033 286.445 397.557 cv
286.445 396.093 286.697 394.965 287.213 394.185 cv
287.729 393.417 288.485 393.021 289.469 393.021 cv
f
294.569 400.437 mo
295.805 400.437 li
295.805 401.925 li
294.569 401.925 li
294.569 400.437 li
f
301.637 394.209 mo
298.649 398.877 li
301.637 398.877 li
301.637 394.209 li
301.325 393.177 mo
302.813 393.177 li
302.813 398.877 li
304.061 398.877 li
304.061 399.861 li
302.813 399.861 li
302.813 401.925 li
301.637 401.925 li
301.637 399.861 li
297.689 399.861 li
297.689 398.721 li
301.325 393.177 li
f
369.6 388.8 mo
369.6 384.8 li
f
369.6 388.8 mo
369.6 384.8 li
@
369.6 43.2 mo
369.6 47.2 li
f
369.6 43.2 mo
369.6 47.2 li
@
363.869 393.957 mo
363.257 393.957 362.801 394.257 362.489 394.857 cv
362.177 395.457 362.033 396.357 362.033 397.557 cv
362.033 398.757 362.177 399.657 362.489 400.257 cv
362.801 400.857 363.257 401.157 363.869 401.157 cv
364.481 401.157 364.937 400.857 365.249 400.257 cv
365.549 399.657 365.705 398.757 365.705 397.557 cv
365.705 396.357 365.549 395.457 365.249 394.857 cv
364.937 394.257 364.481 393.957 363.869 393.957 cv
363.869 393.021 mo
364.841 393.021 365.585 393.417 366.113 394.185 cv
366.629 394.965 366.893 396.093 366.893 397.557 cv
366.893 399.033 366.629 400.161 366.113 400.929 cv
365.585 401.697 364.841 402.081 363.869 402.081 cv
362.885 402.081 362.129 401.697 361.613 400.929 cv
361.097 400.161 360.845 399.033 360.845 397.557 cv
360.845 396.093 361.097 394.965 361.613 394.185 cv
362.129 393.417 362.885 393.021 363.869 393.021 cv
f
368.969 400.437 mo
370.205 400.437 li
370.205 401.925 li
368.969 401.925 li
368.969 400.437 li
f
372.797 393.177 mo
377.441 393.177 li
377.441 394.173 li
373.877 394.173 li
373.877 396.321 li
374.045 396.261 374.225 396.213 374.393 396.189 cv
374.561 396.165 374.741 396.141 374.909 396.141 cv
375.881 396.141 376.649 396.417 377.225 396.945 cv
377.801 397.485 378.089 398.205 378.089 399.117 cv
378.089 400.065 377.789 400.797 377.201 401.313 cv
376.613 401.829 375.785 402.081 374.729 402.081 cv
374.357 402.081 373.985 402.045 373.601 401.997 cv
373.217 401.937 372.833 401.853 372.425 401.721 cv
372.425 400.533 li
372.773 400.725 373.133 400.869 373.517 400.965 cv
373.889 401.061 374.285 401.097 374.705 401.097 cv
375.377 401.097 375.917 400.929 376.313 400.569 cv
376.697 400.209 376.901 399.729 376.901 399.117 cv
376.901 398.517 376.697 398.037 376.313 397.677 cv
375.917 397.317 375.377 397.137 374.705 397.137 cv
374.393 397.137 374.069 397.173 373.757 397.245 cv
373.445 397.317 373.121 397.425 372.797 397.569 cv
372.797 393.177 li
f
444 388.8 mo
444 384.8 li
f
444 388.8 mo
444 384.8 li
@
444 43.2 mo
444 47.2 li
f
444 43.2 mo
444 47.2 li
@
438.269 393.957 mo
437.657 393.957 437.201 394.257 436.889 394.857 cv
436.577 395.457 436.433 396.357 436.433 397.557 cv
436.433 398.757 436.577 399.657 436.889 400.257 cv
437.201 400.857 437.657 401.157 438.269 401.157 cv
438.881 401.157 439.337 400.857 439.649 400.257 cv
439.949 399.657 440.105 398.757 440.105 397.557 cv
440.105 396.357 439.949 395.457 439.649 394.857 cv
439.337 394.257 438.881 393.957 438.269 393.957 cv
438.269 393.021 mo
439.241 393.021 439.985 393.417 440.513 394.185 cv
441.029 394.965 441.293 396.093 441.293 397.557 cv
441.293 399.033 441.029 400.161 440.513 400.929 cv
439.985 401.697 439.241 402.081 438.269 402.081 cv
437.285 402.081 436.529 401.697 436.013 400.929 cv
435.497 400.161 435.245 399.033 435.245 397.557 cv
435.245 396.093 435.497 394.965 436.013 394.185 cv
436.529 393.417 437.285 393.021 438.269 393.021 cv
f
443.369 400.437 mo
444.605 400.437 li
444.605 401.925 li
443.369 401.925 li
443.369 400.437 li
f
449.861 397.077 mo
449.333 397.077 448.913 397.269 448.601 397.629 cv
448.289 397.989 448.133 398.493 448.133 399.117 cv
448.133 399.753 448.289 400.257 448.601 400.617 cv
448.913 400.977 449.333 401.157 449.861 401.157 cv
450.389 401.157 450.809 400.977 451.121 400.617 cv
451.433 400.257 451.589 399.753 451.589 399.117 cv
451.589 398.493 451.433 397.989 451.121 397.629 cv
450.809 397.269 450.389 397.077 449.861 397.077 cv
452.213 393.369 mo
452.213 394.449 li
451.913 394.305 451.613 394.197 451.313 394.125 cv
451.001 394.053 450.701 394.017 450.413 394.017 cv
449.621 394.017 449.021 394.281 448.613 394.809 cv
448.205 395.337 447.965 396.141 447.917 397.197 cv
448.145 396.861 448.433 396.597 448.781 396.417 cv
449.129 396.237 449.513 396.141 449.933 396.141 cv
450.809 396.141 451.505 396.417 452.009 396.945 cv
452.513 397.473 452.777 398.205 452.777 399.117 cv
452.777 400.017 452.501 400.737 451.973 401.277 cv
451.445 401.817 450.737 402.081 449.861 402.081 cv
448.853 402.081 448.073 401.697 447.545 400.929 cv
447.005 400.161 446.741 399.033 446.741 397.557 cv
446.741 396.177 447.065 395.073 447.725 394.257 cv
448.373 393.441 449.261 393.021 450.365 393.021 cv
450.653 393.021 450.953 393.057 451.265 393.105 cv
451.565 393.165 451.877 393.249 452.213 393.369 cv
f
518.4 388.8 mo
518.4 384.8 li
f
518.4 388.8 mo
518.4 384.8 li
@
518.4 43.2 mo
518.4 47.2 li
f
518.4 43.2 mo
518.4 47.2 li
@
512.669 393.957 mo
512.057 393.957 511.601 394.257 511.289 394.857 cv
510.977 395.457 510.833 396.357 510.833 397.557 cv
510.833 398.757 510.977 399.657 511.289 400.257 cv
511.601 400.857 512.057 401.157 512.669 401.157 cv
513.281 401.157 513.737 400.857 514.049 400.257 cv
514.349 399.657 514.505 398.757 514.505 397.557 cv
514.505 396.357 514.349 395.457 514.049 394.857 cv
513.737 394.257 513.281 393.957 512.669 393.957 cv
512.669 393.021 mo
513.641 393.021 514.385 393.417 514.913 394.185 cv
515.429 394.965 515.693 396.093 515.693 397.557 cv
515.693 399.033 515.429 400.161 514.913 400.929 cv
514.385 401.697 513.641 402.081 512.669 402.081 cv
511.685 402.081 510.929 401.697 510.413 400.929 cv
509.897 400.161 509.645 399.033 509.645 397.557 cv
509.645 396.093 509.897 394.965 510.413 394.185 cv
510.929 393.417 511.685 393.021 512.669 393.021 cv
f
517.769 400.437 mo
519.005 400.437 li
519.005 401.925 li
517.769 401.925 li
517.769 400.437 li
f
521.285 393.177 mo
526.913 393.177 li
526.913 393.681 li
523.733 401.925 li
522.497 401.925 li
525.485 394.173 li
521.285 394.173 li
521.285 393.177 li
f
295.66 419.433 mo
294.22 407.985 li
294.13 407.733 293.68 407.589 292.87 407.589 cv
292.744 407.589 292.69 407.517 292.69 407.355 cv
292.708 407.229 292.744 407.139 292.78 407.067 cv
292.816 406.995 292.888 406.959 292.996 406.959 cv
297.388 406.959 li
297.514 407.031 li
297.568 407.193 li
297.514 407.463 297.442 407.589 297.334 407.589 cv
296.398 407.589 295.894 407.751 295.84 408.075 cv
297.028 417.489 li
302.572 408.633 li
302.68 408.453 302.734 408.291 302.734 408.165 cv
302.734 407.949 302.626 407.805 302.446 407.715 cv
302.248 407.643 302.032 407.589 301.78 407.589 cv
301.654 407.589 301.6 407.517 301.6 407.355 cv
301.654 407.139 li
301.744 407.013 li
301.906 406.959 li
305.38 406.959 li
305.488 406.959 305.542 407.049 305.542 407.193 cv
305.488 407.463 305.416 407.589 305.308 407.589 cv
304.408 407.589 303.688 407.985 303.184 408.777 cv
303.13 408.813 li
296.488 419.433 li
296.398 419.559 296.29 419.631 296.146 419.631 cv
295.894 419.631 li
295.75 419.631 295.678 419.559 295.66 419.433 cv
f
72 388.8 mo
76 388.8 li
f
72 388.8 mo
76 388.8 li
@
518.4 388.8 mo
514.4 388.8 li
f
518.4 388.8 mo
514.4 388.8 li
@
45.082 384.144 mo
44.47 384.144 44.014 384.444 43.702 385.044 cv
43.39 385.644 43.246 386.544 43.246 387.744 cv
43.246 388.944 43.39 389.844 43.702 390.444 cv
44.014 391.044 44.47 391.344 45.082 391.344 cv
45.694 391.344 46.15 391.044 46.462 390.444 cv
46.762 389.844 46.918 388.944 46.918 387.744 cv
46.918 386.544 46.762 385.644 46.462 385.044 cv
46.15 384.444 45.694 384.144 45.082 384.144 cv
45.082 383.208 mo
46.054 383.208 46.798 383.604 47.326 384.372 cv
47.842 385.152 48.106 386.28 48.106 387.744 cv
48.106 389.22 47.842 390.348 47.326 391.116 cv
46.798 391.884 46.054 392.268 45.082 392.268 cv
44.098 392.268 43.342 391.884 42.826 391.116 cv
42.31 390.348 42.058 389.22 42.058 387.744 cv
42.058 386.28 42.31 385.152 42.826 384.372 cv
43.342 383.604 44.098 383.208 45.082 383.208 cv
f
50.182 390.624 mo
51.418 390.624 li
51.418 392.112 li
50.182 392.112 li
50.182 390.624 li
f
53.6979 383.364 mo
59.3259 383.364 li
59.3259 383.868 li
56.1459 392.112 li
54.9099 392.112 li
57.8979 384.36 li
53.6979 384.36 li
53.6979 383.364 li
f
64.162 384.144 mo
63.55 384.144 63.094 384.444 62.782 385.044 cv
62.47 385.644 62.326 386.544 62.326 387.744 cv
62.326 388.944 62.47 389.844 62.782 390.444 cv
63.094 391.044 63.55 391.344 64.162 391.344 cv
64.774 391.344 65.23 391.044 65.542 390.444 cv
65.842 389.844 65.998 388.944 65.998 387.744 cv
65.998 386.544 65.842 385.644 65.542 385.044 cv
65.23 384.444 64.774 384.144 64.162 384.144 cv
64.162 383.208 mo
65.134 383.208 65.878 383.604 66.406 384.372 cv
66.922 385.152 67.186 386.28 67.186 387.744 cv
67.186 389.22 66.922 390.348 66.406 391.116 cv
65.878 391.884 65.134 392.268 64.162 392.268 cv
63.178 392.268 62.422 391.884 61.906 391.116 cv
61.39 390.348 61.138 389.22 61.138 387.744 cv
61.138 386.28 61.39 385.152 61.906 384.372 cv
62.422 383.604 63.178 383.208 64.162 383.208 cv
f
72 345.6 mo
76 345.6 li
f
72 345.6 mo
76 345.6 li
@
518.4 345.6 mo
514.4 345.6 li
f
518.4 345.6 mo
514.4 345.6 li
@
45.082 340.944 mo
44.47 340.944 44.014 341.244 43.702 341.844 cv
43.39 342.444 43.246 343.344 43.246 344.544 cv
43.246 345.744 43.39 346.644 43.702 347.244 cv
44.014 347.844 44.47 348.144 45.082 348.144 cv
45.694 348.144 46.15 347.844 46.462 347.244 cv
46.762 346.644 46.918 345.744 46.918 344.544 cv
46.918 343.344 46.762 342.444 46.462 341.844 cv
46.15 341.244 45.694 340.944 45.082 340.944 cv
45.082 340.008 mo
46.054 340.008 46.798 340.404 47.326 341.172 cv
47.842 341.952 48.106 343.08 48.106 344.544 cv
48.106 346.02 47.842 347.148 47.326 347.916 cv
46.798 348.684 46.054 349.068 45.082 349.068 cv
44.098 349.068 43.342 348.684 42.826 347.916 cv
42.31 347.148 42.058 346.02 42.058 344.544 cv
42.058 343.08 42.31 341.952 42.826 341.172 cv
43.342 340.404 44.098 340.008 45.082 340.008 cv
f
50.182 347.424 mo
51.418 347.424 li
51.418 348.912 li
50.182 348.912 li
50.182 347.424 li
f
53.6979 340.164 mo
59.3259 340.164 li
59.3259 340.668 li
56.1459 348.912 li
54.9099 348.912 li
57.8979 341.16 li
53.6979 341.16 li
53.6979 340.164 li
f
62.65 347.916 mo
66.778 347.916 li
66.778 348.912 li
61.222 348.912 li
61.222 347.916 li
61.666 347.46 62.278 346.836 63.058 346.044 cv
63.826 345.264 64.318 344.76 64.522 344.532 cv
64.906 344.112 65.17 343.752 65.314 343.452 cv
65.458 343.164 65.542 342.864 65.542 342.576 cv
65.542 342.12 65.374 341.736 65.05 341.448 cv
64.726 341.16 64.306 341.004 63.778 341.004 cv
63.406 341.004 63.01 341.076 62.602 341.196 cv
62.194 341.328 61.75 341.52 61.282 341.784 cv
61.282 340.584 li
61.762 340.392 62.206 340.248 62.614 340.152 cv
63.022 340.056 63.406 340.008 63.754 340.008 cv
64.654 340.008 65.374 340.236 65.914 340.692 cv
66.454 341.148 66.73 341.748 66.73 342.504 cv
66.73 342.864 66.658 343.212 66.526 343.524 cv
66.394 343.848 66.154 344.232 65.794 344.664 cv
65.698 344.784 65.386 345.108 64.858 345.648 cv
64.33 346.188 63.598 346.944 62.65 347.916 cv
f
72 302.4 mo
76 302.4 li
f
72 302.4 mo
76 302.4 li
@
518.4 302.4 mo
514.4 302.4 li
f
518.4 302.4 mo
514.4 302.4 li
@
45.082 297.745 mo
44.47 297.745 44.014 298.045 43.702 298.645 cv
43.39 299.245 43.246 300.145 43.246 301.345 cv
43.246 302.545 43.39 303.445 43.702 304.045 cv
44.014 304.645 44.47 304.945 45.082 304.945 cv
45.694 304.945 46.15 304.645 46.462 304.045 cv
46.762 303.445 46.918 302.545 46.918 301.345 cv
46.918 300.145 46.762 299.245 46.462 298.645 cv
46.15 298.045 45.694 297.745 45.082 297.745 cv
45.082 296.809 mo
46.054 296.809 46.798 297.205 47.326 297.973 cv
47.842 298.753 48.106 299.881 48.106 301.345 cv
48.106 302.821 47.842 303.949 47.326 304.717 cv
46.798 305.485 46.054 305.869 45.082 305.869 cv
44.098 305.869 43.342 305.485 42.826 304.717 cv
42.31 303.949 42.058 302.821 42.058 301.345 cv
42.058 299.881 42.31 298.753 42.826 297.973 cv
43.342 297.205 44.098 296.809 45.082 296.809 cv
f
50.182 304.225 mo
51.418 304.225 li
51.418 305.713 li
50.182 305.713 li
50.182 304.225 li
f
53.6979 296.965 mo
59.3259 296.965 li
59.3259 297.469 li
56.1459 305.713 li
54.9099 305.713 li
57.8979 297.961 li
53.6979 297.961 li
53.6979 296.965 li
f
64.882 297.997 mo
61.894 302.665 li
64.882 302.665 li
64.882 297.997 li
64.57 296.965 mo
66.058 296.965 li
66.058 302.665 li
67.306 302.665 li
67.306 303.649 li
66.058 303.649 li
66.058 305.713 li
64.882 305.713 li
64.882 303.649 li
60.934 303.649 li
60.934 302.509 li
64.57 296.965 li
f
72 259.2 mo
76 259.2 li
f
72 259.2 mo
76 259.2 li
@
518.4 259.2 mo
514.4 259.2 li
f
518.4 259.2 mo
514.4 259.2 li
@
45.082 254.545 mo
44.47 254.545 44.014 254.845 43.702 255.445 cv
43.39 256.045 43.246 256.945 43.246 258.145 cv
43.246 259.345 43.39 260.245 43.702 260.845 cv
44.014 261.445 44.47 261.745 45.082 261.745 cv
45.694 261.745 46.15 261.445 46.462 260.845 cv
46.762 260.245 46.918 259.345 46.918 258.145 cv
46.918 256.945 46.762 256.045 46.462 255.445 cv
46.15 254.845 45.694 254.545 45.082 254.545 cv
45.082 253.609 mo
46.054 253.609 46.798 254.005 47.326 254.773 cv
47.842 255.553 48.106 256.681 48.106 258.145 cv
48.106 259.621 47.842 260.749 47.326 261.517 cv
46.798 262.285 46.054 262.669 45.082 262.669 cv
44.098 262.669 43.342 262.285 42.826 261.517 cv
42.31 260.749 42.058 259.621 42.058 258.145 cv
42.058 256.681 42.31 255.553 42.826 254.773 cv
43.342 254.005 44.098 253.609 45.082 253.609 cv
f
50.182 261.025 mo
51.418 261.025 li
51.418 262.513 li
50.182 262.513 li
50.182 261.025 li
f
53.6979 253.765 mo
59.3259 253.765 li
59.3259 254.269 li
56.1459 262.513 li
54.9099 262.513 li
57.8979 254.761 li
53.6979 254.761 li
53.6979 253.765 li
f
64.306 257.665 mo
63.778 257.665 63.358 257.857 63.046 258.217 cv
62.734 258.577 62.578 259.081 62.578 259.705 cv
62.578 260.341 62.734 260.845 63.046 261.205 cv
63.358 261.565 63.778 261.745 64.306 261.745 cv
64.834 261.745 65.254 261.565 65.566 261.205 cv
65.878 260.845 66.034 260.341 66.034 259.705 cv
66.034 259.081 65.878 258.577 65.566 258.217 cv
65.254 257.857 64.834 257.665 64.306 257.665 cv
66.658 253.957 mo
66.658 255.037 li
66.358 254.893 66.058 254.785 65.758 254.713 cv
65.446 254.641 65.146 254.605 64.858 254.605 cv
64.066 254.605 63.466 254.869 63.058 255.397 cv
62.65 255.925 62.41 256.729 62.362 257.785 cv
62.59 257.449 62.878 257.185 63.226 257.005 cv
63.574 256.825 63.958 256.729 64.378 256.729 cv
65.254 256.729 65.95 257.005 66.454 257.533 cv
66.958 258.061 67.222 258.793 67.222 259.705 cv
67.222 260.605 66.946 261.325 66.418 261.865 cv
65.89 262.405 65.182 262.669 64.306 262.669 cv
63.298 262.669 62.518 262.285 61.99 261.517 cv
61.45 260.749 61.186 259.621 61.186 258.145 cv
61.186 256.765 61.51 255.661 62.17 254.845 cv
62.818 254.029 63.706 253.609 64.81 253.609 cv
65.098 253.609 65.398 253.645 65.71 253.693 cv
66.01 253.753 66.322 253.837 66.658 253.957 cv
f
72 216 mo
76 216 li
f
72 216 mo
76 216 li
@
518.4 216 mo
514.4 216 li
f
518.4 216 mo
514.4 216 li
@
45.082 211.345 mo
44.47 211.345 44.014 211.645 43.702 212.245 cv
43.39 212.845 43.246 213.745 43.246 214.945 cv
43.246 216.145 43.39 217.045 43.702 217.645 cv
44.014 218.245 44.47 218.545 45.082 218.545 cv
45.694 218.545 46.15 218.245 46.462 217.645 cv
46.762 217.045 46.918 216.145 46.918 214.945 cv
46.918 213.745 46.762 212.845 46.462 212.245 cv
46.15 211.645 45.694 211.345 45.082 211.345 cv
45.082 210.409 mo
46.054 210.409 46.798 210.805 47.326 211.573 cv
47.842 212.353 48.106 213.481 48.106 214.945 cv
48.106 216.421 47.842 217.549 47.326 218.317 cv
46.798 219.085 46.054 219.469 45.082 219.469 cv
44.098 219.469 43.342 219.085 42.826 218.317 cv
42.31 217.549 42.058 216.421 42.058 214.945 cv
42.058 213.481 42.31 212.353 42.826 211.573 cv
43.342 210.805 44.098 210.409 45.082 210.409 cv
f
50.182 217.825 mo
51.418 217.825 li
51.418 219.313 li
50.182 219.313 li
50.182 217.825 li
f
53.6979 210.565 mo
59.3259 210.565 li
59.3259 211.069 li
56.1459 219.313 li
54.9099 219.313 li
57.8979 211.561 li
53.6979 211.561 li
53.6979 210.565 li
f
64.162 215.161 mo
63.598 215.161 63.154 215.317 62.83 215.617 cv
62.506 215.917 62.35 216.325 62.35 216.853 cv
62.35 217.381 62.506 217.801 62.83 218.101 cv
63.154 218.401 63.598 218.545 64.162 218.545 cv
64.714 218.545 65.158 218.401 65.482 218.089 cv
65.806 217.789 65.974 217.381 65.974 216.853 cv
65.974 216.325 65.806 215.917 65.494 215.617 cv
65.17 215.317 64.726 215.161 64.162 215.161 cv
62.974 214.657 mo
62.47 214.537 62.074 214.297 61.786 213.949 cv
61.498 213.601 61.366 213.181 61.366 212.677 cv
61.366 211.981 61.606 211.429 62.11 211.021 cv
62.602 210.613 63.286 210.409 64.162 210.409 cv
65.026 210.409 65.71 210.613 66.214 211.021 cv
66.706 211.429 66.958 211.981 66.958 212.677 cv
66.958 213.181 66.814 213.601 66.526 213.949 cv
66.238 214.297 65.854 214.537 65.35 214.657 cv
65.914 214.789 66.358 215.053 66.682 215.437 cv
66.994 215.821 67.162 216.301 67.162 216.853 cv
67.162 217.705 66.898 218.353 66.382 218.797 cv
65.854 219.253 65.122 219.469 64.162 219.469 cv
63.19 219.469 62.446 219.253 61.93 218.797 cv
61.414 218.353 61.162 217.705 61.162 216.853 cv
61.162 216.301 61.318 215.821 61.642 215.437 cv
61.954 215.053 62.398 214.789 62.974 214.657 cv
62.542 212.785 mo
62.542 213.241 62.674 213.601 62.962 213.853 cv
63.25 214.105 63.646 214.225 64.162 214.225 cv
64.666 214.225 65.062 214.105 65.35 213.853 cv
65.638 213.601 65.782 213.241 65.782 212.785 cv
65.782 212.329 65.638 211.981 65.35 211.729 cv
65.062 211.477 64.666 211.345 64.162 211.345 cv
63.646 211.345 63.25 211.477 62.962 211.729 cv
62.674 211.981 62.542 212.329 62.542 212.785 cv
f
72 172.8 mo
76 172.8 li
f
72 172.8 mo
76 172.8 li
@
518.4 172.8 mo
514.4 172.8 li
f
518.4 172.8 mo
514.4 172.8 li
@
45.082 168.145 mo
44.47 168.145 44.014 168.445 43.702 169.045 cv
43.39 169.645 43.246 170.545 43.246 171.745 cv
43.246 172.945 43.39 173.845 43.702 174.445 cv
44.014 175.045 44.47 175.345 45.082 175.345 cv
45.694 175.345 46.15 175.045 46.462 174.445 cv
46.762 173.845 46.918 172.945 46.918 171.745 cv
46.918 170.545 46.762 169.645 46.462 169.045 cv
46.15 168.445 45.694 168.145 45.082 168.145 cv
45.082 167.209 mo
46.054 167.209 46.798 167.605 47.326 168.373 cv
47.842 169.153 48.106 170.281 48.106 171.745 cv
48.106 173.221 47.842 174.349 47.326 175.117 cv
46.798 175.885 46.054 176.269 45.082 176.269 cv
44.098 176.269 43.342 175.885 42.826 175.117 cv
42.31 174.349 42.058 173.221 42.058 171.745 cv
42.058 170.281 42.31 169.153 42.826 168.373 cv
43.342 167.605 44.098 167.209 45.082 167.209 cv
f
50.182 174.625 mo
51.418 174.625 li
51.418 176.113 li
50.182 176.113 li
50.182 174.625 li
f
56.5299 171.961 mo
55.9659 171.961 55.5219 172.117 55.1979 172.417 cv
54.8739 172.717 54.7179 173.125 54.7179 173.653 cv
54.7179 174.181 54.8739 174.601 55.1979 174.901 cv
55.5219 175.201 55.9659 175.345 56.5299 175.345 cv
57.0819 175.345 57.5259 175.201 57.8499 174.889 cv
58.1739 174.589 58.3419 174.181 58.3419 173.653 cv
58.3419 173.125 58.1739 172.717 57.8619 172.417 cv
57.5379 172.117 57.0939 171.961 56.5299 171.961 cv
55.3419 171.457 mo
54.8379 171.337 54.4419 171.097 54.1539 170.749 cv
53.8659 170.401 53.7339 169.981 53.7339 169.477 cv
53.7339 168.781 53.9739 168.229 54.4779 167.821 cv
54.9699 167.413 55.6539 167.209 56.5299 167.209 cv
57.3939 167.209 58.0779 167.413 58.5819 167.821 cv
59.0739 168.229 59.3259 168.781 59.3259 169.477 cv
59.3259 169.981 59.1819 170.401 58.8939 170.749 cv
58.6059 171.097 58.2219 171.337 57.7179 171.457 cv
58.2819 171.589 58.7259 171.853 59.0499 172.237 cv
59.3619 172.621 59.5299 173.101 59.5299 173.653 cv
59.5299 174.505 59.2659 175.153 58.7499 175.597 cv
58.2219 176.053 57.4899 176.269 56.5299 176.269 cv
55.5579 176.269 54.8139 176.053 54.2979 175.597 cv
53.7819 175.153 53.5299 174.505 53.5299 173.653 cv
53.5299 173.101 53.6859 172.621 54.0099 172.237 cv
54.3219 171.853 54.7659 171.589 55.3419 171.457 cv
54.9099 169.585 mo
54.9099 170.041 55.0419 170.401 55.3299 170.653 cv
55.6179 170.905 56.0139 171.025 56.5299 171.025 cv
57.0339 171.025 57.4299 170.905 57.7179 170.653 cv
58.0059 170.401 58.1499 170.041 58.1499 169.585 cv
58.1499 169.129 58.0059 168.781 57.7179 168.529 cv
57.4299 168.277 57.0339 168.145 56.5299 168.145 cv
56.0139 168.145 55.6179 168.277 55.3299 168.529 cv
55.0419 168.781 54.9099 169.129 54.9099 169.585 cv
f
64.162 168.145 mo
63.55 168.145 63.094 168.445 62.782 169.045 cv
62.47 169.645 62.326 170.545 62.326 171.745 cv
62.326 172.945 62.47 173.845 62.782 174.445 cv
63.094 175.045 63.55 175.345 64.162 175.345 cv
64.774 175.345 65.23 175.045 65.542 174.445 cv
65.842 173.845 65.998 172.945 65.998 171.745 cv
65.998 170.545 65.842 169.645 65.542 169.045 cv
65.23 168.445 64.774 168.145 64.162 168.145 cv
64.162 167.209 mo
65.134 167.209 65.878 167.605 66.406 168.373 cv
66.922 169.153 67.186 170.281 67.186 171.745 cv
67.186 173.221 66.922 174.349 66.406 175.117 cv
65.878 175.885 65.134 176.269 64.162 176.269 cv
63.178 176.269 62.422 175.885 61.906 175.117 cv
61.39 174.349 61.138 173.221 61.138 171.745 cv
61.138 170.281 61.39 169.153 61.906 168.373 cv
62.422 167.605 63.178 167.209 64.162 167.209 cv
f
72 129.6 mo
76 129.6 li
f
72 129.6 mo
76 129.6 li
@
518.4 129.6 mo
514.4 129.6 li
f
518.4 129.6 mo
514.4 129.6 li
@
45.082 124.945 mo
44.47 124.945 44.014 125.245 43.702 125.845 cv
43.39 126.445 43.246 127.345 43.246 128.545 cv
43.246 129.745 43.39 130.645 43.702 131.245 cv
44.014 131.845 44.47 132.145 45.082 132.145 cv
45.694 132.145 46.15 131.845 46.462 131.245 cv
46.762 130.645 46.918 129.745 46.918 128.545 cv
46.918 127.345 46.762 126.445 46.462 125.845 cv
46.15 125.245 45.694 124.945 45.082 124.945 cv
45.082 124.009 mo
46.054 124.009 46.798 124.405 47.326 125.173 cv
47.842 125.953 48.106 127.081 48.106 128.545 cv
48.106 130.021 47.842 131.149 47.326 131.917 cv
46.798 132.685 46.054 133.069 45.082 133.069 cv
44.098 133.069 43.342 132.685 42.826 131.917 cv
42.31 131.149 42.058 130.021 42.058 128.545 cv
42.058 127.081 42.31 125.953 42.826 125.173 cv
43.342 124.405 44.098 124.009 45.082 124.009 cv
f
50.182 131.425 mo
51.418 131.425 li
51.418 132.913 li
50.182 132.913 li
50.182 131.425 li
f
56.5299 128.761 mo
55.9659 128.761 55.5219 128.917 55.1979 129.217 cv
54.8739 129.517 54.7179 129.925 54.7179 130.453 cv
54.7179 130.981 54.8739 131.401 55.1979 131.701 cv
55.5219 132.001 55.9659 132.145 56.5299 132.145 cv
57.0819 132.145 57.5259 132.001 57.8499 131.689 cv
58.1739 131.389 58.3419 130.981 58.3419 130.453 cv
58.3419 129.925 58.1739 129.517 57.8619 129.217 cv
57.5379 128.917 57.0939 128.761 56.5299 128.761 cv
55.3419 128.257 mo
54.8379 128.137 54.4419 127.897 54.1539 127.549 cv
53.8659 127.201 53.7339 126.781 53.7339 126.277 cv
53.7339 125.581 53.9739 125.029 54.4779 124.621 cv
54.9699 124.213 55.6539 124.009 56.5299 124.009 cv
57.3939 124.009 58.0779 124.213 58.5819 124.621 cv
59.0739 125.029 59.3259 125.581 59.3259 126.277 cv
59.3259 126.781 59.1819 127.201 58.8939 127.549 cv
58.6059 127.897 58.2219 128.137 57.7179 128.257 cv
58.2819 128.389 58.7259 128.653 59.0499 129.037 cv
59.3619 129.421 59.5299 129.901 59.5299 130.453 cv
59.5299 131.305 59.2659 131.953 58.7499 132.397 cv
58.2219 132.853 57.4899 133.069 56.5299 133.069 cv
55.5579 133.069 54.8139 132.853 54.2979 132.397 cv
53.7819 131.953 53.5299 131.305 53.5299 130.453 cv
53.5299 129.901 53.6859 129.421 54.0099 129.037 cv
54.3219 128.653 54.7659 128.389 55.3419 128.257 cv
54.9099 126.385 mo
54.9099 126.841 55.0419 127.201 55.3299 127.453 cv
55.6179 127.705 56.0139 127.825 56.5299 127.825 cv
57.0339 127.825 57.4299 127.705 57.7179 127.453 cv
58.0059 127.201 58.1499 126.841 58.1499 126.385 cv
58.1499 125.929 58.0059 125.581 57.7179 125.329 cv
57.4299 125.077 57.0339 124.945 56.5299 124.945 cv
56.0139 124.945 55.6179 125.077 55.3299 125.329 cv
55.0419 125.581 54.9099 125.929 54.9099 126.385 cv
f
62.65 131.917 mo
66.778 131.917 li
66.778 132.913 li
61.222 132.913 li
61.222 131.917 li
61.666 131.461 62.278 130.837 63.058 130.045 cv
63.826 129.265 64.318 128.761 64.522 128.533 cv
64.906 128.113 65.17 127.753 65.314 127.453 cv
65.458 127.165 65.542 126.865 65.542 126.577 cv
65.542 126.121 65.374 125.737 65.05 125.449 cv
64.726 125.161 64.306 125.005 63.778 125.005 cv
63.406 125.005 63.01 125.077 62.602 125.197 cv
62.194 125.329 61.75 125.521 61.282 125.785 cv
61.282 124.585 li
61.762 124.393 62.206 124.249 62.614 124.153 cv
63.022 124.057 63.406 124.009 63.754 124.009 cv
64.654 124.009 65.374 124.237 65.914 124.693 cv
66.454 125.149 66.73 125.749 66.73 126.505 cv
66.73 126.865 66.658 127.213 66.526 127.525 cv
66.394 127.849 66.154 128.233 65.794 128.665 cv
65.698 128.785 65.386 129.109 64.858 129.649 cv
64.33 130.189 63.598 130.945 62.65 131.917 cv
f
72 86.4 mo
76 86.4 li
f
72 86.4 mo
76 86.4 li
@
518.4 86.4 mo
514.4 86.4 li
f
518.4 86.4 mo
514.4 86.4 li
@
45.082 81.744 mo
44.47 81.744 44.014 82.044 43.702 82.644 cv
43.39 83.244 43.246 84.144 43.246 85.344 cv
43.246 86.544 43.39 87.444 43.702 88.044 cv
44.014 88.644 44.47 88.944 45.082 88.944 cv
45.694 88.944 46.15 88.644 46.462 88.044 cv
46.762 87.444 46.918 86.544 46.918 85.344 cv
46.918 84.144 46.762 83.244 46.462 82.644 cv
46.15 82.044 45.694 81.744 45.082 81.744 cv
45.082 80.808 mo
46.054 80.808 46.798 81.204 47.326 81.972 cv
47.842 82.752 48.106 83.88 48.106 85.344 cv
48.106 86.82 47.842 87.948 47.326 88.716 cv
46.798 89.484 46.054 89.868 45.082 89.868 cv
44.098 89.868 43.342 89.484 42.826 88.716 cv
42.31 87.948 42.058 86.82 42.058 85.344 cv
42.058 83.88 42.31 82.752 42.826 81.972 cv
43.342 81.204 44.098 80.808 45.082 80.808 cv
f
50.182 88.224 mo
51.418 88.224 li
51.418 89.712 li
50.182 89.712 li
50.182 88.224 li
f
56.5299 85.56 mo
55.9659 85.56 55.5219 85.716 55.1979 86.016 cv
54.8739 86.316 54.7179 86.724 54.7179 87.252 cv
54.7179 87.78 54.8739 88.2 55.1979 88.5 cv
55.5219 88.8 55.9659 88.944 56.5299 88.944 cv
57.0819 88.944 57.5259 88.8 57.8499 88.488 cv
58.1739 88.188 58.3419 87.78 58.3419 87.252 cv
58.3419 86.724 58.1739 86.316 57.8619 86.016 cv
57.5379 85.716 57.0939 85.56 56.5299 85.56 cv
55.3419 85.056 mo
54.8379 84.936 54.4419 84.696 54.1539 84.348 cv
53.8659 84 53.7339 83.58 53.7339 83.076 cv
53.7339 82.38 53.9739 81.828 54.4779 81.42 cv
54.9699 81.012 55.6539 80.808 56.5299 80.808 cv
57.3939 80.808 58.0779 81.012 58.5819 81.42 cv
59.0739 81.828 59.3259 82.38 59.3259 83.076 cv
59.3259 83.58 59.1819 84 58.8939 84.348 cv
58.6059 84.696 58.2219 84.936 57.7179 85.056 cv
58.2819 85.188 58.7259 85.452 59.0499 85.836 cv
59.3619 86.22 59.5299 86.7 59.5299 87.252 cv
59.5299 88.104 59.2659 88.752 58.7499 89.196 cv
58.2219 89.652 57.4899 89.868 56.5299 89.868 cv
55.5579 89.868 54.8139 89.652 54.2979 89.196 cv
53.7819 88.752 53.5299 88.104 53.5299 87.252 cv
53.5299 86.7 53.6859 86.22 54.0099 85.836 cv
54.3219 85.452 54.7659 85.188 55.3419 85.056 cv
54.9099 83.184 mo
54.9099 83.64 55.0419 84 55.3299 84.252 cv
55.6179 84.504 56.0139 84.624 56.5299 84.624 cv
57.0339 84.624 57.4299 84.504 57.7179 84.252 cv
58.0059 84 58.1499 83.64 58.1499 83.184 cv
58.1499 82.728 58.0059 82.38 57.7179 82.128 cv
57.4299 81.876 57.0339 81.744 56.5299 81.744 cv
56.0139 81.744 55.6179 81.876 55.3299 82.128 cv
55.0419 82.38 54.9099 82.728 54.9099 83.184 cv
f
64.882 81.996 mo
61.894 86.664 li
64.882 86.664 li
64.882 81.996 li
64.57 80.964 mo
66.058 80.964 li
66.058 86.664 li
67.306 86.664 li
67.306 87.648 li
66.058 87.648 li
66.058 89.712 li
64.882 89.712 li
64.882 87.648 li
60.934 87.648 li
60.934 86.508 li
64.57 80.964 li
f
72 43.2 mo
76 43.2 li
f
72 43.2 mo
76 43.2 li
@
518.4 43.2 mo
514.4 43.2 li
f
518.4 43.2 mo
514.4 43.2 li
@
45.082 38.545 mo
44.47 38.545 44.014 38.845 43.702 39.445 cv
43.39 40.045 43.246 40.945 43.246 42.145 cv
43.246 43.345 43.39 44.245 43.702 44.845 cv
44.014 45.445 44.47 45.745 45.082 45.745 cv
45.694 45.745 46.15 45.445 46.462 44.845 cv
46.762 44.245 46.918 43.345 46.918 42.145 cv
46.918 40.945 46.762 40.045 46.462 39.445 cv
46.15 38.845 45.694 38.545 45.082 38.545 cv
45.082 37.609 mo
46.054 37.609 46.798 38.005 47.326 38.773 cv
47.842 39.553 48.106 40.681 48.106 42.145 cv
48.106 43.621 47.842 44.749 47.326 45.517 cv
46.798 46.285 46.054 46.669 45.082 46.669 cv
44.098 46.669 43.342 46.285 42.826 45.517 cv
42.31 44.749 42.058 43.621 42.058 42.145 cv
42.058 40.681 42.31 39.553 42.826 38.773 cv
43.342 38.005 44.098 37.609 45.082 37.609 cv
f
50.182 45.025 mo
51.418 45.025 li
51.418 46.513 li
50.182 46.513 li
50.182 45.025 li
f
56.5299 42.361 mo
55.9659 42.361 55.5219 42.517 55.1979 42.817 cv
54.8739 43.117 54.7179 43.525 54.7179 44.053 cv
54.7179 44.581 54.8739 45.001 55.1979 45.301 cv
55.5219 45.601 55.9659 45.745 56.5299 45.745 cv
57.0819 45.745 57.5259 45.601 57.8499 45.289 cv
58.1739 44.989 58.3419 44.581 58.3419 44.053 cv
58.3419 43.525 58.1739 43.117 57.8619 42.817 cv
57.5379 42.517 57.0939 42.361 56.5299 42.361 cv
55.3419 41.857 mo
54.8379 41.737 54.4419 41.497 54.1539 41.149 cv
53.8659 40.801 53.7339 40.381 53.7339 39.877 cv
53.7339 39.181 53.9739 38.629 54.4779 38.221 cv
54.9699 37.813 55.6539 37.609 56.5299 37.609 cv
57.3939 37.609 58.0779 37.813 58.5819 38.221 cv
59.0739 38.629 59.3259 39.181 59.3259 39.877 cv
59.3259 40.381 59.1819 40.801 58.8939 41.149 cv
58.6059 41.497 58.2219 41.737 57.7179 41.857 cv
58.2819 41.989 58.7259 42.253 59.0499 42.637 cv
59.3619 43.021 59.5299 43.501 59.5299 44.053 cv
59.5299 44.905 59.2659 45.553 58.7499 45.997 cv
58.2219 46.453 57.4899 46.669 56.5299 46.669 cv
55.5579 46.669 54.8139 46.453 54.2979 45.997 cv
53.7819 45.553 53.5299 44.905 53.5299 44.053 cv
53.5299 43.501 53.6859 43.021 54.0099 42.637 cv
54.3219 42.253 54.7659 41.989 55.3419 41.857 cv
54.9099 39.985 mo
54.9099 40.441 55.0419 40.801 55.3299 41.053 cv
55.6179 41.305 56.0139 41.425 56.5299 41.425 cv
57.0339 41.425 57.4299 41.305 57.7179 41.053 cv
58.0059 40.801 58.1499 40.441 58.1499 39.985 cv
58.1499 39.529 58.0059 39.181 57.7179 38.929 cv
57.4299 38.677 57.0339 38.545 56.5299 38.545 cv
56.0139 38.545 55.6179 38.677 55.3299 38.929 cv
55.0419 39.181 54.9099 39.529 54.9099 39.985 cv
f
64.306 41.665 mo
63.778 41.665 63.358 41.857 63.046 42.217 cv
62.734 42.577 62.578 43.081 62.578 43.705 cv
62.578 44.341 62.734 44.845 63.046 45.205 cv
63.358 45.565 63.778 45.745 64.306 45.745 cv
64.834 45.745 65.254 45.565 65.566 45.205 cv
65.878 44.845 66.034 44.341 66.034 43.705 cv
66.034 43.081 65.878 42.577 65.566 42.217 cv
65.254 41.857 64.834 41.665 64.306 41.665 cv
66.658 37.957 mo
66.658 39.037 li
66.358 38.893 66.058 38.785 65.758 38.713 cv
65.446 38.641 65.146 38.605 64.858 38.605 cv
64.066 38.605 63.466 38.869 63.058 39.397 cv
62.65 39.925 62.41 40.729 62.362 41.785 cv
62.59 41.449 62.878 41.185 63.226 41.005 cv
63.574 40.825 63.958 40.729 64.378 40.729 cv
65.254 40.729 65.95 41.005 66.454 41.533 cv
66.958 42.061 67.222 42.793 67.222 43.705 cv
67.222 44.605 66.946 45.325 66.418 45.865 cv
65.89 46.405 65.182 46.669 64.306 46.669 cv
63.298 46.669 62.518 46.285 61.99 45.517 cv
61.45 44.749 61.186 43.621 61.186 42.145 cv
61.186 40.765 61.51 39.661 62.17 38.845 cv
62.818 38.029 63.706 37.609 64.81 37.609 cv
65.098 37.609 65.398 37.645 65.71 37.693 cv
66.01 37.753 66.322 37.837 66.658 37.957 cv
f
37.7084 219.014 mo
37.6364 219.122 li
37.5284 219.158 li
26.4224 216.386 li
25.8284 216.242 25.2524 216.008 24.6764 215.702 cv
24.1184 215.396 23.5964 215.018 23.1104 214.55 cv
22.6424 214.1 22.2644 213.596 21.9764 213.038 cv
21.6884 212.498 21.5444 211.904 21.5444 211.274 cv
21.5444 210.842 21.6524 210.428 21.8504 210.068 cv
22.0484 209.708 22.3184 209.438 22.6784 209.222 cv
23.0384 209.006 23.4344 208.898 23.8664 208.898 cv
24.2984 208.898 24.6944 208.988 25.0904 209.15 cv
25.4864 209.312 25.8464 209.546 26.1884 209.834 cv
26.5304 210.122 26.8004 210.446 26.9984 210.77 cv
27.1244 210.59 27.2864 210.41 27.4664 210.266 cv
27.6644 210.122 27.8624 209.996 28.0784 209.888 cv
28.2944 209.798 28.5104 209.726 28.7624 209.672 cv
29.0144 209.618 29.2664 209.582 29.4824 209.582 cv
30.0944 209.582 30.7064 209.726 31.3004 209.978 cv
31.9124 210.248 32.4524 210.608 32.9384 211.058 cv
33.4244 211.526 33.8024 212.048 34.0724 212.624 cv
34.3424 213.218 34.4864 213.812 34.4864 214.424 cv
34.4864 215.108 34.3064 215.702 33.9464 216.242 cv
33.5864 216.782 33.1004 217.16 32.4524 217.358 cv
37.6004 218.654 li
37.6724 218.654 37.7084 218.708 37.7084 218.798 cv
37.7084 219.014 li
34.0184 214.388 mo
34.0184 213.848 33.8564 213.362 33.4964 212.93 cv
33.1364 212.498 32.6864 212.138 32.1464 211.85 cv
31.6064 211.562 31.0484 211.346 30.4364 211.202 cv
29.8424 211.058 29.3024 210.968 28.7984 210.968 cv
28.1864 210.968 27.7184 211.148 27.3584 211.49 cv
27.5204 211.904 27.5924 212.3 27.5924 212.696 cv
27.5924 213.65 27.4304 214.118 27.1064 214.118 cv
26.6924 214.118 26.4764 213.578 26.4764 212.498 cv
26.4764 212.12 26.5484 211.76 26.6564 211.436 cv
26.4584 211.184 26.1704 210.95 25.7744 210.734 cv
25.3964 210.518 25.0004 210.356 24.5684 210.248 cv
24.1544 210.14 23.7584 210.086 23.3804 210.086 cv
22.9844 210.086 22.6604 210.194 22.4084 210.41 cv
22.1564 210.626 22.0124 210.914 22.0124 211.31 cv
22.0124 212.048 22.2464 212.732 22.6964 213.362 cv
23.1464 213.992 23.7224 214.514 24.4064 214.946 cv
25.0904 215.378 25.8104 215.702 26.5304 215.882 cv
30.5084 216.872 li
30.7964 216.944 31.1024 216.98 31.4264 216.998 cv
32.1824 216.998 32.8124 216.764 33.2984 216.26 cv
33.7844 215.774 34.0184 215.144 34.0184 214.388 cv
27.0524 213.578 mo
27.1064 213.398 27.1244 213.11 27.1244 212.678 cv
27.1244 212.48 27.0884 212.282 27.0164 212.066 cv
26.9984 212.138 li
26.9624 212.282 26.9444 212.408 26.9444 212.552 cv
26.9444 213.092 26.9804 213.434 27.0524 213.578 cv
f
283.818 384.636 mo
514.236 384.636 li
514.236 285.076 li
283.818 285.076 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
1 lw
0 lj
283.818 384.636 mo
514.236 384.636 li
514.236 285.076 li
283.818 285.076 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 lj
285.483 291.57 mo
293.811 291.57 li
.712398 0 .305882 0 cmyk
@
297.142 291.57 mo
305.47 291.57 li
@
289.647 295.734 mo
289.647 287.406 li
@
301.306 295.734 mo
301.306 287.406 li
@
285.483 294.57 mo
285.483 288.57 li
f
.5 lw
285.483 294.57 mo
285.483 288.57 li
@
297.142 294.57 mo
297.142 288.57 li
f
297.142 294.57 mo
297.142 288.57 li
@
293.811 294.57 mo
293.811 288.57 li
f
293.811 294.57 mo
293.811 288.57 li
@
305.47 294.57 mo
305.47 288.57 li
f
305.47 294.57 mo
305.47 288.57 li
@
292.647 295.734 mo
286.647 295.734 li
f
292.647 295.734 mo
286.647 295.734 li
@
304.306 295.734 mo
298.306 295.734 li
f
304.306 295.734 mo
298.306 295.734 li
@
292.647 287.406 mo
286.647 287.406 li
f
292.647 287.406 mo
286.647 287.406 li
@
304.306 287.406 mo
298.306 287.406 li
f
304.306 287.406 mo
298.306 287.406 li
@
gsave
286.397 294.82 mo
292.897 294.82 li
292.897 288.32 li
286.397 288.32 li
cp
clp
289.647 294.57 mo
290.443 294.57 291.206 294.254 291.768 293.691 cv
292.331 293.129 292.647 292.366 292.647 291.57 cv
292.647 290.774 292.331 290.011 291.768 289.449 cv
291.206 288.886 290.443 288.57 289.647 288.57 cv
288.851 288.57 288.088 288.886 287.526 289.449 cv
286.963 290.011 286.647 290.774 286.647 291.57 cv
286.647 292.366 286.963 293.129 287.526 293.691 cv
288.088 294.254 288.851 294.57 289.647 294.57 cv
cp
f
289.647 294.57 mo
290.443 294.57 291.206 294.254 291.768 293.691 cv
292.331 293.129 292.647 292.366 292.647 291.57 cv
292.647 290.774 292.331 290.011 291.768 289.449 cv
291.206 288.886 290.443 288.57 289.647 288.57 cv
288.851 288.57 288.088 288.886 287.526 289.449 cv
286.963 290.011 286.647 290.774 286.647 291.57 cv
286.647 292.366 286.963 293.129 287.526 293.691 cv
288.088 294.254 288.851 294.57 289.647 294.57 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
298.056 294.82 mo
304.556 294.82 li
304.556 288.32 li
298.056 288.32 li
cp
clp
301.306 294.57 mo
302.102 294.57 302.865 294.254 303.427 293.691 cv
303.99 293.129 304.306 292.366 304.306 291.57 cv
304.306 290.774 303.99 290.011 303.427 289.449 cv
302.865 288.886 302.102 288.57 301.306 288.57 cv
300.51 288.57 299.747 288.886 299.185 289.449 cv
298.622 290.011 298.306 290.774 298.306 291.57 cv
298.306 292.366 298.622 293.129 299.185 293.691 cv
299.747 294.254 300.51 294.57 301.306 294.57 cv
cp
f
301.306 294.57 mo
302.102 294.57 302.865 294.254 303.427 293.691 cv
303.99 293.129 304.306 292.366 304.306 291.57 cv
304.306 290.774 303.99 290.011 303.427 289.449 cv
302.865 288.886 302.102 288.57 301.306 288.57 cv
300.51 288.57 299.747 288.886 299.185 289.449 cv
298.622 290.011 298.306 290.774 298.306 291.57 cv
298.306 292.366 298.622 293.129 299.185 293.691 cv
299.747 294.254 300.51 294.57 301.306 294.57 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
311.283 288.414 mo
312.108 288.414 li
312.108 290.904 li
315.089 290.904 li
315.089 288.414 li
315.914 288.414 li
315.914 294.485 li
315.089 294.485 li
315.089 291.595 li
312.108 291.595 li
312.108 294.485 li
311.283 294.485 li
311.283 288.414 li
1 /0 /CSD get_res sepcs
1 sep
f
319.278 290.454 mo
318.878 290.454 318.562 290.612 318.329 290.929 cv
318.095 291.245 317.979 291.67 317.979 292.211 cv
317.979 292.761 318.087 293.186 318.32 293.502 cv
318.553 293.819 318.87 293.969 319.278 293.969 cv
319.678 293.969 319.994 293.819 320.227 293.502 cv
320.461 293.186 320.577 292.761 320.577 292.211 cv
320.577 291.678 320.461 291.245 320.227 290.929 cv
319.994 290.612 319.678 290.454 319.278 290.454 cv
319.278 289.821 mo
319.928 289.821 320.436 290.038 320.81 290.454 cv
321.177 290.879 321.368 291.462 321.368 292.211 cv
321.368 292.961 321.177 293.544 320.81 293.96 cv
320.436 294.385 319.928 294.593 319.278 294.593 cv
318.62 294.593 318.104 294.385 317.737 293.96 cv
317.371 293.544 317.188 292.961 317.188 292.211 cv
317.188 291.462 317.371 290.879 317.737 290.454 cv
318.104 290.038 318.62 289.821 319.278 289.821 cv
f
325.516 290.063 mo
325.516 290.771 li
325.299 290.671 325.083 290.587 324.858 290.529 cv
324.625 290.479 324.391 290.446 324.15 290.446 cv
323.775 290.446 323.492 290.504 323.309 290.621 cv
323.126 290.737 323.034 290.904 323.034 291.129 cv
323.034 291.304 323.101 291.437 323.234 291.537 cv
323.367 291.637 323.634 291.737 324.033 291.82 cv
324.291 291.878 li
324.824 291.995 325.199 292.161 325.424 292.361 cv
325.641 292.57 325.757 292.861 325.757 293.227 cv
325.757 293.652 325.591 293.985 325.258 294.227 cv
324.924 294.477 324.458 294.593 323.875 294.593 cv
323.625 294.593 323.375 294.568 323.109 294.527 cv
322.842 294.485 322.568 294.418 322.276 294.318 cv
322.276 293.544 li
322.551 293.694 322.826 293.802 323.092 293.869 cv
323.359 293.944 323.625 293.977 323.892 293.977 cv
324.242 293.977 324.516 293.919 324.708 293.802 cv
324.891 293.685 324.991 293.511 324.991 293.286 cv
324.991 293.086 324.916 292.928 324.783 292.819 cv
324.65 292.711 324.35 292.603 323.883 292.503 cv
323.625 292.445 li
323.159 292.345 322.817 292.195 322.618 291.995 cv
322.409 291.795 322.309 291.52 322.309 291.162 cv
322.309 290.737 322.459 290.404 322.759 290.171 cv
323.059 289.938 323.492 289.821 324.058 289.821 cv
324.333 289.821 324.591 289.846 324.841 289.888 cv
325.083 289.93 325.307 289.988 325.516 290.063 cv
f
327.689 288.639 mo
327.689 289.93 li
329.23 289.93 li
329.23 290.513 li
327.689 290.513 li
327.689 292.986 li
327.689 293.361 327.739 293.602 327.839 293.702 cv
327.939 293.81 328.147 293.86 328.464 293.86 cv
329.23 293.86 li
329.23 294.485 li
328.464 294.485 li
327.881 294.485 327.481 294.377 327.265 294.16 cv
327.048 293.944 326.94 293.552 326.94 292.986 cv
326.94 290.513 li
326.39 290.513 li
326.39 289.93 li
326.94 289.93 li
326.94 288.639 li
327.689 288.639 li
f
330.246 288.414 mo
331.07 288.414 li
331.07 293.794 li
334.027 293.794 li
334.027 294.485 li
330.246 294.485 li
330.246 288.414 li
f
334.851 289.93 mo
335.601 289.93 li
335.601 294.485 li
334.851 294.485 li
334.851 289.93 li
334.851 288.156 mo
335.601 288.156 li
335.601 289.105 li
334.851 289.105 li
334.851 288.156 li
f
339.473 288.156 mo
339.473 288.78 li
338.757 288.78 li
338.491 288.78 338.299 288.839 338.199 288.947 cv
338.091 289.055 338.041 289.247 338.041 289.53 cv
338.041 289.93 li
339.274 289.93 li
339.274 290.513 li
338.041 290.513 li
338.041 294.485 li
337.291 294.485 li
337.291 290.513 li
336.575 290.513 li
336.575 289.93 li
337.291 289.93 li
337.291 289.613 li
337.291 289.113 337.408 288.739 337.641 288.505 cv
337.874 288.272 338.249 288.156 338.766 288.156 cv
339.473 288.156 li
f
343.996 292.02 mo
343.996 292.386 li
340.556 292.386 li
340.589 292.903 340.739 293.302 341.022 293.569 cv
341.297 293.835 341.68 293.969 342.18 293.969 cv
342.463 293.969 342.746 293.935 343.013 293.869 cv
343.279 293.802 343.554 293.694 343.821 293.544 cv
343.821 294.252 li
343.554 294.368 343.279 294.46 342.996 294.51 cv
342.713 294.56 342.422 294.593 342.138 294.593 cv
341.406 294.593 340.831 294.385 340.406 293.969 cv
339.981 293.552 339.773 292.978 339.773 292.253 cv
339.773 291.512 339.973 290.921 340.373 290.479 cv
340.773 290.046 341.322 289.821 342.005 289.821 cv
342.621 289.821 343.104 290.021 343.463 290.413 cv
343.812 290.812 343.996 291.345 343.996 292.02 cv
343.246 291.803 mo
343.238 291.395 343.121 291.07 342.905 290.821 cv
342.68 290.579 342.38 290.454 342.014 290.454 cv
341.597 290.454 341.264 290.579 341.014 290.812 cv
340.764 291.046 340.614 291.379 340.581 291.803 cv
343.246 291.803 li
f
348.892 288.614 mo
348.892 289.413 li
348.576 289.263 348.285 289.155 348.01 289.08 cv
347.727 289.013 347.46 288.972 347.21 288.972 cv
346.761 288.972 346.411 289.063 346.169 289.23 cv
345.928 289.405 345.811 289.655 345.811 289.971 cv
345.811 290.238 345.886 290.446 346.053 290.579 cv
346.211 290.721 346.519 290.829 346.969 290.912 cv
347.468 291.012 li
348.076 291.129 348.526 291.337 348.818 291.628 cv
349.109 291.928 349.259 292.32 349.259 292.811 cv
349.259 293.402 349.059 293.844 348.668 294.144 cv
348.268 294.443 347.693 294.593 346.935 294.593 cv
346.644 294.593 346.336 294.56 346.011 294.502 cv
345.686 294.443 345.353 294.352 345.012 294.218 cv
345.012 293.369 li
345.345 293.561 345.67 293.702 345.986 293.794 cv
346.302 293.894 346.619 293.935 346.935 293.935 cv
347.402 293.935 347.76 293.844 348.018 293.661 cv
348.268 293.477 348.401 293.219 348.401 292.869 cv
348.401 292.57 348.31 292.336 348.126 292.17 cv
347.943 292.003 347.643 291.878 347.227 291.795 cv
346.727 291.695 li
346.111 291.579 345.67 291.387 345.395 291.12 cv
345.12 290.862 344.987 290.504 344.987 290.038 cv
344.987 289.505 345.17 289.08 345.553 288.772 cv
345.928 288.464 346.452 288.306 347.119 288.306 cv
347.402 288.306 347.685 288.331 347.985 288.381 cv
348.276 288.431 348.576 288.514 348.892 288.614 cv
f
351.249 288.639 mo
351.249 289.93 li
352.79 289.93 li
352.79 290.513 li
351.249 290.513 li
351.249 292.986 li
351.249 293.361 351.299 293.602 351.399 293.702 cv
351.499 293.81 351.707 293.86 352.024 293.86 cv
352.79 293.86 li
352.79 294.485 li
352.024 294.485 li
351.441 294.485 351.041 294.377 350.825 294.16 cv
350.608 293.944 350.5 293.552 350.5 292.986 cv
350.5 290.513 li
349.95 290.513 li
349.95 289.93 li
350.5 289.93 li
350.5 288.639 li
351.249 288.639 li
f
355.671 294.901 mo
355.455 295.434 355.247 295.792 355.047 295.959 cv
354.847 296.126 354.58 296.209 354.247 296.209 cv
353.648 296.209 li
353.648 295.584 li
354.089 295.584 li
354.289 295.584 354.447 295.534 354.564 295.434 cv
354.68 295.334 354.805 295.11 354.947 294.743 cv
355.08 294.41 li
353.24 289.93 li
354.031 289.93 li
355.455 293.494 li
356.879 289.93 li
357.67 289.93 li
355.671 294.901 li
f
358.703 288.156 mo
359.452 288.156 li
359.452 294.485 li
358.703 294.485 li
358.703 288.156 li
f
364.915 292.02 mo
364.915 292.386 li
361.476 292.386 li
361.509 292.903 361.659 293.302 361.942 293.569 cv
362.217 293.835 362.6 293.969 363.1 293.969 cv
363.383 293.969 363.666 293.935 363.933 293.869 cv
364.199 293.802 364.474 293.694 364.741 293.544 cv
364.741 294.252 li
364.474 294.368 364.199 294.46 363.916 294.51 cv
363.633 294.56 363.341 294.593 363.058 294.593 cv
362.325 294.593 361.751 294.385 361.326 293.969 cv
360.901 293.552 360.693 292.978 360.693 292.253 cv
360.693 291.512 360.893 290.921 361.293 290.479 cv
361.693 290.046 362.242 289.821 362.925 289.821 cv
363.541 289.821 364.024 290.021 364.382 290.413 cv
364.732 290.812 364.915 291.345 364.915 292.02 cv
364.166 291.803 mo
364.158 291.395 364.041 291.07 363.824 290.821 cv
363.6 290.579 363.3 290.454 362.933 290.454 cv
362.517 290.454 362.184 290.579 361.934 290.812 cv
361.684 291.046 361.534 291.379 361.501 291.803 cv
364.166 291.803 li
f
369.604 295.859 mo
369.604 296.442 li
365.282 296.442 li
365.282 295.859 li
369.604 295.859 li
f
374.093 291.737 mo
374.093 294.485 li
373.343 294.485 li
373.343 291.762 li
373.343 291.329 373.252 291.012 373.085 290.796 cv
372.919 290.579 372.669 290.471 372.336 290.471 cv
371.928 290.471 371.611 290.604 371.378 290.862 cv
371.145 291.12 371.028 291.47 371.028 291.912 cv
371.028 294.485 li
370.279 294.485 li
370.279 288.156 li
371.028 288.156 li
371.028 290.637 li
371.203 290.371 371.411 290.163 371.661 290.03 cv
371.903 289.896 372.186 289.821 372.502 289.821 cv
373.019 289.821 373.418 289.988 373.685 290.313 cv
373.951 290.637 374.093 291.112 374.093 291.737 cv
f
379.048 295.859 mo
379.048 296.442 li
374.726 296.442 li
374.726 295.859 li
379.048 295.859 li
f
383.42 288.614 mo
383.42 289.413 li
383.104 289.263 382.812 289.155 382.538 289.08 cv
382.254 289.013 381.988 288.972 381.738 288.972 cv
381.288 288.972 380.939 289.063 380.697 289.23 cv
380.456 289.405 380.339 289.655 380.339 289.971 cv
380.339 290.238 380.414 290.446 380.58 290.579 cv
380.739 290.721 381.047 290.829 381.497 290.912 cv
381.996 291.012 li
382.604 291.129 383.054 291.337 383.345 291.628 cv
383.637 291.928 383.787 292.32 383.787 292.811 cv
383.787 293.402 383.587 293.844 383.195 294.144 cv
382.796 294.443 382.221 294.593 381.463 294.593 cv
381.172 294.593 380.864 294.56 380.539 294.502 cv
380.214 294.443 379.881 294.352 379.539 294.218 cv
379.539 293.369 li
379.873 293.561 380.197 293.702 380.514 293.794 cv
380.83 293.894 381.147 293.935 381.463 293.935 cv
381.93 293.935 382.288 293.844 382.546 293.661 cv
382.796 293.477 382.929 293.219 382.929 292.869 cv
382.929 292.57 382.837 292.336 382.654 292.17 cv
382.471 292.003 382.171 291.878 381.755 291.795 cv
381.255 291.695 li
380.639 291.579 380.197 291.387 379.923 291.12 cv
379.648 290.862 379.514 290.504 379.514 290.038 cv
379.514 289.505 379.698 289.08 380.081 288.772 cv
380.456 288.464 380.98 288.306 381.646 288.306 cv
381.93 288.306 382.213 288.331 382.513 288.381 cv
382.804 288.431 383.104 288.514 383.42 288.614 cv
f
385.777 288.639 mo
385.777 289.93 li
387.318 289.93 li
387.318 290.513 li
385.777 290.513 li
385.777 292.986 li
385.777 293.361 385.827 293.602 385.927 293.702 cv
386.027 293.81 386.235 293.86 386.552 293.86 cv
387.318 293.86 li
387.318 294.485 li
386.552 294.485 li
385.969 294.485 385.569 294.377 385.352 294.16 cv
385.136 293.944 385.028 293.552 385.028 292.986 cv
385.028 290.513 li
384.478 290.513 li
384.478 289.93 li
385.028 289.93 li
385.028 288.639 li
385.777 288.639 li
f
390.066 290.454 mo
389.666 290.454 389.35 290.612 389.117 290.929 cv
388.883 291.245 388.767 291.67 388.767 292.211 cv
388.767 292.761 388.875 293.186 389.108 293.502 cv
389.341 293.819 389.658 293.969 390.066 293.969 cv
390.466 293.969 390.782 293.819 391.015 293.502 cv
391.249 293.186 391.365 292.761 391.365 292.211 cv
391.365 291.678 391.249 291.245 391.015 290.929 cv
390.782 290.612 390.466 290.454 390.066 290.454 cv
390.066 289.821 mo
390.716 289.821 391.224 290.038 391.598 290.454 cv
391.965 290.879 392.156 291.462 392.156 292.211 cv
392.156 292.961 391.965 293.544 391.598 293.96 cv
391.224 294.385 390.716 294.593 390.066 294.593 cv
389.408 294.593 388.892 294.385 388.525 293.96 cv
388.159 293.544 387.976 292.961 387.976 292.211 cv
387.976 291.462 388.159 290.879 388.525 290.454 cv
388.892 290.038 389.408 289.821 390.066 289.821 cv
f
395.163 290.454 mo
394.763 290.454 394.447 290.612 394.213 290.929 cv
393.98 291.245 393.864 291.67 393.864 292.211 cv
393.864 292.761 393.972 293.186 394.205 293.502 cv
394.438 293.819 394.755 293.969 395.163 293.969 cv
395.563 293.969 395.879 293.819 396.112 293.502 cv
396.345 293.186 396.462 292.761 396.462 292.211 cv
396.462 291.678 396.345 291.245 396.112 290.929 cv
395.879 290.612 395.563 290.454 395.163 290.454 cv
395.163 289.821 mo
395.812 289.821 396.32 290.038 396.695 290.454 cv
397.062 290.879 397.253 291.462 397.253 292.211 cv
397.253 292.961 397.062 293.544 396.695 293.96 cv
396.32 294.385 395.812 294.593 395.163 294.593 cv
394.505 294.593 393.988 294.385 393.622 293.96 cv
393.256 293.544 393.072 292.961 393.072 292.211 cv
393.072 291.462 393.256 290.879 393.622 290.454 cv
393.988 290.038 394.505 289.821 395.163 289.821 cv
f
398.494 288.156 mo
399.243 288.156 li
399.243 294.485 li
398.494 294.485 li
398.494 288.156 li
f
402.874 289.222 mo
401.759 292.245 li
403.99 292.245 li
402.874 289.222 li
402.408 288.414 mo
403.341 288.414 li
405.656 294.485 li
404.798 294.485 li
404.249 292.928 li
401.509 292.928 li
400.959 294.485 li
400.093 294.485 li
402.408 288.414 li
f
409.97 295.859 mo
409.97 296.442 li
405.648 296.442 li
405.648 295.859 li
409.97 295.859 li
f
413.668 290.621 mo
413.668 288.156 li
414.417 288.156 li
414.417 294.485 li
413.668 294.485 li
413.668 293.802 li
413.509 294.077 413.31 294.277 413.068 294.402 cv
412.827 294.527 412.543 294.593 412.21 294.593 cv
411.661 294.593 411.211 294.377 410.861 293.944 cv
410.511 293.511 410.345 292.928 410.345 292.211 cv
410.345 291.495 410.511 290.921 410.861 290.479 cv
411.211 290.046 411.661 289.821 412.21 289.821 cv
412.543 289.821 412.827 289.888 413.068 290.021 cv
413.31 290.154 413.509 290.354 413.668 290.621 cv
411.119 292.211 mo
411.119 292.761 411.228 293.194 411.452 293.511 cv
411.677 293.827 411.994 293.977 412.393 293.977 cv
412.785 293.977 413.093 293.827 413.326 293.511 cv
413.551 293.194 413.668 292.761 413.668 292.211 cv
413.668 291.662 413.551 291.237 413.326 290.921 cv
413.093 290.604 412.785 290.446 412.393 290.446 cv
411.994 290.446 411.677 290.604 411.452 290.921 cv
411.228 291.237 411.119 291.662 411.119 292.211 cv
f
418.031 292.195 mo
417.423 292.195 417.007 292.27 416.774 292.403 cv
416.541 292.545 416.424 292.778 416.424 293.111 cv
416.424 293.377 416.507 293.594 416.682 293.744 cv
416.857 293.902 417.099 293.977 417.398 293.977 cv
417.815 293.977 418.148 293.835 418.398 293.536 cv
418.648 293.244 418.773 292.853 418.773 292.361 cv
418.773 292.195 li
418.031 292.195 li
419.522 291.887 mo
419.522 294.485 li
418.773 294.485 li
418.773 293.794 li
418.598 294.077 418.381 294.277 418.131 294.402 cv
417.882 294.527 417.565 294.593 417.199 294.593 cv
416.732 294.593 416.358 294.468 416.083 294.21 cv
415.808 293.952 415.675 293.602 415.675 293.161 cv
415.675 292.653 415.841 292.27 416.191 292.003 cv
416.532 291.745 417.04 291.612 417.723 291.612 cv
418.773 291.612 li
418.773 291.537 li
418.773 291.195 418.656 290.929 418.431 290.737 cv
418.206 290.554 417.89 290.454 417.482 290.454 cv
417.215 290.454 416.965 290.488 416.716 290.554 cv
416.466 290.621 416.233 290.712 416.008 290.829 cv
416.008 290.138 li
416.274 290.038 416.541 289.955 416.799 289.905 cv
417.057 289.855 417.307 289.821 417.557 289.821 cv
418.215 289.821 418.706 289.996 419.031 290.338 cv
419.356 290.679 419.522 291.195 419.522 291.887 cv
f
422.962 294.901 mo
422.745 295.434 422.537 295.792 422.337 295.959 cv
422.137 296.126 421.871 296.209 421.538 296.209 cv
420.938 296.209 li
420.938 295.584 li
421.379 295.584 li
421.579 295.584 421.737 295.534 421.854 295.434 cv
421.971 295.334 422.096 295.11 422.237 294.743 cv
422.37 294.41 li
420.53 289.93 li
421.321 289.93 li
422.745 293.494 li
424.169 289.93 li
424.96 289.93 li
422.962 294.901 li
f
427.859 288.955 mo
427.434 288.955 427.117 289.163 426.901 289.58 cv
426.684 289.996 426.584 290.621 426.584 291.454 cv
426.584 292.286 426.684 292.911 426.901 293.327 cv
427.117 293.744 427.434 293.952 427.859 293.952 cv
428.283 293.952 428.6 293.744 428.816 293.327 cv
429.024 292.911 429.133 292.286 429.133 291.454 cv
429.133 290.621 429.024 289.996 428.816 289.58 cv
428.6 289.163 428.283 288.955 427.859 288.955 cv
427.859 288.306 mo
428.533 288.306 429.049 288.58 429.416 289.113 cv
429.774 289.655 429.957 290.438 429.957 291.454 cv
429.957 292.478 429.774 293.261 429.416 293.794 cv
429.049 294.327 428.533 294.593 427.859 294.593 cv
427.176 294.593 426.651 294.327 426.293 293.794 cv
425.935 293.261 425.76 292.478 425.76 291.454 cv
425.76 290.438 425.935 289.655 426.293 289.113 cv
426.651 288.58 427.176 288.306 427.859 288.306 cv
f
432.031 288.639 mo
432.031 289.93 li
433.572 289.93 li
433.572 290.513 li
432.031 290.513 li
432.031 292.986 li
432.031 293.361 432.081 293.602 432.181 293.702 cv
432.281 293.81 432.489 293.86 432.805 293.86 cv
433.572 293.86 li
433.572 294.485 li
432.805 294.485 li
432.222 294.485 431.823 294.377 431.606 294.16 cv
431.39 293.944 431.281 293.552 431.281 292.986 cv
431.281 290.513 li
430.732 290.513 li
430.732 289.93 li
431.281 289.93 li
431.281 288.639 li
432.031 288.639 li
f
436.32 290.454 mo
435.92 290.454 435.604 290.612 435.37 290.929 cv
435.137 291.245 435.021 291.67 435.021 292.211 cv
435.021 292.761 435.129 293.186 435.362 293.502 cv
435.595 293.819 435.912 293.969 436.32 293.969 cv
436.719 293.969 437.036 293.819 437.269 293.502 cv
437.502 293.186 437.619 292.761 437.619 292.211 cv
437.619 291.678 437.502 291.245 437.269 290.929 cv
437.036 290.612 436.719 290.454 436.32 290.454 cv
436.32 289.821 mo
436.969 289.821 437.477 290.038 437.852 290.454 cv
438.219 290.879 438.41 291.462 438.41 292.211 cv
438.41 292.961 438.219 293.544 437.852 293.96 cv
437.477 294.385 436.969 294.593 436.32 294.593 cv
435.662 294.593 435.145 294.385 434.779 293.96 cv
434.413 293.544 434.229 292.961 434.229 292.211 cv
434.229 291.462 434.413 290.879 434.779 290.454 cv
435.145 290.038 435.662 289.821 436.32 289.821 cv
f
439.551 288.414 mo
443.457 288.414 li
443.457 288.764 li
441.25 294.485 li
440.392 294.485 li
442.466 289.105 li
439.551 289.105 li
439.551 288.414 li
f
446.813 288.955 mo
446.388 288.955 446.072 289.163 445.855 289.58 cv
445.639 289.996 445.539 290.621 445.539 291.454 cv
445.539 292.286 445.639 292.911 445.855 293.327 cv
446.072 293.744 446.388 293.952 446.813 293.952 cv
447.238 293.952 447.554 293.744 447.771 293.327 cv
447.979 292.911 448.087 292.286 448.087 291.454 cv
448.087 290.621 447.979 289.996 447.771 289.58 cv
447.554 289.163 447.238 288.955 446.813 288.955 cv
446.813 288.306 mo
447.488 288.306 448.004 288.58 448.37 289.113 cv
448.728 289.655 448.912 290.438 448.912 291.454 cv
448.912 292.478 448.728 293.261 448.37 293.794 cv
448.004 294.327 447.488 294.593 446.813 294.593 cv
446.13 294.593 445.605 294.327 445.247 293.794 cv
444.889 293.261 444.714 292.478 444.714 291.454 cv
444.714 290.438 444.889 289.655 445.247 289.113 cv
445.605 288.58 446.13 288.306 446.813 288.306 cv
f
453.709 295.859 mo
453.709 296.442 li
449.386 296.442 li
449.386 295.859 li
453.709 295.859 li
f
457.681 292.211 mo
457.681 291.662 457.565 291.237 457.34 290.921 cv
457.106 290.604 456.798 290.446 456.407 290.446 cv
456.007 290.446 455.699 290.604 455.474 290.921 cv
455.241 291.237 455.133 291.662 455.133 292.211 cv
455.133 292.761 455.241 293.194 455.474 293.511 cv
455.699 293.827 456.007 293.977 456.407 293.977 cv
456.798 293.977 457.106 293.827 457.34 293.511 cv
457.565 293.194 457.681 292.761 457.681 292.211 cv
455.133 290.621 mo
455.283 290.354 455.483 290.154 455.724 290.021 cv
455.966 289.888 456.257 289.821 456.59 289.821 cv
457.14 289.821 457.59 290.046 457.939 290.479 cv
458.281 290.921 458.456 291.495 458.456 292.211 cv
458.456 292.928 458.281 293.511 457.939 293.944 cv
457.59 294.377 457.14 294.593 456.59 294.593 cv
456.257 294.593 455.966 294.527 455.724 294.402 cv
455.483 294.277 455.283 294.077 455.133 293.802 cv
455.133 294.485 li
454.383 294.485 li
454.383 288.156 li
455.133 288.156 li
455.133 290.621 li
f
463.594 292.02 mo
463.594 292.386 li
460.154 292.386 li
460.188 292.903 460.338 293.302 460.621 293.569 cv
460.896 293.835 461.279 293.969 461.778 293.969 cv
462.062 293.969 462.345 293.935 462.611 293.869 cv
462.878 293.802 463.153 293.694 463.419 293.544 cv
463.419 294.252 li
463.153 294.368 462.878 294.46 462.595 294.51 cv
462.311 294.56 462.02 294.593 461.737 294.593 cv
461.004 294.593 460.429 294.385 460.005 293.969 cv
459.58 293.552 459.372 292.978 459.372 292.253 cv
459.372 291.512 459.571 290.921 459.971 290.479 cv
460.371 290.046 460.921 289.821 461.604 289.821 cv
462.22 289.821 462.703 290.021 463.061 290.413 cv
463.411 290.812 463.594 291.345 463.594 292.02 cv
462.844 291.803 mo
462.836 291.395 462.719 291.07 462.503 290.821 cv
462.278 290.579 461.978 290.454 461.612 290.454 cv
461.195 290.454 460.862 290.579 460.612 290.812 cv
460.363 291.046 460.213 291.379 460.179 291.803 cv
462.844 291.803 li
f
467.125 288.156 mo
467.125 288.78 li
466.409 288.78 li
466.142 288.78 465.951 288.839 465.851 288.947 cv
465.743 289.055 465.693 289.247 465.693 289.53 cv
465.693 289.93 li
466.925 289.93 li
466.925 290.513 li
465.693 290.513 li
465.693 294.485 li
464.943 294.485 li
464.943 290.513 li
464.227 290.513 li
464.227 289.93 li
464.943 289.93 li
464.943 289.613 li
464.943 289.113 465.06 288.739 465.293 288.505 cv
465.526 288.272 465.901 288.156 466.417 288.156 cv
467.125 288.156 li
f
469.515 290.454 mo
469.115 290.454 468.799 290.612 468.566 290.929 cv
468.333 291.245 468.216 291.67 468.216 292.211 cv
468.216 292.761 468.324 293.186 468.557 293.502 cv
468.791 293.819 469.107 293.969 469.515 293.969 cv
469.915 293.969 470.231 293.819 470.465 293.502 cv
470.698 293.186 470.814 292.761 470.814 292.211 cv
470.814 291.678 470.698 291.245 470.465 290.929 cv
470.231 290.612 469.915 290.454 469.515 290.454 cv
469.515 289.821 mo
470.165 289.821 470.673 290.038 471.048 290.454 cv
471.414 290.879 471.606 291.462 471.606 292.211 cv
471.606 292.961 471.414 293.544 471.048 293.96 cv
470.673 294.385 470.165 294.593 469.515 294.593 cv
468.857 294.593 468.341 294.385 467.975 293.96 cv
467.608 293.544 467.425 292.961 467.425 292.211 cv
467.425 291.462 467.608 290.879 467.975 290.454 cv
468.341 290.038 468.857 289.821 469.515 289.821 cv
f
475.486 290.629 mo
475.403 290.579 475.312 290.546 475.212 290.521 cv
475.112 290.504 475.003 290.488 474.887 290.488 cv
474.462 290.488 474.137 290.629 473.912 290.904 cv
473.679 291.179 473.571 291.57 473.571 292.087 cv
473.571 294.485 li
472.821 294.485 li
472.821 289.93 li
473.571 289.93 li
473.571 290.637 li
473.721 290.363 473.929 290.154 474.179 290.021 cv
474.429 289.888 474.737 289.821 475.103 289.821 cv
475.278 289.83 li
475.486 289.863 li
475.486 290.629 li
f
480.167 292.02 mo
480.167 292.386 li
476.727 292.386 li
476.761 292.903 476.91 293.302 477.194 293.569 cv
477.468 293.835 477.852 293.969 478.351 293.969 cv
478.634 293.969 478.917 293.935 479.184 293.869 cv
479.451 293.802 479.725 293.694 479.992 293.544 cv
479.992 294.252 li
479.725 294.368 479.451 294.46 479.167 294.51 cv
478.884 294.56 478.593 294.593 478.31 294.593 cv
477.577 294.593 477.002 294.385 476.577 293.969 cv
476.153 293.552 475.944 292.978 475.944 292.253 cv
475.944 291.512 476.144 290.921 476.544 290.479 cv
476.944 290.046 477.493 289.821 478.176 289.821 cv
478.793 289.821 479.276 290.021 479.634 290.413 cv
479.983 290.812 480.167 291.345 480.167 292.02 cv
479.417 291.803 mo
479.409 291.395 479.292 291.07 479.076 290.821 cv
478.851 290.579 478.551 290.454 478.185 290.454 cv
477.768 290.454 477.435 290.579 477.185 290.812 cv
476.935 291.046 476.786 291.379 476.752 291.803 cv
479.417 291.803 li
f
1 lw
285.483 303.703 mo
293.811 303.703 li
.384955 .899931 0 0 cmyk
@
297.142 303.703 mo
305.47 303.703 li
@
289.647 307.867 mo
289.647 299.539 li
@
301.306 307.867 mo
301.306 299.539 li
@
285.483 306.703 mo
285.483 300.703 li
f
.5 lw
285.483 306.703 mo
285.483 300.703 li
@
297.142 306.703 mo
297.142 300.703 li
f
297.142 306.703 mo
297.142 300.703 li
@
293.811 306.703 mo
293.811 300.703 li
f
293.811 306.703 mo
293.811 300.703 li
@
305.47 306.703 mo
305.47 300.703 li
f
305.47 306.703 mo
305.47 300.703 li
@
292.647 307.867 mo
286.647 307.867 li
f
292.647 307.867 mo
286.647 307.867 li
@
304.306 307.867 mo
298.306 307.867 li
f
304.306 307.867 mo
298.306 307.867 li
@
292.647 299.539 mo
286.647 299.539 li
f
292.647 299.539 mo
286.647 299.539 li
@
304.306 299.539 mo
298.306 299.539 li
f
304.306 299.539 mo
298.306 299.539 li
@
289.647 306.703 mo
292.647 300.703 li
286.647 300.703 li
cp
f
0 lj
289.647 306.703 mo
292.647 300.703 li
286.647 300.703 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
301.306 306.703 mo
304.306 300.703 li
298.306 300.703 li
cp
.384955 .899931 0 0 cmyk
f
301.306 306.703 mo
304.306 300.703 li
298.306 300.703 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
311.283 300.547 mo
312.108 300.547 li
312.108 303.037 li
315.089 303.037 li
315.089 300.547 li
315.914 300.547 li
315.914 306.618 li
315.089 306.618 li
315.089 303.728 li
312.108 303.728 li
312.108 306.618 li
311.283 306.618 li
311.283 300.547 li
f
319.278 302.587 mo
318.878 302.587 318.562 302.745 318.329 303.062 cv
318.095 303.378 317.979 303.803 317.979 304.344 cv
317.979 304.894 318.087 305.319 318.32 305.635 cv
318.553 305.952 318.87 306.102 319.278 306.102 cv
319.678 306.102 319.994 305.952 320.227 305.635 cv
320.461 305.319 320.577 304.894 320.577 304.344 cv
320.577 303.811 320.461 303.378 320.227 303.062 cv
319.994 302.745 319.678 302.587 319.278 302.587 cv
319.278 301.954 mo
319.928 301.954 320.436 302.171 320.81 302.587 cv
321.177 303.012 321.368 303.595 321.368 304.344 cv
321.368 305.094 321.177 305.677 320.81 306.093 cv
320.436 306.518 319.928 306.726 319.278 306.726 cv
318.62 306.726 318.104 306.518 317.737 306.093 cv
317.371 305.677 317.188 305.094 317.188 304.344 cv
317.188 303.595 317.371 303.012 317.737 302.587 cv
318.104 302.171 318.62 301.954 319.278 301.954 cv
f
325.516 302.196 mo
325.516 302.904 li
325.299 302.804 325.083 302.72 324.858 302.662 cv
324.625 302.612 324.391 302.579 324.15 302.579 cv
323.775 302.579 323.492 302.637 323.309 302.754 cv
323.126 302.87 323.034 303.037 323.034 303.262 cv
323.034 303.437 323.101 303.57 323.234 303.67 cv
323.367 303.77 323.634 303.87 324.033 303.953 cv
324.291 304.011 li
324.824 304.128 325.199 304.294 325.424 304.494 cv
325.641 304.703 325.757 304.994 325.757 305.36 cv
325.757 305.785 325.591 306.118 325.258 306.36 cv
324.924 306.61 324.458 306.726 323.875 306.726 cv
323.625 306.726 323.375 306.701 323.109 306.66 cv
322.842 306.618 322.568 306.551 322.276 306.451 cv
322.276 305.677 li
322.551 305.827 322.826 305.935 323.092 306.002 cv
323.359 306.077 323.625 306.11 323.892 306.11 cv
324.242 306.11 324.516 306.052 324.708 305.935 cv
324.891 305.818 324.991 305.644 324.991 305.419 cv
324.991 305.219 324.916 305.061 324.783 304.952 cv
324.65 304.844 324.35 304.736 323.883 304.636 cv
323.625 304.578 li
323.159 304.478 322.817 304.328 322.618 304.128 cv
322.409 303.928 322.309 303.653 322.309 303.295 cv
322.309 302.87 322.459 302.537 322.759 302.304 cv
323.059 302.071 323.492 301.954 324.058 301.954 cv
324.333 301.954 324.591 301.979 324.841 302.021 cv
325.083 302.063 325.307 302.121 325.516 302.196 cv
f
327.689 300.772 mo
327.689 302.063 li
329.23 302.063 li
329.23 302.646 li
327.689 302.646 li
327.689 305.119 li
327.689 305.494 327.739 305.735 327.839 305.835 cv
327.939 305.943 328.147 305.993 328.464 305.993 cv
329.23 305.993 li
329.23 306.618 li
328.464 306.618 li
327.881 306.618 327.481 306.51 327.265 306.293 cv
327.048 306.077 326.94 305.685 326.94 305.119 cv
326.94 302.646 li
326.39 302.646 li
326.39 302.063 li
326.94 302.063 li
326.94 300.772 li
327.689 300.772 li
f
330.246 300.547 mo
331.07 300.547 li
331.07 305.927 li
334.027 305.927 li
334.027 306.618 li
330.246 306.618 li
330.246 300.547 li
f
334.851 302.063 mo
335.601 302.063 li
335.601 306.618 li
334.851 306.618 li
334.851 302.063 li
334.851 300.289 mo
335.601 300.289 li
335.601 301.238 li
334.851 301.238 li
334.851 300.289 li
f
339.473 300.289 mo
339.473 300.913 li
338.757 300.913 li
338.491 300.913 338.299 300.972 338.199 301.08 cv
338.091 301.188 338.041 301.38 338.041 301.663 cv
338.041 302.063 li
339.274 302.063 li
339.274 302.646 li
338.041 302.646 li
338.041 306.618 li
337.291 306.618 li
337.291 302.646 li
336.575 302.646 li
336.575 302.063 li
337.291 302.063 li
337.291 301.746 li
337.291 301.246 337.408 300.872 337.641 300.638 cv
337.874 300.405 338.249 300.289 338.766 300.289 cv
339.473 300.289 li
f
343.996 304.153 mo
343.996 304.519 li
340.556 304.519 li
340.589 305.036 340.739 305.435 341.022 305.702 cv
341.297 305.968 341.68 306.102 342.18 306.102 cv
342.463 306.102 342.746 306.068 343.013 306.002 cv
343.279 305.935 343.554 305.827 343.821 305.677 cv
343.821 306.385 li
343.554 306.501 343.279 306.593 342.996 306.643 cv
342.713 306.693 342.422 306.726 342.138 306.726 cv
341.406 306.726 340.831 306.518 340.406 306.102 cv
339.981 305.685 339.773 305.111 339.773 304.386 cv
339.773 303.645 339.973 303.054 340.373 302.612 cv
340.773 302.179 341.322 301.954 342.005 301.954 cv
342.621 301.954 343.104 302.154 343.463 302.546 cv
343.812 302.945 343.996 303.478 343.996 304.153 cv
343.246 303.936 mo
343.238 303.528 343.121 303.203 342.905 302.954 cv
342.68 302.712 342.38 302.587 342.014 302.587 cv
341.597 302.587 341.264 302.712 341.014 302.945 cv
340.764 303.179 340.614 303.512 340.581 303.936 cv
343.246 303.936 li
f
348.892 300.747 mo
348.892 301.546 li
348.576 301.396 348.285 301.288 348.01 301.213 cv
347.727 301.146 347.46 301.105 347.21 301.105 cv
346.761 301.105 346.411 301.196 346.169 301.363 cv
345.928 301.538 345.811 301.788 345.811 302.104 cv
345.811 302.371 345.886 302.579 346.053 302.712 cv
346.211 302.854 346.519 302.962 346.969 303.045 cv
347.468 303.145 li
348.076 303.262 348.526 303.47 348.818 303.761 cv
349.109 304.061 349.259 304.453 349.259 304.944 cv
349.259 305.535 349.059 305.977 348.668 306.277 cv
348.268 306.576 347.693 306.726 346.935 306.726 cv
346.644 306.726 346.336 306.693 346.011 306.635 cv
345.686 306.576 345.353 306.485 345.012 306.351 cv
345.012 305.502 li
345.345 305.694 345.67 305.835 345.986 305.927 cv
346.302 306.027 346.619 306.068 346.935 306.068 cv
347.402 306.068 347.76 305.977 348.018 305.794 cv
348.268 305.61 348.401 305.352 348.401 305.002 cv
348.401 304.703 348.31 304.469 348.126 304.303 cv
347.943 304.136 347.643 304.011 347.227 303.928 cv
346.727 303.828 li
346.111 303.712 345.67 303.52 345.395 303.253 cv
345.12 302.995 344.987 302.637 344.987 302.171 cv
344.987 301.638 345.17 301.213 345.553 300.905 cv
345.928 300.597 346.452 300.439 347.119 300.439 cv
347.402 300.439 347.685 300.464 347.985 300.514 cv
348.276 300.564 348.576 300.647 348.892 300.747 cv
f
351.249 300.772 mo
351.249 302.063 li
352.79 302.063 li
352.79 302.646 li
351.249 302.646 li
351.249 305.119 li
351.249 305.494 351.299 305.735 351.399 305.835 cv
351.499 305.943 351.707 305.993 352.024 305.993 cv
352.79 305.993 li
352.79 306.618 li
352.024 306.618 li
351.441 306.618 351.041 306.51 350.825 306.293 cv
350.608 306.077 350.5 305.685 350.5 305.119 cv
350.5 302.646 li
349.95 302.646 li
349.95 302.063 li
350.5 302.063 li
350.5 300.772 li
351.249 300.772 li
f
355.671 307.034 mo
355.455 307.567 355.247 307.925 355.047 308.092 cv
354.847 308.259 354.58 308.342 354.247 308.342 cv
353.648 308.342 li
353.648 307.717 li
354.089 307.717 li
354.289 307.717 354.447 307.667 354.564 307.567 cv
354.68 307.467 354.805 307.243 354.947 306.876 cv
355.08 306.543 li
353.24 302.063 li
354.031 302.063 li
355.455 305.627 li
356.879 302.063 li
357.67 302.063 li
355.671 307.034 li
f
358.703 300.289 mo
359.452 300.289 li
359.452 306.618 li
358.703 306.618 li
358.703 300.289 li
f
364.915 304.153 mo
364.915 304.519 li
361.476 304.519 li
361.509 305.036 361.659 305.435 361.942 305.702 cv
362.217 305.968 362.6 306.102 363.1 306.102 cv
363.383 306.102 363.666 306.068 363.933 306.002 cv
364.199 305.935 364.474 305.827 364.741 305.677 cv
364.741 306.385 li
364.474 306.501 364.199 306.593 363.916 306.643 cv
363.633 306.693 363.341 306.726 363.058 306.726 cv
362.325 306.726 361.751 306.518 361.326 306.102 cv
360.901 305.685 360.693 305.111 360.693 304.386 cv
360.693 303.645 360.893 303.054 361.293 302.612 cv
361.693 302.179 362.242 301.954 362.925 301.954 cv
363.541 301.954 364.024 302.154 364.382 302.546 cv
364.732 302.945 364.915 303.478 364.915 304.153 cv
364.166 303.936 mo
364.158 303.528 364.041 303.203 363.824 302.954 cv
363.6 302.712 363.3 302.587 362.933 302.587 cv
362.517 302.587 362.184 302.712 361.934 302.945 cv
361.684 303.179 361.534 303.512 361.501 303.936 cv
364.166 303.936 li
f
369.604 307.992 mo
369.604 308.575 li
365.282 308.575 li
365.282 307.992 li
369.604 307.992 li
f
373.976 300.747 mo
373.976 301.546 li
373.66 301.396 373.368 301.288 373.094 301.213 cv
372.81 301.146 372.544 301.105 372.294 301.105 cv
371.844 301.105 371.495 301.196 371.253 301.363 cv
371.012 301.538 370.895 301.788 370.895 302.104 cv
370.895 302.371 370.97 302.579 371.137 302.712 cv
371.295 302.854 371.603 302.962 372.053 303.045 cv
372.552 303.145 li
373.16 303.262 373.61 303.47 373.901 303.761 cv
374.193 304.061 374.343 304.453 374.343 304.944 cv
374.343 305.535 374.143 305.977 373.751 306.277 cv
373.352 306.576 372.777 306.726 372.019 306.726 cv
371.728 306.726 371.42 306.693 371.095 306.635 cv
370.77 306.576 370.437 306.485 370.096 306.351 cv
370.096 305.502 li
370.429 305.694 370.753 305.835 371.07 305.927 cv
371.386 306.027 371.703 306.068 372.019 306.068 cv
372.486 306.068 372.844 305.977 373.102 305.794 cv
373.352 305.61 373.485 305.352 373.485 305.002 cv
373.485 304.703 373.393 304.469 373.21 304.303 cv
373.027 304.136 372.727 304.011 372.311 303.928 cv
371.811 303.828 li
371.195 303.712 370.753 303.52 370.479 303.253 cv
370.204 302.995 370.071 302.637 370.071 302.171 cv
370.071 301.638 370.254 301.213 370.637 300.905 cv
371.012 300.597 371.536 300.439 372.202 300.439 cv
372.486 300.439 372.769 300.464 373.069 300.514 cv
373.36 300.564 373.66 300.647 373.976 300.747 cv
f
376.333 300.772 mo
376.333 302.063 li
377.874 302.063 li
377.874 302.646 li
376.333 302.646 li
376.333 305.119 li
376.333 305.494 376.383 305.735 376.483 305.835 cv
376.583 305.943 376.791 305.993 377.108 305.993 cv
377.874 305.993 li
377.874 306.618 li
377.108 306.618 li
376.525 306.618 376.125 306.51 375.908 306.293 cv
375.692 306.077 375.584 305.685 375.584 305.119 cv
375.584 302.646 li
375.034 302.646 li
375.034 302.063 li
375.584 302.063 li
375.584 300.772 li
376.333 300.772 li
f
380.622 302.587 mo
380.222 302.587 379.906 302.745 379.673 303.062 cv
379.439 303.378 379.323 303.803 379.323 304.344 cv
379.323 304.894 379.431 305.319 379.664 305.635 cv
379.897 305.952 380.214 306.102 380.622 306.102 cv
381.022 306.102 381.338 305.952 381.571 305.635 cv
381.805 305.319 381.921 304.894 381.921 304.344 cv
381.921 303.811 381.805 303.378 381.571 303.062 cv
381.338 302.745 381.022 302.587 380.622 302.587 cv
380.622 301.954 mo
381.272 301.954 381.78 302.171 382.154 302.587 cv
382.521 303.012 382.712 303.595 382.712 304.344 cv
382.712 305.094 382.521 305.677 382.154 306.093 cv
381.78 306.518 381.272 306.726 380.622 306.726 cv
379.964 306.726 379.448 306.518 379.081 306.093 cv
378.715 305.677 378.532 305.094 378.532 304.344 cv
378.532 303.595 378.715 303.012 379.081 302.587 cv
379.448 302.171 379.964 301.954 380.622 301.954 cv
f
385.719 302.587 mo
385.319 302.587 385.003 302.745 384.769 303.062 cv
384.536 303.378 384.42 303.803 384.42 304.344 cv
384.42 304.894 384.528 305.319 384.761 305.635 cv
384.994 305.952 385.311 306.102 385.719 306.102 cv
386.119 306.102 386.435 305.952 386.668 305.635 cv
386.901 305.319 387.018 304.894 387.018 304.344 cv
387.018 303.811 386.901 303.378 386.668 303.062 cv
386.435 302.745 386.119 302.587 385.719 302.587 cv
385.719 301.954 mo
386.368 301.954 386.876 302.171 387.251 302.587 cv
387.618 303.012 387.809 303.595 387.809 304.344 cv
387.809 305.094 387.618 305.677 387.251 306.093 cv
386.876 306.518 386.368 306.726 385.719 306.726 cv
385.061 306.726 384.545 306.518 384.178 306.093 cv
383.812 305.677 383.628 305.094 383.628 304.344 cv
383.628 303.595 383.812 303.012 384.178 302.587 cv
384.545 302.171 385.061 301.954 385.719 301.954 cv
f
389.05 300.289 mo
389.799 300.289 li
389.799 306.618 li
389.05 306.618 li
389.05 300.289 li
f
393.431 301.355 mo
392.315 304.378 li
394.546 304.378 li
393.431 301.355 li
392.964 300.547 mo
393.897 300.547 li
396.212 306.618 li
395.354 306.618 li
394.805 305.061 li
392.065 305.061 li
391.515 306.618 li
390.649 306.618 li
392.964 300.547 li
f
400.526 307.992 mo
400.526 308.575 li
396.204 308.575 li
396.204 307.992 li
400.526 307.992 li
f
404.224 302.754 mo
404.224 300.289 li
404.973 300.289 li
404.973 306.618 li
404.224 306.618 li
404.224 305.935 li
404.065 306.21 403.866 306.41 403.624 306.535 cv
403.383 306.66 403.099 306.726 402.766 306.726 cv
402.217 306.726 401.767 306.51 401.417 306.077 cv
401.067 305.644 400.901 305.061 400.901 304.344 cv
400.901 303.628 401.067 303.054 401.417 302.612 cv
401.767 302.179 402.217 301.954 402.766 301.954 cv
403.099 301.954 403.383 302.021 403.624 302.154 cv
403.866 302.287 404.065 302.487 404.224 302.754 cv
401.675 304.344 mo
401.675 304.894 401.784 305.327 402.008 305.644 cv
402.233 305.96 402.55 306.11 402.949 306.11 cv
403.341 306.11 403.649 305.96 403.882 305.644 cv
404.107 305.327 404.224 304.894 404.224 304.344 cv
404.224 303.795 404.107 303.37 403.882 303.054 cv
403.649 302.737 403.341 302.579 402.949 302.579 cv
402.55 302.579 402.233 302.737 402.008 303.054 cv
401.784 303.37 401.675 303.795 401.675 304.344 cv
f
408.587 304.328 mo
407.98 304.328 407.563 304.403 407.33 304.536 cv
407.097 304.678 406.98 304.911 406.98 305.244 cv
406.98 305.51 407.063 305.727 407.238 305.877 cv
407.413 306.035 407.655 306.11 407.955 306.11 cv
408.371 306.11 408.704 305.968 408.954 305.669 cv
409.204 305.377 409.329 304.986 409.329 304.494 cv
409.329 304.328 li
408.587 304.328 li
410.078 304.02 mo
410.078 306.618 li
409.329 306.618 li
409.329 305.927 li
409.154 306.21 408.937 306.41 408.687 306.535 cv
408.438 306.66 408.121 306.726 407.755 306.726 cv
407.288 306.726 406.914 306.601 406.639 306.343 cv
406.364 306.085 406.231 305.735 406.231 305.294 cv
406.231 304.786 406.397 304.403 406.747 304.136 cv
407.088 303.878 407.596 303.745 408.279 303.745 cv
409.329 303.745 li
409.329 303.67 li
409.329 303.328 409.212 303.062 408.987 302.87 cv
408.762 302.687 408.446 302.587 408.038 302.587 cv
407.771 302.587 407.521 302.621 407.272 302.687 cv
407.022 302.754 406.789 302.845 406.564 302.962 cv
406.564 302.271 li
406.83 302.171 407.097 302.088 407.355 302.038 cv
407.613 301.988 407.863 301.954 408.113 301.954 cv
408.771 301.954 409.262 302.129 409.587 302.471 cv
409.912 302.812 410.078 303.328 410.078 304.02 cv
f
413.518 307.034 mo
413.301 307.567 413.093 307.925 412.893 308.092 cv
412.693 308.259 412.427 308.342 412.094 308.342 cv
411.494 308.342 li
411.494 307.717 li
411.935 307.717 li
412.135 307.717 412.293 307.667 412.41 307.567 cv
412.527 307.467 412.652 307.243 412.793 306.876 cv
412.926 306.543 li
411.086 302.063 li
411.877 302.063 li
413.301 305.627 li
414.725 302.063 li
415.516 302.063 li
413.518 307.034 li
f
416.449 300.547 mo
420.355 300.547 li
420.355 300.897 li
418.148 306.618 li
417.29 306.618 li
419.364 301.238 li
416.449 301.238 li
416.449 300.547 li
f
422.662 305.927 mo
425.527 305.927 li
425.527 306.618 li
421.671 306.618 li
421.671 305.927 li
421.979 305.61 422.404 305.177 422.945 304.628 cv
423.478 304.086 423.819 303.736 423.961 303.578 cv
424.227 303.287 424.411 303.037 424.511 302.829 cv
424.611 302.629 424.669 302.421 424.669 302.221 cv
424.669 301.904 424.552 301.638 424.327 301.438 cv
424.103 301.238 423.811 301.13 423.445 301.13 cv
423.186 301.13 422.912 301.18 422.629 301.263 cv
422.345 301.355 422.037 301.488 421.712 301.671 cv
421.712 300.838 li
422.046 300.705 422.354 300.605 422.637 300.539 cv
422.92 300.472 423.186 300.439 423.428 300.439 cv
424.053 300.439 424.552 300.597 424.927 300.913 cv
425.302 301.23 425.493 301.646 425.493 302.171 cv
425.493 302.421 425.443 302.662 425.352 302.879 cv
425.26 303.104 425.094 303.37 424.844 303.67 cv
424.777 303.753 424.561 303.978 424.194 304.353 cv
423.828 304.728 423.32 305.252 422.662 305.927 cv
f
427.883 300.772 mo
427.883 302.063 li
429.424 302.063 li
429.424 302.646 li
427.883 302.646 li
427.883 305.119 li
427.883 305.494 427.933 305.735 428.033 305.835 cv
428.133 305.943 428.342 305.993 428.658 305.993 cv
429.424 305.993 li
429.424 306.618 li
428.658 306.618 li
428.075 306.618 427.675 306.51 427.459 306.293 cv
427.242 306.077 427.134 305.685 427.134 305.119 cv
427.134 302.646 li
426.584 302.646 li
426.584 302.063 li
427.134 302.063 li
427.134 300.772 li
427.883 300.772 li
f
432.172 302.587 mo
431.773 302.587 431.456 302.745 431.223 303.062 cv
430.99 303.378 430.873 303.803 430.873 304.344 cv
430.873 304.894 430.981 305.319 431.215 305.635 cv
431.448 305.952 431.764 306.102 432.172 306.102 cv
432.572 306.102 432.889 305.952 433.122 305.635 cv
433.355 305.319 433.472 304.894 433.472 304.344 cv
433.472 303.811 433.355 303.378 433.122 303.062 cv
432.889 302.745 432.572 302.587 432.172 302.587 cv
432.172 301.954 mo
432.822 301.954 433.33 302.171 433.705 302.587 cv
434.071 303.012 434.263 303.595 434.263 304.344 cv
434.263 305.094 434.071 305.677 433.705 306.093 cv
433.33 306.518 432.822 306.726 432.172 306.726 cv
431.514 306.726 430.998 306.518 430.632 306.093 cv
430.265 305.677 430.082 305.094 430.082 304.344 cv
430.082 303.595 430.265 303.012 430.632 302.587 cv
430.998 302.171 431.514 301.954 432.172 301.954 cv
f
435.753 305.927 mo
437.094 305.927 li
437.094 301.296 li
435.637 301.588 li
435.637 300.838 li
437.086 300.547 li
437.91 300.547 li
437.91 305.927 li
439.251 305.927 li
439.251 306.618 li
435.753 306.618 li
435.753 305.927 li
f
441.616 305.927 mo
444.481 305.927 li
444.481 306.618 li
440.625 306.618 li
440.625 305.927 li
440.933 305.61 441.358 305.177 441.9 304.628 cv
442.433 304.086 442.774 303.736 442.916 303.578 cv
443.182 303.287 443.365 303.037 443.465 302.829 cv
443.565 302.629 443.623 302.421 443.623 302.221 cv
443.623 301.904 443.507 301.638 443.282 301.438 cv
443.057 301.238 442.766 301.13 442.399 301.13 cv
442.141 301.13 441.866 301.18 441.583 301.263 cv
441.3 301.355 440.992 301.488 440.667 301.671 cv
440.667 300.838 li
441 300.705 441.308 300.605 441.591 300.539 cv
441.875 300.472 442.141 300.439 442.383 300.439 cv
443.007 300.439 443.507 300.597 443.882 300.913 cv
444.256 301.23 444.448 301.646 444.448 302.171 cv
444.448 302.421 444.398 302.662 444.306 302.879 cv
444.215 303.104 444.048 303.37 443.798 303.67 cv
443.732 303.753 443.515 303.978 443.149 304.353 cv
442.782 304.728 442.274 305.252 441.616 305.927 cv
f
446.913 305.927 mo
449.778 305.927 li
449.778 306.618 li
445.922 306.618 li
445.922 305.927 li
446.23 305.61 446.655 305.177 447.196 304.628 cv
447.729 304.086 448.071 303.736 448.212 303.578 cv
448.479 303.287 448.662 303.037 448.762 302.829 cv
448.862 302.629 448.92 302.421 448.92 302.221 cv
448.92 301.904 448.803 301.638 448.579 301.438 cv
448.354 301.238 448.062 301.13 447.696 301.13 cv
447.438 301.13 447.163 301.18 446.88 301.263 cv
446.596 301.355 446.288 301.488 445.964 301.671 cv
445.964 300.838 li
446.297 300.705 446.605 300.605 446.888 300.539 cv
447.171 300.472 447.438 300.439 447.679 300.439 cv
448.304 300.439 448.803 300.597 449.178 300.913 cv
449.553 301.23 449.745 301.646 449.745 302.171 cv
449.745 302.421 449.695 302.662 449.603 302.879 cv
449.511 303.104 449.345 303.37 449.095 303.67 cv
449.028 303.753 448.812 303.978 448.445 304.353 cv
448.079 304.728 447.571 305.252 446.913 305.927 cv
f
454.858 307.992 mo
454.858 308.575 li
450.536 308.575 li
450.536 307.992 li
454.858 307.992 li
f
457.631 304.328 mo
457.023 304.328 456.607 304.403 456.374 304.536 cv
456.14 304.678 456.024 304.911 456.024 305.244 cv
456.024 305.51 456.107 305.727 456.282 305.877 cv
456.457 306.035 456.698 306.11 456.998 306.11 cv
457.415 306.11 457.748 305.968 457.998 305.669 cv
458.247 305.377 458.372 304.986 458.372 304.494 cv
458.372 304.328 li
457.631 304.328 li
459.122 304.02 mo
459.122 306.618 li
458.372 306.618 li
458.372 305.927 li
458.197 306.21 457.981 306.41 457.731 306.535 cv
457.481 306.66 457.165 306.726 456.798 306.726 cv
456.332 306.726 455.957 306.601 455.682 306.343 cv
455.408 306.085 455.274 305.735 455.274 305.294 cv
455.274 304.786 455.441 304.403 455.791 304.136 cv
456.132 303.878 456.64 303.745 457.323 303.745 cv
458.372 303.745 li
458.372 303.67 li
458.372 303.328 458.256 303.062 458.031 302.87 cv
457.806 302.687 457.49 302.587 457.081 302.587 cv
456.815 302.587 456.565 302.621 456.315 302.687 cv
456.065 302.754 455.832 302.845 455.607 302.962 cv
455.607 302.271 li
455.874 302.171 456.14 302.088 456.399 302.038 cv
456.657 301.988 456.907 301.954 457.156 301.954 cv
457.814 301.954 458.306 302.129 458.63 302.471 cv
458.955 302.812 459.122 303.328 459.122 304.02 cv
f
463.935 304.344 mo
463.935 303.795 463.819 303.37 463.594 303.054 cv
463.361 302.737 463.053 302.579 462.661 302.579 cv
462.262 302.579 461.953 302.737 461.729 303.054 cv
461.495 303.37 461.387 303.795 461.387 304.344 cv
461.387 304.894 461.495 305.327 461.729 305.644 cv
461.953 305.96 462.262 306.11 462.661 306.11 cv
463.053 306.11 463.361 305.96 463.594 305.644 cv
463.819 305.327 463.935 304.894 463.935 304.344 cv
461.387 302.754 mo
461.537 302.487 461.737 302.287 461.978 302.154 cv
462.22 302.021 462.511 301.954 462.845 301.954 cv
463.394 301.954 463.844 302.179 464.194 302.612 cv
464.535 303.054 464.71 303.628 464.71 304.344 cv
464.71 305.061 464.535 305.644 464.194 306.077 cv
463.844 306.51 463.394 306.726 462.845 306.726 cv
462.511 306.726 462.22 306.66 461.978 306.535 cv
461.737 306.41 461.537 306.21 461.387 305.935 cv
461.387 306.618 li
460.638 306.618 li
460.638 300.289 li
461.387 300.289 li
461.387 302.754 li
f
468.591 302.762 mo
468.508 302.712 468.416 302.679 468.316 302.654 cv
468.216 302.637 468.108 302.621 467.991 302.621 cv
467.566 302.621 467.242 302.762 467.017 303.037 cv
466.784 303.312 466.675 303.703 466.675 304.22 cv
466.675 306.618 li
465.926 306.618 li
465.926 302.063 li
466.675 302.063 li
466.675 302.77 li
466.825 302.496 467.033 302.287 467.283 302.154 cv
467.533 302.021 467.841 301.954 468.208 301.954 cv
468.383 301.963 li
468.591 301.996 li
468.591 302.762 li
f
471.139 302.587 mo
470.739 302.587 470.423 302.745 470.19 303.062 cv
469.957 303.378 469.84 303.803 469.84 304.344 cv
469.84 304.894 469.948 305.319 470.181 305.635 cv
470.415 305.952 470.731 306.102 471.139 306.102 cv
471.539 306.102 471.855 305.952 472.089 305.635 cv
472.322 305.319 472.438 304.894 472.438 304.344 cv
472.438 303.811 472.322 303.378 472.089 303.062 cv
471.855 302.745 471.539 302.587 471.139 302.587 cv
471.139 301.954 mo
471.789 301.954 472.297 302.171 472.671 302.587 cv
473.038 303.012 473.229 303.595 473.229 304.344 cv
473.229 305.094 473.038 305.677 472.671 306.093 cv
472.297 306.518 471.789 306.726 471.139 306.726 cv
470.481 306.726 469.965 306.518 469.598 306.093 cv
469.232 305.677 469.049 305.094 469.049 304.344 cv
469.049 303.595 469.232 303.012 469.598 302.587 cv
469.965 302.171 470.481 301.954 471.139 301.954 cv
f
476.544 304.328 mo
475.936 304.328 475.52 304.403 475.286 304.536 cv
475.053 304.678 474.937 304.911 474.937 305.244 cv
474.937 305.51 475.02 305.727 475.195 305.877 cv
475.37 306.035 475.611 306.11 475.911 306.11 cv
476.327 306.11 476.661 305.968 476.91 305.669 cv
477.16 305.377 477.285 304.986 477.285 304.494 cv
477.285 304.328 li
476.544 304.328 li
478.035 304.02 mo
478.035 306.618 li
477.285 306.618 li
477.285 305.927 li
477.11 306.21 476.894 306.41 476.644 306.535 cv
476.394 306.66 476.078 306.726 475.711 306.726 cv
475.245 306.726 474.87 306.601 474.595 306.343 cv
474.32 306.085 474.187 305.735 474.187 305.294 cv
474.187 304.786 474.354 304.403 474.703 304.136 cv
475.045 303.878 475.553 303.745 476.236 303.745 cv
477.285 303.745 li
477.285 303.67 li
477.285 303.328 477.169 303.062 476.944 302.87 cv
476.719 302.687 476.402 302.587 475.994 302.587 cv
475.728 302.587 475.478 302.621 475.228 302.687 cv
474.978 302.754 474.745 302.845 474.52 302.962 cv
474.52 302.271 li
474.787 302.171 475.053 302.088 475.311 302.038 cv
475.57 301.988 475.819 301.954 476.069 301.954 cv
476.727 301.954 477.219 302.129 477.543 302.471 cv
477.868 302.812 478.035 303.328 478.035 304.02 cv
f
482.574 302.754 mo
482.574 300.289 li
483.323 300.289 li
483.323 306.618 li
482.574 306.618 li
482.574 305.935 li
482.415 306.21 482.215 306.41 481.974 306.535 cv
481.732 306.66 481.449 306.726 481.116 306.726 cv
480.566 306.726 480.117 306.51 479.767 306.077 cv
479.417 305.644 479.251 305.061 479.251 304.344 cv
479.251 303.628 479.417 303.054 479.767 302.612 cv
480.117 302.179 480.566 301.954 481.116 301.954 cv
481.449 301.954 481.732 302.021 481.974 302.154 cv
482.215 302.287 482.415 302.487 482.574 302.754 cv
480.025 304.344 mo
480.025 304.894 480.133 305.327 480.358 305.644 cv
480.583 305.96 480.9 306.11 481.299 306.11 cv
481.691 306.11 481.999 305.96 482.232 305.644 cv
482.457 305.327 482.574 304.894 482.574 304.344 cv
482.574 303.795 482.457 303.37 482.232 303.054 cv
481.999 302.737 481.691 302.579 481.299 302.579 cv
480.9 302.579 480.583 302.737 480.358 303.054 cv
480.133 303.37 480.025 303.795 480.025 304.344 cv
f
1 lw
1 lj
285.483 315.836 mo
293.811 315.836 li
.29987 .136965 1 0 cmyk
@
297.142 315.836 mo
305.47 315.836 li
@
289.647 320 mo
289.647 311.672 li
@
301.306 320 mo
301.306 311.672 li
@
285.483 318.836 mo
285.483 312.836 li
f
.5 lw
285.483 318.836 mo
285.483 312.836 li
@
297.142 318.836 mo
297.142 312.836 li
f
297.142 318.836 mo
297.142 312.836 li
@
293.811 318.836 mo
293.811 312.836 li
f
293.811 318.836 mo
293.811 312.836 li
@
305.47 318.836 mo
305.47 312.836 li
f
305.47 318.836 mo
305.47 312.836 li
@
292.647 320 mo
286.647 320 li
f
292.647 320 mo
286.647 320 li
@
304.306 320 mo
298.306 320 li
f
304.306 320 mo
298.306 320 li
@
292.647 311.672 mo
286.647 311.672 li
f
292.647 311.672 mo
286.647 311.672 li
@
304.306 311.672 mo
298.306 311.672 li
f
304.306 311.672 mo
298.306 311.672 li
@
289.647 312.836 mo
286.647 318.836 li
292.647 318.836 li
cp
f
0 lj
289.647 312.836 mo
286.647 318.836 li
292.647 318.836 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
301.306 312.836 mo
298.306 318.836 li
304.306 318.836 li
cp
.29987 .136965 1 0 cmyk
f
301.306 312.836 mo
298.306 318.836 li
304.306 318.836 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
311.283 312.679 mo
312.108 312.679 li
312.108 315.169 li
315.089 315.169 li
315.089 312.679 li
315.914 312.679 li
315.914 318.75 li
315.089 318.75 li
315.089 315.86 li
312.108 315.86 li
312.108 318.75 li
311.283 318.75 li
311.283 312.679 li
f
319.278 314.719 mo
318.878 314.719 318.562 314.877 318.329 315.194 cv
318.095 315.51 317.979 315.935 317.979 316.476 cv
317.979 317.026 318.087 317.451 318.32 317.767 cv
318.553 318.084 318.87 318.234 319.278 318.234 cv
319.678 318.234 319.994 318.084 320.227 317.767 cv
320.461 317.451 320.577 317.026 320.577 316.476 cv
320.577 315.943 320.461 315.51 320.227 315.194 cv
319.994 314.877 319.678 314.719 319.278 314.719 cv
319.278 314.086 mo
319.928 314.086 320.436 314.303 320.81 314.719 cv
321.177 315.144 321.368 315.727 321.368 316.476 cv
321.368 317.226 321.177 317.809 320.81 318.225 cv
320.436 318.65 319.928 318.858 319.278 318.858 cv
318.62 318.858 318.104 318.65 317.737 318.225 cv
317.371 317.809 317.188 317.226 317.188 316.476 cv
317.188 315.727 317.371 315.144 317.737 314.719 cv
318.104 314.303 318.62 314.086 319.278 314.086 cv
f
325.516 314.328 mo
325.516 315.036 li
325.299 314.936 325.083 314.853 324.858 314.794 cv
324.625 314.744 324.391 314.711 324.15 314.711 cv
323.775 314.711 323.492 314.769 323.309 314.886 cv
323.126 315.002 323.034 315.169 323.034 315.394 cv
323.034 315.569 323.101 315.702 323.234 315.802 cv
323.367 315.902 323.634 316.002 324.033 316.085 cv
324.291 316.143 li
324.824 316.26 325.199 316.426 325.424 316.626 cv
325.641 316.835 325.757 317.126 325.757 317.492 cv
325.757 317.917 325.591 318.25 325.258 318.492 cv
324.924 318.742 324.458 318.858 323.875 318.858 cv
323.625 318.858 323.375 318.833 323.109 318.792 cv
322.842 318.75 322.568 318.683 322.276 318.583 cv
322.276 317.809 li
322.551 317.959 322.826 318.067 323.092 318.134 cv
323.359 318.209 323.625 318.242 323.892 318.242 cv
324.242 318.242 324.516 318.184 324.708 318.067 cv
324.891 317.951 324.991 317.776 324.991 317.551 cv
324.991 317.351 324.916 317.193 324.783 317.084 cv
324.65 316.976 324.35 316.868 323.883 316.768 cv
323.625 316.71 li
323.159 316.61 322.817 316.46 322.618 316.26 cv
322.409 316.06 322.309 315.785 322.309 315.427 cv
322.309 315.002 322.459 314.669 322.759 314.436 cv
323.059 314.203 323.492 314.086 324.058 314.086 cv
324.333 314.086 324.591 314.111 324.841 314.153 cv
325.083 314.195 325.307 314.253 325.516 314.328 cv
f
327.689 312.904 mo
327.689 314.195 li
329.23 314.195 li
329.23 314.778 li
327.689 314.778 li
327.689 317.251 li
327.689 317.626 327.739 317.867 327.839 317.967 cv
327.939 318.075 328.147 318.125 328.464 318.125 cv
329.23 318.125 li
329.23 318.75 li
328.464 318.75 li
327.881 318.75 327.481 318.642 327.265 318.425 cv
327.048 318.209 326.94 317.817 326.94 317.251 cv
326.94 314.778 li
326.39 314.778 li
326.39 314.195 li
326.94 314.195 li
326.94 312.904 li
327.689 312.904 li
f
330.246 312.679 mo
331.07 312.679 li
331.07 318.059 li
334.027 318.059 li
334.027 318.75 li
330.246 318.75 li
330.246 312.679 li
f
334.851 314.195 mo
335.601 314.195 li
335.601 318.75 li
334.851 318.75 li
334.851 314.195 li
334.851 312.421 mo
335.601 312.421 li
335.601 313.37 li
334.851 313.37 li
334.851 312.421 li
f
339.473 312.421 mo
339.473 313.045 li
338.757 313.045 li
338.491 313.045 338.299 313.104 338.199 313.212 cv
338.091 313.32 338.041 313.512 338.041 313.795 cv
338.041 314.195 li
339.274 314.195 li
339.274 314.778 li
338.041 314.778 li
338.041 318.75 li
337.291 318.75 li
337.291 314.778 li
336.575 314.778 li
336.575 314.195 li
337.291 314.195 li
337.291 313.878 li
337.291 313.378 337.408 313.004 337.641 312.771 cv
337.874 312.537 338.249 312.421 338.766 312.421 cv
339.473 312.421 li
f
343.996 316.285 mo
343.996 316.651 li
340.556 316.651 li
340.589 317.168 340.739 317.567 341.022 317.834 cv
341.297 318.1 341.68 318.234 342.18 318.234 cv
342.463 318.234 342.746 318.2 343.013 318.134 cv
343.279 318.067 343.554 317.959 343.821 317.809 cv
343.821 318.517 li
343.554 318.633 343.279 318.725 342.996 318.775 cv
342.713 318.825 342.422 318.858 342.138 318.858 cv
341.406 318.858 340.831 318.65 340.406 318.234 cv
339.981 317.817 339.773 317.243 339.773 316.518 cv
339.773 315.777 339.973 315.186 340.373 314.744 cv
340.773 314.311 341.322 314.086 342.005 314.086 cv
342.621 314.086 343.104 314.286 343.463 314.678 cv
343.812 315.077 343.996 315.61 343.996 316.285 cv
343.246 316.068 mo
343.238 315.66 343.121 315.336 342.905 315.086 cv
342.68 314.844 342.38 314.719 342.014 314.719 cv
341.597 314.719 341.264 314.844 341.014 315.077 cv
340.764 315.311 340.614 315.644 340.581 316.068 cv
343.246 316.068 li
f
348.892 312.879 mo
348.892 313.678 li
348.576 313.528 348.285 313.42 348.01 313.345 cv
347.727 313.279 347.46 313.237 347.21 313.237 cv
346.761 313.237 346.411 313.328 346.169 313.495 cv
345.928 313.67 345.811 313.92 345.811 314.236 cv
345.811 314.503 345.886 314.711 346.053 314.844 cv
346.211 314.986 346.519 315.094 346.969 315.177 cv
347.468 315.277 li
348.076 315.394 348.526 315.602 348.818 315.893 cv
349.109 316.193 349.259 316.585 349.259 317.076 cv
349.259 317.667 349.059 318.109 348.668 318.409 cv
348.268 318.708 347.693 318.858 346.935 318.858 cv
346.644 318.858 346.336 318.825 346.011 318.767 cv
345.686 318.708 345.353 318.617 345.012 318.483 cv
345.012 317.634 li
345.345 317.826 345.67 317.967 345.986 318.059 cv
346.302 318.159 346.619 318.2 346.935 318.2 cv
347.402 318.2 347.76 318.109 348.018 317.926 cv
348.268 317.742 348.401 317.484 348.401 317.134 cv
348.401 316.835 348.31 316.601 348.126 316.435 cv
347.943 316.268 347.643 316.143 347.227 316.06 cv
346.727 315.96 li
346.111 315.844 345.67 315.652 345.395 315.385 cv
345.12 315.127 344.987 314.769 344.987 314.303 cv
344.987 313.77 345.17 313.345 345.553 313.037 cv
345.928 312.729 346.452 312.571 347.119 312.571 cv
347.402 312.571 347.685 312.596 347.985 312.646 cv
348.276 312.696 348.576 312.779 348.892 312.879 cv
f
351.249 312.904 mo
351.249 314.195 li
352.79 314.195 li
352.79 314.778 li
351.249 314.778 li
351.249 317.251 li
351.249 317.626 351.299 317.867 351.399 317.967 cv
351.499 318.075 351.707 318.125 352.024 318.125 cv
352.79 318.125 li
352.79 318.75 li
352.024 318.75 li
351.441 318.75 351.041 318.642 350.825 318.425 cv
350.608 318.209 350.5 317.817 350.5 317.251 cv
350.5 314.778 li
349.95 314.778 li
349.95 314.195 li
350.5 314.195 li
350.5 312.904 li
351.249 312.904 li
f
355.671 319.166 mo
355.455 319.699 355.247 320.057 355.047 320.224 cv
354.847 320.391 354.58 320.474 354.247 320.474 cv
353.648 320.474 li
353.648 319.849 li
354.089 319.849 li
354.289 319.849 354.447 319.799 354.564 319.699 cv
354.68 319.599 354.805 319.375 354.947 319.008 cv
355.08 318.675 li
353.24 314.195 li
354.031 314.195 li
355.455 317.759 li
356.879 314.195 li
357.67 314.195 li
355.671 319.166 li
f
358.703 312.421 mo
359.452 312.421 li
359.452 318.75 li
358.703 318.75 li
358.703 312.421 li
f
364.915 316.285 mo
364.915 316.651 li
361.476 316.651 li
361.509 317.168 361.659 317.567 361.942 317.834 cv
362.217 318.1 362.6 318.234 363.1 318.234 cv
363.383 318.234 363.666 318.2 363.933 318.134 cv
364.199 318.067 364.474 317.959 364.741 317.809 cv
364.741 318.517 li
364.474 318.633 364.199 318.725 363.916 318.775 cv
363.633 318.825 363.341 318.858 363.058 318.858 cv
362.325 318.858 361.751 318.65 361.326 318.234 cv
360.901 317.817 360.693 317.243 360.693 316.518 cv
360.693 315.777 360.893 315.186 361.293 314.744 cv
361.693 314.311 362.242 314.086 362.925 314.086 cv
363.541 314.086 364.024 314.286 364.382 314.678 cv
364.732 315.077 364.915 315.61 364.915 316.285 cv
364.166 316.068 mo
364.158 315.66 364.041 315.336 363.824 315.086 cv
363.6 314.844 363.3 314.719 362.933 314.719 cv
362.517 314.719 362.184 314.844 361.934 315.077 cv
361.684 315.311 361.534 315.644 361.501 316.068 cv
364.166 316.068 li
f
369.604 320.124 mo
369.604 320.707 li
365.282 320.707 li
365.282 320.124 li
369.604 320.124 li
f
374.093 316.002 mo
374.093 318.75 li
373.343 318.75 li
373.343 316.027 li
373.343 315.594 373.252 315.277 373.085 315.061 cv
372.919 314.844 372.669 314.736 372.336 314.736 cv
371.928 314.736 371.611 314.869 371.378 315.127 cv
371.145 315.385 371.028 315.735 371.028 316.177 cv
371.028 318.75 li
370.279 318.75 li
370.279 312.421 li
371.028 312.421 li
371.028 314.902 li
371.203 314.636 371.411 314.428 371.661 314.295 cv
371.903 314.161 372.186 314.086 372.502 314.086 cv
373.019 314.086 373.418 314.253 373.685 314.578 cv
373.951 314.902 374.093 315.377 374.093 316.002 cv
f
379.048 320.124 mo
379.048 320.707 li
374.726 320.707 li
374.726 320.124 li
379.048 320.124 li
f
383.42 312.879 mo
383.42 313.678 li
383.104 313.528 382.812 313.42 382.538 313.345 cv
382.254 313.279 381.988 313.237 381.738 313.237 cv
381.288 313.237 380.939 313.328 380.697 313.495 cv
380.456 313.67 380.339 313.92 380.339 314.236 cv
380.339 314.503 380.414 314.711 380.58 314.844 cv
380.739 314.986 381.047 315.094 381.497 315.177 cv
381.996 315.277 li
382.604 315.394 383.054 315.602 383.345 315.893 cv
383.637 316.193 383.787 316.585 383.787 317.076 cv
383.787 317.667 383.587 318.109 383.195 318.409 cv
382.796 318.708 382.221 318.858 381.463 318.858 cv
381.172 318.858 380.864 318.825 380.539 318.767 cv
380.214 318.708 379.881 318.617 379.539 318.483 cv
379.539 317.634 li
379.873 317.826 380.197 317.967 380.514 318.059 cv
380.83 318.159 381.147 318.2 381.463 318.2 cv
381.93 318.2 382.288 318.109 382.546 317.926 cv
382.796 317.742 382.929 317.484 382.929 317.134 cv
382.929 316.835 382.837 316.601 382.654 316.435 cv
382.471 316.268 382.171 316.143 381.755 316.06 cv
381.255 315.96 li
380.639 315.844 380.197 315.652 379.923 315.385 cv
379.648 315.127 379.514 314.769 379.514 314.303 cv
379.514 313.77 379.698 313.345 380.081 313.037 cv
380.456 312.729 380.98 312.571 381.646 312.571 cv
381.93 312.571 382.213 312.596 382.513 312.646 cv
382.804 312.696 383.104 312.779 383.42 312.879 cv
f
385.777 312.904 mo
385.777 314.195 li
387.318 314.195 li
387.318 314.778 li
385.777 314.778 li
385.777 317.251 li
385.777 317.626 385.827 317.867 385.927 317.967 cv
386.027 318.075 386.235 318.125 386.552 318.125 cv
387.318 318.125 li
387.318 318.75 li
386.552 318.75 li
385.969 318.75 385.569 318.642 385.352 318.425 cv
385.136 318.209 385.028 317.817 385.028 317.251 cv
385.028 314.778 li
384.478 314.778 li
384.478 314.195 li
385.028 314.195 li
385.028 312.904 li
385.777 312.904 li
f
390.066 314.719 mo
389.666 314.719 389.35 314.877 389.117 315.194 cv
388.883 315.51 388.767 315.935 388.767 316.476 cv
388.767 317.026 388.875 317.451 389.108 317.767 cv
389.341 318.084 389.658 318.234 390.066 318.234 cv
390.466 318.234 390.782 318.084 391.015 317.767 cv
391.249 317.451 391.365 317.026 391.365 316.476 cv
391.365 315.943 391.249 315.51 391.015 315.194 cv
390.782 314.877 390.466 314.719 390.066 314.719 cv
390.066 314.086 mo
390.716 314.086 391.224 314.303 391.598 314.719 cv
391.965 315.144 392.156 315.727 392.156 316.476 cv
392.156 317.226 391.965 317.809 391.598 318.225 cv
391.224 318.65 390.716 318.858 390.066 318.858 cv
389.408 318.858 388.892 318.65 388.525 318.225 cv
388.159 317.809 387.976 317.226 387.976 316.476 cv
387.976 315.727 388.159 315.144 388.525 314.719 cv
388.892 314.303 389.408 314.086 390.066 314.086 cv
f
395.163 314.719 mo
394.763 314.719 394.447 314.877 394.213 315.194 cv
393.98 315.51 393.864 315.935 393.864 316.476 cv
393.864 317.026 393.972 317.451 394.205 317.767 cv
394.438 318.084 394.755 318.234 395.163 318.234 cv
395.563 318.234 395.879 318.084 396.112 317.767 cv
396.345 317.451 396.462 317.026 396.462 316.476 cv
396.462 315.943 396.345 315.51 396.112 315.194 cv
395.879 314.877 395.563 314.719 395.163 314.719 cv
395.163 314.086 mo
395.812 314.086 396.32 314.303 396.695 314.719 cv
397.062 315.144 397.253 315.727 397.253 316.476 cv
397.253 317.226 397.062 317.809 396.695 318.225 cv
396.32 318.65 395.812 318.858 395.163 318.858 cv
394.505 318.858 393.988 318.65 393.622 318.225 cv
393.256 317.809 393.072 317.226 393.072 316.476 cv
393.072 315.727 393.256 315.144 393.622 314.719 cv
393.988 314.303 394.505 314.086 395.163 314.086 cv
f
398.494 312.421 mo
399.243 312.421 li
399.243 318.75 li
398.494 318.75 li
398.494 312.421 li
f
402.874 313.487 mo
401.759 316.51 li
403.99 316.51 li
402.874 313.487 li
402.408 312.679 mo
403.341 312.679 li
405.656 318.75 li
404.798 318.75 li
404.249 317.193 li
401.509 317.193 li
400.959 318.75 li
400.093 318.75 li
402.408 312.679 li
f
409.97 320.124 mo
409.97 320.707 li
405.648 320.707 li
405.648 320.124 li
409.97 320.124 li
f
413.668 314.886 mo
413.668 312.421 li
414.417 312.421 li
414.417 318.75 li
413.668 318.75 li
413.668 318.067 li
413.509 318.342 413.31 318.542 413.068 318.667 cv
412.827 318.792 412.543 318.858 412.21 318.858 cv
411.661 318.858 411.211 318.642 410.861 318.209 cv
410.511 317.776 410.345 317.193 410.345 316.476 cv
410.345 315.76 410.511 315.186 410.861 314.744 cv
411.211 314.311 411.661 314.086 412.21 314.086 cv
412.543 314.086 412.827 314.153 413.068 314.286 cv
413.31 314.419 413.509 314.619 413.668 314.886 cv
411.119 316.476 mo
411.119 317.026 411.228 317.459 411.452 317.776 cv
411.677 318.092 411.994 318.242 412.393 318.242 cv
412.785 318.242 413.093 318.092 413.326 317.776 cv
413.551 317.459 413.668 317.026 413.668 316.476 cv
413.668 315.927 413.551 315.502 413.326 315.186 cv
413.093 314.869 412.785 314.711 412.393 314.711 cv
411.994 314.711 411.677 314.869 411.452 315.186 cv
411.228 315.502 411.119 315.927 411.119 316.476 cv
f
418.031 316.46 mo
417.423 316.46 417.007 316.535 416.774 316.668 cv
416.541 316.81 416.424 317.043 416.424 317.376 cv
416.424 317.642 416.507 317.859 416.682 318.009 cv
416.857 318.167 417.099 318.242 417.398 318.242 cv
417.815 318.242 418.148 318.1 418.398 317.801 cv
418.648 317.509 418.773 317.118 418.773 316.626 cv
418.773 316.46 li
418.031 316.46 li
419.522 316.152 mo
419.522 318.75 li
418.773 318.75 li
418.773 318.059 li
418.598 318.342 418.381 318.542 418.131 318.667 cv
417.882 318.792 417.565 318.858 417.199 318.858 cv
416.732 318.858 416.358 318.733 416.083 318.475 cv
415.808 318.217 415.675 317.867 415.675 317.426 cv
415.675 316.918 415.841 316.535 416.191 316.268 cv
416.532 316.01 417.04 315.877 417.723 315.877 cv
418.773 315.877 li
418.773 315.802 li
418.773 315.46 418.656 315.194 418.431 315.002 cv
418.206 314.819 417.89 314.719 417.482 314.719 cv
417.215 314.719 416.965 314.753 416.716 314.819 cv
416.466 314.886 416.233 314.977 416.008 315.094 cv
416.008 314.403 li
416.274 314.303 416.541 314.22 416.799 314.17 cv
417.057 314.12 417.307 314.086 417.557 314.086 cv
418.215 314.086 418.706 314.261 419.031 314.603 cv
419.356 314.944 419.522 315.46 419.522 316.152 cv
f
422.962 319.166 mo
422.745 319.699 422.537 320.057 422.337 320.224 cv
422.137 320.391 421.871 320.474 421.538 320.474 cv
420.938 320.474 li
420.938 319.849 li
421.379 319.849 li
421.579 319.849 421.737 319.799 421.854 319.699 cv
421.971 319.599 422.096 319.375 422.237 319.008 cv
422.37 318.675 li
420.53 314.195 li
421.321 314.195 li
422.745 317.759 li
424.169 314.195 li
424.96 314.195 li
422.962 319.166 li
f
426.243 318.059 mo
427.584 318.059 li
427.584 313.428 li
426.126 313.72 li
426.126 312.97 li
427.575 312.679 li
428.4 312.679 li
428.4 318.059 li
429.741 318.059 li
429.741 318.75 li
426.243 318.75 li
426.243 318.059 li
f
432.106 318.059 mo
434.971 318.059 li
434.971 318.75 li
431.115 318.75 li
431.115 318.059 li
431.423 317.742 431.848 317.309 432.389 316.76 cv
432.922 316.218 433.263 315.868 433.405 315.71 cv
433.671 315.419 433.855 315.169 433.955 314.961 cv
434.055 314.761 434.113 314.553 434.113 314.353 cv
434.113 314.036 433.996 313.77 433.771 313.57 cv
433.547 313.37 433.255 313.262 432.889 313.262 cv
432.63 313.262 432.356 313.312 432.072 313.395 cv
431.789 313.487 431.481 313.62 431.156 313.803 cv
431.156 312.97 li
431.49 312.837 431.798 312.737 432.081 312.671 cv
432.364 312.604 432.63 312.571 432.872 312.571 cv
433.497 312.571 433.996 312.729 434.371 313.045 cv
434.746 313.362 434.937 313.778 434.937 314.303 cv
434.937 314.553 434.887 314.794 434.796 315.011 cv
434.704 315.236 434.538 315.502 434.288 315.802 cv
434.221 315.885 434.005 316.11 433.638 316.485 cv
433.272 316.86 432.764 317.384 432.106 318.059 cv
f
439.185 315.477 mo
439.576 315.56 439.884 315.735 440.101 316.002 cv
440.317 316.268 440.434 316.601 440.434 316.984 cv
440.434 317.584 440.226 318.05 439.818 318.375 cv
439.401 318.7 438.818 318.858 438.06 318.858 cv
437.802 318.858 437.536 318.833 437.269 318.783 cv
437.003 318.742 436.72 318.667 436.436 318.567 cv
436.436 317.776 li
436.661 317.909 436.911 318.009 437.186 318.075 cv
437.452 318.142 437.736 318.175 438.035 318.175 cv
438.552 318.175 438.943 318.075 439.21 317.876 cv
439.476 317.676 439.618 317.376 439.618 316.984 cv
439.618 316.635 439.493 316.352 439.243 316.152 cv
438.993 315.952 438.643 315.844 438.194 315.844 cv
437.486 315.844 li
437.486 315.169 li
438.227 315.169 li
438.627 315.169 438.935 315.094 439.151 314.927 cv
439.368 314.769 439.476 314.536 439.476 314.228 cv
439.476 313.92 439.359 313.678 439.143 313.512 cv
438.918 313.345 438.602 313.262 438.194 313.262 cv
437.969 313.262 437.727 313.287 437.469 313.337 cv
437.211 313.387 436.928 313.462 436.62 313.562 cv
436.62 312.829 li
436.928 312.746 437.219 312.679 437.494 312.637 cv
437.761 312.596 438.019 312.571 438.269 312.571 cv
438.885 312.571 439.376 312.712 439.743 312.995 cv
440.109 313.279 440.292 313.662 440.292 314.145 cv
440.292 314.478 440.192 314.761 440.001 314.994 cv
439.809 315.227 439.534 315.394 439.185 315.477 cv
f
442.624 312.904 mo
442.624 314.195 li
444.165 314.195 li
444.165 314.778 li
442.624 314.778 li
442.624 317.251 li
442.624 317.626 442.674 317.867 442.774 317.967 cv
442.874 318.075 443.082 318.125 443.399 318.125 cv
444.165 318.125 li
444.165 318.75 li
443.399 318.75 li
442.816 318.75 442.416 318.642 442.199 318.425 cv
441.983 318.209 441.875 317.817 441.875 317.251 cv
441.875 314.778 li
441.325 314.778 li
441.325 314.195 li
441.875 314.195 li
441.875 312.904 li
442.624 312.904 li
f
446.913 314.719 mo
446.513 314.719 446.197 314.877 445.964 315.194 cv
445.73 315.51 445.614 315.935 445.614 316.476 cv
445.614 317.026 445.722 317.451 445.955 317.767 cv
446.188 318.084 446.505 318.234 446.913 318.234 cv
447.313 318.234 447.629 318.084 447.862 317.767 cv
448.096 317.451 448.212 317.026 448.212 316.476 cv
448.212 315.943 448.096 315.51 447.862 315.194 cv
447.629 314.877 447.313 314.719 446.913 314.719 cv
446.913 314.086 mo
447.563 314.086 448.071 314.303 448.445 314.719 cv
448.812 315.144 449.003 315.727 449.003 316.476 cv
449.003 317.226 448.812 317.809 448.445 318.225 cv
448.071 318.65 447.563 318.858 446.913 318.858 cv
446.255 318.858 445.739 318.65 445.372 318.225 cv
445.006 317.809 444.823 317.226 444.823 316.476 cv
444.823 315.727 445.006 315.144 445.372 314.719 cv
445.739 314.303 446.255 314.086 446.913 314.086 cv
f
451.06 318.059 mo
453.925 318.059 li
453.925 318.75 li
450.069 318.75 li
450.069 318.059 li
450.377 317.742 450.802 317.309 451.344 316.76 cv
451.876 316.218 452.218 315.868 452.359 315.71 cv
452.626 315.419 452.809 315.169 452.909 314.961 cv
453.009 314.761 453.067 314.553 453.067 314.353 cv
453.067 314.036 452.951 313.77 452.726 313.57 cv
452.501 313.37 452.21 313.262 451.843 313.262 cv
451.585 313.262 451.31 313.312 451.027 313.395 cv
450.744 313.487 450.436 313.62 450.111 313.803 cv
450.111 312.97 li
450.444 312.837 450.752 312.737 451.035 312.671 cv
451.319 312.604 451.585 312.571 451.827 312.571 cv
452.451 312.571 452.951 312.729 453.326 313.045 cv
453.7 313.362 453.892 313.778 453.892 314.303 cv
453.892 314.553 453.842 314.794 453.75 315.011 cv
453.659 315.236 453.492 315.502 453.242 315.802 cv
453.176 315.885 452.959 316.11 452.593 316.485 cv
452.226 316.86 451.718 317.384 451.06 318.059 cv
f
455.657 312.679 mo
458.88 312.679 li
458.88 313.37 li
456.407 313.37 li
456.407 314.861 li
456.524 314.819 456.648 314.786 456.765 314.769 cv
456.882 314.753 457.007 314.736 457.123 314.736 cv
457.798 314.736 458.331 314.927 458.73 315.294 cv
459.13 315.669 459.33 316.168 459.33 316.801 cv
459.33 317.459 459.122 317.967 458.714 318.325 cv
458.306 318.683 457.731 318.858 456.998 318.858 cv
456.74 318.858 456.482 318.833 456.215 318.8 cv
455.949 318.758 455.682 318.7 455.399 318.608 cv
455.399 317.784 li
455.641 317.917 455.891 318.017 456.157 318.084 cv
456.415 318.15 456.69 318.175 456.982 318.175 cv
457.448 318.175 457.823 318.059 458.098 317.809 cv
458.364 317.559 458.506 317.226 458.506 316.801 cv
458.506 316.385 458.364 316.052 458.098 315.802 cv
457.823 315.552 457.448 315.427 456.982 315.427 cv
456.765 315.427 456.54 315.452 456.324 315.502 cv
456.107 315.552 455.882 315.627 455.657 315.727 cv
455.657 312.679 li
f
462.803 315.385 mo
462.436 315.385 462.145 315.519 461.928 315.769 cv
461.712 316.018 461.604 316.368 461.604 316.801 cv
461.604 317.243 461.712 317.592 461.928 317.842 cv
462.145 318.092 462.436 318.217 462.803 318.217 cv
463.169 318.217 463.461 318.092 463.677 317.842 cv
463.894 317.592 464.002 317.243 464.002 316.801 cv
464.002 316.368 463.894 316.018 463.677 315.769 cv
463.461 315.519 463.169 315.385 462.803 315.385 cv
464.435 312.812 mo
464.435 313.562 li
464.227 313.462 464.019 313.387 463.811 313.337 cv
463.594 313.287 463.386 313.262 463.186 313.262 cv
462.636 313.262 462.22 313.445 461.937 313.811 cv
461.654 314.178 461.487 314.736 461.454 315.469 cv
461.612 315.236 461.812 315.052 462.053 314.927 cv
462.295 314.803 462.561 314.736 462.853 314.736 cv
463.461 314.736 463.944 314.927 464.294 315.294 cv
464.643 315.66 464.827 316.168 464.827 316.801 cv
464.827 317.426 464.635 317.926 464.269 318.3 cv
463.902 318.675 463.411 318.858 462.803 318.858 cv
462.103 318.858 461.562 318.592 461.196 318.059 cv
460.821 317.526 460.638 316.743 460.638 315.719 cv
460.638 314.761 460.862 313.995 461.32 313.428 cv
461.77 312.862 462.386 312.571 463.153 312.571 cv
463.352 312.571 463.561 312.596 463.777 312.629 cv
463.985 312.671 464.202 312.729 464.435 312.812 cv
f
469.598 320.124 mo
469.598 320.707 li
465.276 320.707 li
465.276 320.124 li
469.598 320.124 li
f
472.938 314.894 mo
472.855 314.844 472.763 314.811 472.663 314.786 cv
472.563 314.769 472.455 314.753 472.338 314.753 cv
471.914 314.753 471.589 314.894 471.364 315.169 cv
471.131 315.444 471.023 315.835 471.023 316.352 cv
471.023 318.75 li
470.273 318.75 li
470.273 314.195 li
471.023 314.195 li
471.023 314.902 li
471.172 314.628 471.381 314.419 471.631 314.286 cv
471.88 314.153 472.188 314.086 472.555 314.086 cv
472.73 314.095 li
472.938 314.128 li
472.938 314.894 li
f
477.618 316.285 mo
477.618 316.651 li
474.179 316.651 li
474.212 317.168 474.362 317.567 474.645 317.834 cv
474.92 318.1 475.303 318.234 475.803 318.234 cv
476.086 318.234 476.369 318.2 476.636 318.134 cv
476.902 318.067 477.177 317.959 477.443 317.809 cv
477.443 318.517 li
477.177 318.633 476.902 318.725 476.619 318.775 cv
476.336 318.825 476.044 318.858 475.761 318.858 cv
475.028 318.858 474.454 318.65 474.029 318.234 cv
473.604 317.817 473.396 317.243 473.396 316.518 cv
473.396 315.777 473.596 315.186 473.996 314.744 cv
474.395 314.311 474.945 314.086 475.628 314.086 cv
476.244 314.086 476.727 314.286 477.085 314.678 cv
477.435 315.077 477.618 315.61 477.618 316.285 cv
476.869 316.068 mo
476.86 315.66 476.744 315.336 476.527 315.086 cv
476.302 314.844 476.003 314.719 475.636 314.719 cv
475.22 314.719 474.887 314.844 474.637 315.077 cv
474.387 315.311 474.237 315.644 474.204 316.068 cv
476.869 316.068 li
f
479.584 312.904 mo
479.584 314.195 li
481.124 314.195 li
481.124 314.778 li
479.584 314.778 li
479.584 317.251 li
479.584 317.626 479.634 317.867 479.734 317.967 cv
479.834 318.075 480.042 318.125 480.358 318.125 cv
481.124 318.125 li
481.124 318.75 li
480.358 318.75 li
479.775 318.75 479.376 318.642 479.159 318.425 cv
478.943 318.209 478.834 317.817 478.834 317.251 cv
478.834 314.778 li
478.285 314.778 li
478.285 314.195 li
478.834 314.195 li
478.834 312.904 li
479.584 312.904 li
f
482.032 316.951 mo
482.032 314.195 li
482.782 314.195 li
482.782 316.926 li
482.782 317.359 482.865 317.676 483.032 317.892 cv
483.198 318.109 483.448 318.217 483.789 318.217 cv
484.189 318.217 484.514 318.092 484.747 317.834 cv
484.98 317.576 485.097 317.226 485.097 316.776 cv
485.097 314.195 li
485.846 314.195 li
485.846 318.75 li
485.097 318.75 li
485.097 318.05 li
484.914 318.334 484.697 318.533 484.464 318.667 cv
484.222 318.792 483.948 318.858 483.631 318.858 cv
483.107 318.858 482.707 318.7 482.44 318.375 cv
482.165 318.059 482.032 317.584 482.032 316.951 cv
f
490.027 314.894 mo
489.944 314.844 489.852 314.811 489.752 314.786 cv
489.652 314.769 489.544 314.753 489.427 314.753 cv
489.003 314.753 488.678 314.894 488.453 315.169 cv
488.22 315.444 488.112 315.835 488.112 316.352 cv
488.112 318.75 li
487.362 318.75 li
487.362 314.195 li
488.112 314.195 li
488.112 314.902 li
488.262 314.628 488.47 314.419 488.72 314.286 cv
488.969 314.153 489.278 314.086 489.644 314.086 cv
489.819 314.095 li
490.027 314.128 li
490.027 314.894 li
f
494.599 316.002 mo
494.599 318.75 li
493.85 318.75 li
493.85 316.027 li
493.85 315.594 493.758 315.277 493.591 315.061 cv
493.425 314.844 493.175 314.736 492.842 314.736 cv
492.434 314.736 492.117 314.869 491.884 315.127 cv
491.651 315.385 491.534 315.735 491.534 316.177 cv
491.534 318.75 li
490.785 318.75 li
490.785 314.195 li
491.534 314.195 li
491.534 314.902 li
491.709 314.636 491.917 314.428 492.167 314.295 cv
492.409 314.161 492.692 314.086 493.008 314.086 cv
493.525 314.086 493.925 314.253 494.191 314.578 cv
494.458 314.902 494.599 315.377 494.599 316.002 cv
f
499.987 316.285 mo
499.987 316.651 li
496.548 316.651 li
496.581 317.168 496.731 317.567 497.014 317.834 cv
497.289 318.1 497.672 318.234 498.172 318.234 cv
498.455 318.234 498.738 318.2 499.005 318.134 cv
499.271 318.067 499.546 317.959 499.813 317.809 cv
499.813 318.517 li
499.546 318.633 499.271 318.725 498.988 318.775 cv
498.705 318.825 498.413 318.858 498.13 318.858 cv
497.397 318.858 496.823 318.65 496.398 318.234 cv
495.973 317.817 495.765 317.243 495.765 316.518 cv
495.765 315.777 495.965 315.186 496.365 314.744 cv
496.764 314.311 497.314 314.086 497.997 314.086 cv
498.613 314.086 499.096 314.286 499.454 314.678 cv
499.804 315.077 499.987 315.61 499.987 316.285 cv
499.238 316.068 mo
499.23 315.66 499.113 315.336 498.896 315.086 cv
498.672 314.844 498.372 314.719 498.005 314.719 cv
497.589 314.719 497.256 314.844 497.006 315.077 cv
496.756 315.311 496.606 315.644 496.573 316.068 cv
499.238 316.068 li
f
504.21 314.886 mo
504.21 312.421 li
504.959 312.421 li
504.959 318.75 li
504.21 318.75 li
504.21 318.067 li
504.051 318.342 503.852 318.542 503.61 318.667 cv
503.369 318.792 503.085 318.858 502.752 318.858 cv
502.203 318.858 501.753 318.642 501.403 318.209 cv
501.053 317.776 500.887 317.193 500.887 316.476 cv
500.887 315.76 501.053 315.186 501.403 314.744 cv
501.753 314.311 502.203 314.086 502.752 314.086 cv
503.085 314.086 503.369 314.153 503.61 314.286 cv
503.852 314.419 504.051 314.619 504.21 314.886 cv
501.661 316.476 mo
501.661 317.026 501.77 317.459 501.994 317.776 cv
502.219 318.092 502.536 318.242 502.936 318.242 cv
503.327 318.242 503.635 318.092 503.868 317.776 cv
504.093 317.459 504.21 317.026 504.21 316.476 cv
504.21 315.927 504.093 315.502 503.868 315.186 cv
503.635 314.869 503.327 314.711 502.936 314.711 cv
502.536 314.711 502.219 314.869 501.994 315.186 cv
501.77 315.502 501.661 315.927 501.661 316.476 cv
f
1 lw
1 lj
285.483 327.968 mo
293.811 327.968 li
@
297.142 327.968 mo
305.47 327.968 li
@
289.647 332.132 mo
289.647 323.804 li
@
301.306 332.132 mo
301.306 323.804 li
@
285.483 330.968 mo
285.483 324.968 li
f
.5 lw
285.483 330.968 mo
285.483 324.968 li
@
297.142 330.968 mo
297.142 324.968 li
f
297.142 330.968 mo
297.142 324.968 li
@
293.811 330.968 mo
293.811 324.968 li
f
293.811 330.968 mo
293.811 324.968 li
@
305.47 330.968 mo
305.47 324.968 li
f
305.47 330.968 mo
305.47 324.968 li
@
292.647 332.132 mo
286.647 332.132 li
f
292.647 332.132 mo
286.647 332.132 li
@
304.306 332.132 mo
298.306 332.132 li
f
304.306 332.132 mo
298.306 332.132 li
@
292.647 323.804 mo
286.647 323.804 li
f
292.647 323.804 mo
286.647 323.804 li
@
304.306 323.804 mo
298.306 323.804 li
f
304.306 323.804 mo
298.306 323.804 li
@
gsave
286.626 330.99 mo
292.669 330.99 li
292.669 324.947 li
286.626 324.947 li
cp
clp
288.499 325.197 mo
286.875 326.821 li
286.875 329.117 li
288.499 330.74 li
290.795 330.74 li
292.419 329.117 li
292.419 326.821 li
290.795 325.197 li
cp
f
0 lj
288.499 325.197 mo
286.875 326.821 li
286.875 329.117 li
288.499 330.74 li
290.795 330.74 li
292.419 329.117 li
292.419 326.821 li
290.795 325.197 li
cp
@
grestore
gsave
298.285 330.99 mo
304.328 330.99 li
304.328 324.947 li
298.285 324.947 li
cp
clp
300.158 325.197 mo
298.534 326.821 li
298.534 329.117 li
300.158 330.74 li
302.454 330.74 li
304.078 329.117 li
304.078 326.821 li
302.454 325.197 li
cp
f
0 lj
300.158 325.197 mo
298.534 326.821 li
298.534 329.117 li
300.158 330.74 li
302.454 330.74 li
304.078 329.117 li
304.078 326.821 li
302.454 325.197 li
cp
@
grestore
311.283 324.812 mo
312.108 324.812 li
312.108 327.302 li
315.089 327.302 li
315.089 324.812 li
315.914 324.812 li
315.914 330.883 li
315.089 330.883 li
315.089 327.993 li
312.108 327.993 li
312.108 330.883 li
311.283 330.883 li
311.283 324.812 li
f
319.278 326.852 mo
318.878 326.852 318.562 327.01 318.329 327.327 cv
318.095 327.643 317.979 328.068 317.979 328.609 cv
317.979 329.159 318.087 329.584 318.32 329.9 cv
318.553 330.217 318.87 330.367 319.278 330.367 cv
319.678 330.367 319.994 330.217 320.227 329.9 cv
320.461 329.584 320.577 329.159 320.577 328.609 cv
320.577 328.076 320.461 327.643 320.227 327.327 cv
319.994 327.01 319.678 326.852 319.278 326.852 cv
319.278 326.219 mo
319.928 326.219 320.436 326.436 320.81 326.852 cv
321.177 327.277 321.368 327.86 321.368 328.609 cv
321.368 329.359 321.177 329.942 320.81 330.358 cv
320.436 330.783 319.928 330.991 319.278 330.991 cv
318.62 330.991 318.104 330.783 317.737 330.358 cv
317.371 329.942 317.188 329.359 317.188 328.609 cv
317.188 327.86 317.371 327.277 317.737 326.852 cv
318.104 326.436 318.62 326.219 319.278 326.219 cv
f
325.516 326.461 mo
325.516 327.169 li
325.299 327.069 325.083 326.986 324.858 326.927 cv
324.625 326.877 324.391 326.844 324.15 326.844 cv
323.775 326.844 323.492 326.902 323.309 327.019 cv
323.126 327.135 323.034 327.302 323.034 327.527 cv
323.034 327.702 323.101 327.835 323.234 327.935 cv
323.367 328.035 323.634 328.135 324.033 328.218 cv
324.291 328.276 li
324.824 328.393 325.199 328.559 325.424 328.759 cv
325.641 328.968 325.757 329.259 325.757 329.625 cv
325.757 330.05 325.591 330.383 325.258 330.625 cv
324.924 330.875 324.458 330.991 323.875 330.991 cv
323.625 330.991 323.375 330.966 323.109 330.925 cv
322.842 330.883 322.568 330.816 322.276 330.716 cv
322.276 329.942 li
322.551 330.092 322.826 330.2 323.092 330.267 cv
323.359 330.342 323.625 330.375 323.892 330.375 cv
324.242 330.375 324.516 330.317 324.708 330.2 cv
324.891 330.083 324.991 329.909 324.991 329.684 cv
324.991 329.484 324.916 329.326 324.783 329.217 cv
324.65 329.109 324.35 329.001 323.883 328.901 cv
323.625 328.843 li
323.159 328.743 322.817 328.593 322.618 328.393 cv
322.409 328.193 322.309 327.918 322.309 327.56 cv
322.309 327.135 322.459 326.802 322.759 326.569 cv
323.059 326.336 323.492 326.219 324.058 326.219 cv
324.333 326.219 324.591 326.244 324.841 326.286 cv
325.083 326.328 325.307 326.386 325.516 326.461 cv
f
327.689 325.037 mo
327.689 326.328 li
329.23 326.328 li
329.23 326.911 li
327.689 326.911 li
327.689 329.384 li
327.689 329.759 327.739 330 327.839 330.1 cv
327.939 330.208 328.147 330.258 328.464 330.258 cv
329.23 330.258 li
329.23 330.883 li
328.464 330.883 li
327.881 330.883 327.481 330.775 327.265 330.558 cv
327.048 330.342 326.94 329.95 326.94 329.384 cv
326.94 326.911 li
326.39 326.911 li
326.39 326.328 li
326.94 326.328 li
326.94 325.037 li
327.689 325.037 li
f
330.246 324.812 mo
331.07 324.812 li
331.07 330.192 li
334.027 330.192 li
334.027 330.883 li
330.246 330.883 li
330.246 324.812 li
f
334.851 326.328 mo
335.601 326.328 li
335.601 330.883 li
334.851 330.883 li
334.851 326.328 li
334.851 324.554 mo
335.601 324.554 li
335.601 325.503 li
334.851 325.503 li
334.851 324.554 li
f
339.473 324.554 mo
339.473 325.178 li
338.757 325.178 li
338.491 325.178 338.299 325.237 338.199 325.345 cv
338.091 325.453 338.041 325.645 338.041 325.928 cv
338.041 326.328 li
339.274 326.328 li
339.274 326.911 li
338.041 326.911 li
338.041 330.883 li
337.291 330.883 li
337.291 326.911 li
336.575 326.911 li
336.575 326.328 li
337.291 326.328 li
337.291 326.011 li
337.291 325.511 337.408 325.137 337.641 324.904 cv
337.874 324.67 338.249 324.554 338.766 324.554 cv
339.473 324.554 li
f
343.996 328.418 mo
343.996 328.784 li
340.556 328.784 li
340.589 329.301 340.739 329.7 341.022 329.967 cv
341.297 330.233 341.68 330.367 342.18 330.367 cv
342.463 330.367 342.746 330.333 343.013 330.267 cv
343.279 330.2 343.554 330.092 343.821 329.942 cv
343.821 330.65 li
343.554 330.766 343.279 330.858 342.996 330.908 cv
342.713 330.958 342.422 330.991 342.138 330.991 cv
341.406 330.991 340.831 330.783 340.406 330.367 cv
339.981 329.95 339.773 329.376 339.773 328.651 cv
339.773 327.91 339.973 327.319 340.373 326.877 cv
340.773 326.444 341.322 326.219 342.005 326.219 cv
342.621 326.219 343.104 326.419 343.463 326.811 cv
343.812 327.21 343.996 327.743 343.996 328.418 cv
343.246 328.201 mo
343.238 327.793 343.121 327.469 342.905 327.219 cv
342.68 326.977 342.38 326.852 342.014 326.852 cv
341.597 326.852 341.264 326.977 341.014 327.21 cv
340.764 327.444 340.614 327.777 340.581 328.201 cv
343.246 328.201 li
f
348.892 325.012 mo
348.892 325.811 li
348.576 325.661 348.285 325.553 348.01 325.478 cv
347.727 325.411 347.46 325.37 347.21 325.37 cv
346.761 325.37 346.411 325.461 346.169 325.628 cv
345.928 325.803 345.811 326.053 345.811 326.369 cv
345.811 326.636 345.886 326.844 346.053 326.977 cv
346.211 327.119 346.519 327.227 346.969 327.31 cv
347.468 327.41 li
348.076 327.527 348.526 327.735 348.818 328.026 cv
349.109 328.326 349.259 328.718 349.259 329.209 cv
349.259 329.8 349.059 330.242 348.668 330.542 cv
348.268 330.841 347.693 330.991 346.935 330.991 cv
346.644 330.991 346.336 330.958 346.011 330.9 cv
345.686 330.841 345.353 330.75 345.012 330.616 cv
345.012 329.767 li
345.345 329.959 345.67 330.1 345.986 330.192 cv
346.302 330.292 346.619 330.333 346.935 330.333 cv
347.402 330.333 347.76 330.242 348.018 330.059 cv
348.268 329.875 348.401 329.617 348.401 329.267 cv
348.401 328.968 348.31 328.734 348.126 328.568 cv
347.943 328.401 347.643 328.276 347.227 328.193 cv
346.727 328.093 li
346.111 327.977 345.67 327.785 345.395 327.518 cv
345.12 327.26 344.987 326.902 344.987 326.436 cv
344.987 325.903 345.17 325.478 345.553 325.17 cv
345.928 324.862 346.452 324.704 347.119 324.704 cv
347.402 324.704 347.685 324.729 347.985 324.779 cv
348.276 324.829 348.576 324.912 348.892 325.012 cv
f
351.249 325.037 mo
351.249 326.328 li
352.79 326.328 li
352.79 326.911 li
351.249 326.911 li
351.249 329.384 li
351.249 329.759 351.299 330 351.399 330.1 cv
351.499 330.208 351.707 330.258 352.024 330.258 cv
352.79 330.258 li
352.79 330.883 li
352.024 330.883 li
351.441 330.883 351.041 330.775 350.825 330.558 cv
350.608 330.342 350.5 329.95 350.5 329.384 cv
350.5 326.911 li
349.95 326.911 li
349.95 326.328 li
350.5 326.328 li
350.5 325.037 li
351.249 325.037 li
f
355.671 331.299 mo
355.455 331.832 355.247 332.19 355.047 332.357 cv
354.847 332.524 354.58 332.607 354.247 332.607 cv
353.648 332.607 li
353.648 331.982 li
354.089 331.982 li
354.289 331.982 354.447 331.932 354.564 331.832 cv
354.68 331.732 354.805 331.508 354.947 331.141 cv
355.08 330.808 li
353.24 326.328 li
354.031 326.328 li
355.455 329.892 li
356.879 326.328 li
357.67 326.328 li
355.671 331.299 li
f
358.703 324.554 mo
359.452 324.554 li
359.452 330.883 li
358.703 330.883 li
358.703 324.554 li
f
364.915 328.418 mo
364.915 328.784 li
361.476 328.784 li
361.509 329.301 361.659 329.7 361.942 329.967 cv
362.217 330.233 362.6 330.367 363.1 330.367 cv
363.383 330.367 363.666 330.333 363.933 330.267 cv
364.199 330.2 364.474 330.092 364.741 329.942 cv
364.741 330.65 li
364.474 330.766 364.199 330.858 363.916 330.908 cv
363.633 330.958 363.341 330.991 363.058 330.991 cv
362.325 330.991 361.751 330.783 361.326 330.367 cv
360.901 329.95 360.693 329.376 360.693 328.651 cv
360.693 327.91 360.893 327.319 361.293 326.877 cv
361.693 326.444 362.242 326.219 362.925 326.219 cv
363.541 326.219 364.024 326.419 364.382 326.811 cv
364.732 327.21 364.915 327.743 364.915 328.418 cv
364.166 328.201 mo
364.158 327.793 364.041 327.469 363.824 327.219 cv
363.6 326.977 363.3 326.852 362.933 326.852 cv
362.517 326.852 362.184 326.977 361.934 327.21 cv
361.684 327.444 361.534 327.777 361.501 328.201 cv
364.166 328.201 li
f
369.604 332.257 mo
369.604 332.84 li
365.282 332.84 li
365.282 332.257 li
369.604 332.257 li
f
374.093 328.135 mo
374.093 330.883 li
373.343 330.883 li
373.343 328.16 li
373.343 327.727 373.252 327.41 373.085 327.194 cv
372.919 326.977 372.669 326.869 372.336 326.869 cv
371.928 326.869 371.611 327.002 371.378 327.26 cv
371.145 327.518 371.028 327.868 371.028 328.31 cv
371.028 330.883 li
370.279 330.883 li
370.279 324.554 li
371.028 324.554 li
371.028 327.035 li
371.203 326.769 371.411 326.561 371.661 326.428 cv
371.903 326.294 372.186 326.219 372.502 326.219 cv
373.019 326.219 373.418 326.386 373.685 326.711 cv
373.951 327.035 374.093 327.51 374.093 328.135 cv
f
379.048 332.257 mo
379.048 332.84 li
374.726 332.84 li
374.726 332.257 li
379.048 332.257 li
f
383.42 325.012 mo
383.42 325.811 li
383.104 325.661 382.812 325.553 382.538 325.478 cv
382.254 325.411 381.988 325.37 381.738 325.37 cv
381.288 325.37 380.939 325.461 380.697 325.628 cv
380.456 325.803 380.339 326.053 380.339 326.369 cv
380.339 326.636 380.414 326.844 380.58 326.977 cv
380.739 327.119 381.047 327.227 381.497 327.31 cv
381.996 327.41 li
382.604 327.527 383.054 327.735 383.345 328.026 cv
383.637 328.326 383.787 328.718 383.787 329.209 cv
383.787 329.8 383.587 330.242 383.195 330.542 cv
382.796 330.841 382.221 330.991 381.463 330.991 cv
381.172 330.991 380.864 330.958 380.539 330.9 cv
380.214 330.841 379.881 330.75 379.539 330.616 cv
379.539 329.767 li
379.873 329.959 380.197 330.1 380.514 330.192 cv
380.83 330.292 381.147 330.333 381.463 330.333 cv
381.93 330.333 382.288 330.242 382.546 330.059 cv
382.796 329.875 382.929 329.617 382.929 329.267 cv
382.929 328.968 382.837 328.734 382.654 328.568 cv
382.471 328.401 382.171 328.276 381.755 328.193 cv
381.255 328.093 li
380.639 327.977 380.197 327.785 379.923 327.518 cv
379.648 327.26 379.514 326.902 379.514 326.436 cv
379.514 325.903 379.698 325.478 380.081 325.17 cv
380.456 324.862 380.98 324.704 381.646 324.704 cv
381.93 324.704 382.213 324.729 382.513 324.779 cv
382.804 324.829 383.104 324.912 383.42 325.012 cv
f
385.777 325.037 mo
385.777 326.328 li
387.318 326.328 li
387.318 326.911 li
385.777 326.911 li
385.777 329.384 li
385.777 329.759 385.827 330 385.927 330.1 cv
386.027 330.208 386.235 330.258 386.552 330.258 cv
387.318 330.258 li
387.318 330.883 li
386.552 330.883 li
385.969 330.883 385.569 330.775 385.352 330.558 cv
385.136 330.342 385.028 329.95 385.028 329.384 cv
385.028 326.911 li
384.478 326.911 li
384.478 326.328 li
385.028 326.328 li
385.028 325.037 li
385.777 325.037 li
f
390.066 326.852 mo
389.666 326.852 389.35 327.01 389.117 327.327 cv
388.883 327.643 388.767 328.068 388.767 328.609 cv
388.767 329.159 388.875 329.584 389.108 329.9 cv
389.341 330.217 389.658 330.367 390.066 330.367 cv
390.466 330.367 390.782 330.217 391.015 329.9 cv
391.249 329.584 391.365 329.159 391.365 328.609 cv
391.365 328.076 391.249 327.643 391.015 327.327 cv
390.782 327.01 390.466 326.852 390.066 326.852 cv
390.066 326.219 mo
390.716 326.219 391.224 326.436 391.598 326.852 cv
391.965 327.277 392.156 327.86 392.156 328.609 cv
392.156 329.359 391.965 329.942 391.598 330.358 cv
391.224 330.783 390.716 330.991 390.066 330.991 cv
389.408 330.991 388.892 330.783 388.525 330.358 cv
388.159 329.942 387.976 329.359 387.976 328.609 cv
387.976 327.86 388.159 327.277 388.525 326.852 cv
388.892 326.436 389.408 326.219 390.066 326.219 cv
f
395.163 326.852 mo
394.763 326.852 394.447 327.01 394.213 327.327 cv
393.98 327.643 393.864 328.068 393.864 328.609 cv
393.864 329.159 393.972 329.584 394.205 329.9 cv
394.438 330.217 394.755 330.367 395.163 330.367 cv
395.563 330.367 395.879 330.217 396.112 329.9 cv
396.345 329.584 396.462 329.159 396.462 328.609 cv
396.462 328.076 396.345 327.643 396.112 327.327 cv
395.879 327.01 395.563 326.852 395.163 326.852 cv
395.163 326.219 mo
395.812 326.219 396.32 326.436 396.695 326.852 cv
397.062 327.277 397.253 327.86 397.253 328.609 cv
397.253 329.359 397.062 329.942 396.695 330.358 cv
396.32 330.783 395.812 330.991 395.163 330.991 cv
394.505 330.991 393.988 330.783 393.622 330.358 cv
393.256 329.942 393.072 329.359 393.072 328.609 cv
393.072 327.86 393.256 327.277 393.622 326.852 cv
393.988 326.436 394.505 326.219 395.163 326.219 cv
f
398.494 324.554 mo
399.243 324.554 li
399.243 330.883 li
398.494 330.883 li
398.494 324.554 li
f
402.874 325.62 mo
401.759 328.643 li
403.99 328.643 li
402.874 325.62 li
402.408 324.812 mo
403.341 324.812 li
405.656 330.883 li
404.798 330.883 li
404.249 329.326 li
401.509 329.326 li
400.959 330.883 li
400.093 330.883 li
402.408 324.812 li
f
409.97 332.257 mo
409.97 332.84 li
405.648 332.84 li
405.648 332.257 li
409.97 332.257 li
f
413.668 327.019 mo
413.668 324.554 li
414.417 324.554 li
414.417 330.883 li
413.668 330.883 li
413.668 330.2 li
413.509 330.475 413.31 330.675 413.068 330.8 cv
412.827 330.925 412.543 330.991 412.21 330.991 cv
411.661 330.991 411.211 330.775 410.861 330.342 cv
410.511 329.909 410.345 329.326 410.345 328.609 cv
410.345 327.893 410.511 327.319 410.861 326.877 cv
411.211 326.444 411.661 326.219 412.21 326.219 cv
412.543 326.219 412.827 326.286 413.068 326.419 cv
413.31 326.552 413.509 326.752 413.668 327.019 cv
411.119 328.609 mo
411.119 329.159 411.228 329.592 411.452 329.909 cv
411.677 330.225 411.994 330.375 412.393 330.375 cv
412.785 330.375 413.093 330.225 413.326 329.909 cv
413.551 329.592 413.668 329.159 413.668 328.609 cv
413.668 328.06 413.551 327.635 413.326 327.319 cv
413.093 327.002 412.785 326.844 412.393 326.844 cv
411.994 326.844 411.677 327.002 411.452 327.319 cv
411.228 327.635 411.119 328.06 411.119 328.609 cv
f
418.031 328.593 mo
417.423 328.593 417.007 328.668 416.774 328.801 cv
416.541 328.943 416.424 329.176 416.424 329.509 cv
416.424 329.775 416.507 329.992 416.682 330.142 cv
416.857 330.3 417.099 330.375 417.398 330.375 cv
417.815 330.375 418.148 330.233 418.398 329.934 cv
418.648 329.642 418.773 329.251 418.773 328.759 cv
418.773 328.593 li
418.031 328.593 li
419.522 328.285 mo
419.522 330.883 li
418.773 330.883 li
418.773 330.192 li
418.598 330.475 418.381 330.675 418.131 330.8 cv
417.882 330.925 417.565 330.991 417.199 330.991 cv
416.732 330.991 416.358 330.866 416.083 330.608 cv
415.808 330.35 415.675 330 415.675 329.559 cv
415.675 329.051 415.841 328.668 416.191 328.401 cv
416.532 328.143 417.04 328.01 417.723 328.01 cv
418.773 328.01 li
418.773 327.935 li
418.773 327.593 418.656 327.327 418.431 327.135 cv
418.206 326.952 417.89 326.852 417.482 326.852 cv
417.215 326.852 416.965 326.886 416.716 326.952 cv
416.466 327.019 416.233 327.11 416.008 327.227 cv
416.008 326.536 li
416.274 326.436 416.541 326.353 416.799 326.303 cv
417.057 326.253 417.307 326.219 417.557 326.219 cv
418.215 326.219 418.706 326.394 419.031 326.736 cv
419.356 327.077 419.522 327.593 419.522 328.285 cv
f
422.962 331.299 mo
422.745 331.832 422.537 332.19 422.337 332.357 cv
422.137 332.524 421.871 332.607 421.538 332.607 cv
420.938 332.607 li
420.938 331.982 li
421.379 331.982 li
421.579 331.982 421.737 331.932 421.854 331.832 cv
421.971 331.732 422.096 331.508 422.237 331.141 cv
422.37 330.808 li
420.53 326.328 li
421.321 326.328 li
422.745 329.892 li
424.169 326.328 li
424.96 326.328 li
422.962 331.299 li
f
426.809 330.192 mo
429.674 330.192 li
429.674 330.883 li
425.818 330.883 li
425.818 330.192 li
426.126 329.875 426.551 329.442 427.092 328.893 cv
427.625 328.351 427.967 328.001 428.108 327.843 cv
428.375 327.552 428.558 327.302 428.658 327.094 cv
428.758 326.894 428.816 326.686 428.816 326.486 cv
428.816 326.169 428.7 325.903 428.475 325.703 cv
428.25 325.503 427.958 325.395 427.592 325.395 cv
427.334 325.395 427.059 325.445 426.776 325.528 cv
426.493 325.62 426.185 325.753 425.86 325.936 cv
425.86 325.103 li
426.193 324.97 426.501 324.87 426.784 324.804 cv
427.067 324.737 427.334 324.704 427.575 324.704 cv
428.2 324.704 428.7 324.862 429.074 325.178 cv
429.449 325.495 429.641 325.911 429.641 326.436 cv
429.641 326.686 429.591 326.927 429.499 327.144 cv
429.408 327.369 429.241 327.635 428.991 327.935 cv
428.924 328.018 428.708 328.243 428.342 328.618 cv
427.975 328.993 427.467 329.517 426.809 330.192 cv
f
431.406 324.812 mo
434.629 324.812 li
434.629 325.503 li
432.156 325.503 li
432.156 326.994 li
432.272 326.952 432.397 326.919 432.514 326.902 cv
432.63 326.886 432.755 326.869 432.872 326.869 cv
433.547 326.869 434.08 327.06 434.479 327.427 cv
434.879 327.802 435.079 328.301 435.079 328.934 cv
435.079 329.592 434.871 330.1 434.463 330.458 cv
434.055 330.816 433.48 330.991 432.747 330.991 cv
432.489 330.991 432.231 330.966 431.964 330.933 cv
431.698 330.891 431.431 330.833 431.148 330.741 cv
431.148 329.917 li
431.39 330.05 431.639 330.15 431.906 330.217 cv
432.164 330.283 432.439 330.308 432.73 330.308 cv
433.197 330.308 433.572 330.192 433.846 329.942 cv
434.113 329.692 434.254 329.359 434.254 328.934 cv
434.254 328.518 434.113 328.185 433.846 327.935 cv
433.572 327.685 433.197 327.56 432.73 327.56 cv
432.514 327.56 432.289 327.585 432.072 327.635 cv
431.856 327.685 431.631 327.76 431.406 327.86 cv
431.406 324.812 li
f
436.486 324.812 mo
440.392 324.812 li
440.392 325.162 li
438.185 330.883 li
437.327 330.883 li
439.401 325.503 li
436.486 325.503 li
436.486 324.812 li
f
442.624 325.037 mo
442.624 326.328 li
444.165 326.328 li
444.165 326.911 li
442.624 326.911 li
442.624 329.384 li
442.624 329.759 442.674 330 442.774 330.1 cv
442.874 330.208 443.082 330.258 443.399 330.258 cv
444.165 330.258 li
444.165 330.883 li
443.399 330.883 li
442.816 330.883 442.416 330.775 442.199 330.558 cv
441.983 330.342 441.875 329.95 441.875 329.384 cv
441.875 326.911 li
441.325 326.911 li
441.325 326.328 li
441.875 326.328 li
441.875 325.037 li
442.624 325.037 li
f
446.913 326.852 mo
446.513 326.852 446.197 327.01 445.964 327.327 cv
445.73 327.643 445.614 328.068 445.614 328.609 cv
445.614 329.159 445.722 329.584 445.955 329.9 cv
446.188 330.217 446.505 330.367 446.913 330.367 cv
447.313 330.367 447.629 330.217 447.862 329.9 cv
448.096 329.584 448.212 329.159 448.212 328.609 cv
448.212 328.076 448.096 327.643 447.862 327.327 cv
447.629 327.01 447.313 326.852 446.913 326.852 cv
446.913 326.219 mo
447.563 326.219 448.071 326.436 448.445 326.852 cv
448.812 327.277 449.003 327.86 449.003 328.609 cv
449.003 329.359 448.812 329.942 448.445 330.358 cv
448.071 330.783 447.563 330.991 446.913 330.991 cv
446.255 330.991 445.739 330.783 445.372 330.358 cv
445.006 329.942 444.823 329.359 444.823 328.609 cv
444.823 327.86 445.006 327.277 445.372 326.852 cv
445.739 326.436 446.255 326.219 446.913 326.219 cv
f
452.843 327.61 mo
453.234 327.693 453.542 327.868 453.759 328.135 cv
453.975 328.401 454.092 328.734 454.092 329.117 cv
454.092 329.717 453.884 330.183 453.475 330.508 cv
453.059 330.833 452.476 330.991 451.718 330.991 cv
451.46 330.991 451.194 330.966 450.927 330.916 cv
450.661 330.875 450.377 330.8 450.094 330.7 cv
450.094 329.909 li
450.319 330.042 450.569 330.142 450.844 330.208 cv
451.11 330.275 451.393 330.308 451.693 330.308 cv
452.21 330.308 452.601 330.208 452.868 330.009 cv
453.134 329.809 453.276 329.509 453.276 329.117 cv
453.276 328.768 453.151 328.485 452.901 328.285 cv
452.651 328.085 452.301 327.977 451.852 327.977 cv
451.144 327.977 li
451.144 327.302 li
451.885 327.302 li
452.285 327.302 452.593 327.227 452.809 327.06 cv
453.026 326.902 453.134 326.669 453.134 326.361 cv
453.134 326.053 453.017 325.811 452.801 325.645 cv
452.576 325.478 452.26 325.395 451.852 325.395 cv
451.627 325.395 451.385 325.42 451.127 325.47 cv
450.869 325.52 450.586 325.595 450.277 325.695 cv
450.277 324.962 li
450.586 324.879 450.877 324.812 451.152 324.77 cv
451.418 324.729 451.677 324.704 451.926 324.704 cv
452.543 324.704 453.034 324.845 453.401 325.128 cv
453.767 325.411 453.95 325.795 453.95 326.278 cv
453.95 326.611 453.85 326.894 453.659 327.127 cv
453.467 327.36 453.192 327.527 452.843 327.61 cv
f
457.506 327.518 mo
457.14 327.518 456.848 327.652 456.632 327.902 cv
456.415 328.151 456.307 328.501 456.307 328.934 cv
456.307 329.376 456.415 329.725 456.632 329.975 cv
456.848 330.225 457.14 330.35 457.506 330.35 cv
457.873 330.35 458.164 330.225 458.381 329.975 cv
458.597 329.725 458.705 329.376 458.705 328.934 cv
458.705 328.501 458.597 328.151 458.381 327.902 cv
458.164 327.652 457.873 327.518 457.506 327.518 cv
459.139 324.945 mo
459.139 325.695 li
458.93 325.595 458.722 325.52 458.514 325.47 cv
458.297 325.42 458.089 325.395 457.889 325.395 cv
457.34 325.395 456.923 325.578 456.64 325.944 cv
456.357 326.311 456.19 326.869 456.157 327.602 cv
456.315 327.369 456.515 327.185 456.757 327.06 cv
456.998 326.936 457.265 326.869 457.556 326.869 cv
458.164 326.869 458.647 327.06 458.997 327.427 cv
459.347 327.793 459.53 328.301 459.53 328.934 cv
459.53 329.559 459.338 330.059 458.972 330.433 cv
458.606 330.808 458.114 330.991 457.506 330.991 cv
456.807 330.991 456.265 330.725 455.899 330.192 cv
455.524 329.659 455.341 328.876 455.341 327.852 cv
455.341 326.894 455.566 326.128 456.024 325.561 cv
456.474 324.995 457.09 324.704 457.856 324.704 cv
458.056 324.704 458.264 324.729 458.481 324.762 cv
458.689 324.804 458.905 324.862 459.139 324.945 cv
f
463.203 325.528 mo
461.129 328.768 li
463.203 328.768 li
463.203 325.528 li
462.986 324.812 mo
464.019 324.812 li
464.019 328.768 li
464.885 328.768 li
464.885 329.451 li
464.019 329.451 li
464.019 330.883 li
463.203 330.883 li
463.203 329.451 li
460.463 329.451 li
460.463 328.659 li
462.986 324.812 li
f
469.598 332.257 mo
469.598 332.84 li
465.276 332.84 li
465.276 332.257 li
469.598 332.257 li
f
472.372 328.593 mo
471.764 328.593 471.347 328.668 471.114 328.801 cv
470.881 328.943 470.764 329.176 470.764 329.509 cv
470.764 329.775 470.848 329.992 471.023 330.142 cv
471.197 330.3 471.439 330.375 471.739 330.375 cv
472.155 330.375 472.488 330.233 472.738 329.934 cv
472.988 329.642 473.113 329.251 473.113 328.759 cv
473.113 328.593 li
472.372 328.593 li
473.862 328.285 mo
473.862 330.883 li
473.113 330.883 li
473.113 330.192 li
472.938 330.475 472.721 330.675 472.472 330.8 cv
472.222 330.925 471.905 330.991 471.539 330.991 cv
471.073 330.991 470.698 330.866 470.423 330.608 cv
470.148 330.35 470.015 330 470.015 329.559 cv
470.015 329.051 470.181 328.668 470.531 328.401 cv
470.873 328.143 471.381 328.01 472.064 328.01 cv
473.113 328.01 li
473.113 327.935 li
473.113 327.593 472.996 327.327 472.771 327.135 cv
472.547 326.952 472.23 326.852 471.822 326.852 cv
471.556 326.852 471.306 326.886 471.056 326.952 cv
470.806 327.019 470.573 327.11 470.348 327.227 cv
470.348 326.536 li
470.615 326.436 470.881 326.353 471.139 326.303 cv
471.397 326.253 471.647 326.219 471.897 326.219 cv
472.555 326.219 473.046 326.394 473.371 326.736 cv
473.696 327.077 473.862 327.593 473.862 328.285 cv
f
477.71 324.554 mo
477.71 325.178 li
476.994 325.178 li
476.727 325.178 476.536 325.237 476.436 325.345 cv
476.328 325.453 476.278 325.645 476.278 325.928 cv
476.278 326.328 li
477.51 326.328 li
477.51 326.911 li
476.278 326.911 li
476.278 330.883 li
475.528 330.883 li
475.528 326.911 li
474.812 326.911 li
474.812 326.328 li
475.528 326.328 li
475.528 326.011 li
475.528 325.511 475.645 325.137 475.878 324.904 cv
476.111 324.67 476.486 324.554 477.002 324.554 cv
477.71 324.554 li
f
479.076 325.037 mo
479.076 326.328 li
480.617 326.328 li
480.617 326.911 li
479.076 326.911 li
479.076 329.384 li
479.076 329.759 479.126 330 479.226 330.1 cv
479.326 330.208 479.534 330.258 479.85 330.258 cv
480.617 330.258 li
480.617 330.883 li
479.85 330.883 li
479.267 330.883 478.868 330.775 478.651 330.558 cv
478.435 330.342 478.326 329.95 478.326 329.384 cv
478.326 326.911 li
477.777 326.911 li
477.777 326.328 li
478.326 326.328 li
478.326 325.037 li
479.076 325.037 li
f
485.497 328.418 mo
485.497 328.784 li
482.057 328.784 li
482.091 329.301 482.241 329.7 482.524 329.967 cv
482.798 330.233 483.182 330.367 483.681 330.367 cv
483.964 330.367 484.248 330.333 484.514 330.267 cv
484.781 330.2 485.055 330.092 485.322 329.942 cv
485.322 330.65 li
485.055 330.766 484.781 330.858 484.497 330.908 cv
484.214 330.958 483.923 330.991 483.64 330.991 cv
482.907 330.991 482.332 330.783 481.907 330.367 cv
481.483 329.95 481.274 329.376 481.274 328.651 cv
481.274 327.91 481.474 327.319 481.874 326.877 cv
482.274 326.444 482.823 326.219 483.506 326.219 cv
484.123 326.219 484.606 326.419 484.964 326.811 cv
485.314 327.21 485.497 327.743 485.497 328.418 cv
484.747 328.201 mo
484.739 327.793 484.622 327.469 484.406 327.219 cv
484.181 326.977 483.881 326.852 483.515 326.852 cv
483.098 326.852 482.765 326.977 482.515 327.21 cv
482.265 327.444 482.116 327.777 482.082 328.201 cv
484.747 328.201 li
f
489.361 327.027 mo
489.278 326.977 489.186 326.944 489.086 326.919 cv
488.986 326.902 488.878 326.886 488.761 326.886 cv
488.337 326.886 488.012 327.027 487.787 327.302 cv
487.554 327.577 487.446 327.968 487.446 328.485 cv
487.446 330.883 li
486.696 330.883 li
486.696 326.328 li
487.446 326.328 li
487.446 327.035 li
487.595 326.761 487.804 326.552 488.053 326.419 cv
488.303 326.286 488.611 326.219 488.978 326.219 cv
489.153 326.228 li
489.361 326.261 li
489.361 327.027 li
f
1 lw
285.483 340.101 mo
293.811 340.101 li
0 .993988 1 0 cmyk
@
297.142 340.101 mo
305.47 340.101 li
@
289.647 344.265 mo
289.647 335.937 li
@
301.306 344.265 mo
301.306 335.937 li
@
285.483 343.101 mo
285.483 337.101 li
f
.5 lw
285.483 343.101 mo
285.483 337.101 li
@
297.142 343.101 mo
297.142 337.101 li
f
297.142 343.101 mo
297.142 337.101 li
@
293.811 343.101 mo
293.811 337.101 li
f
293.811 343.101 mo
293.811 337.101 li
@
305.47 343.101 mo
305.47 337.101 li
f
305.47 343.101 mo
305.47 337.101 li
@
292.647 344.265 mo
286.647 344.265 li
f
292.647 344.265 mo
286.647 344.265 li
@
304.306 344.265 mo
298.306 344.265 li
f
304.306 344.265 mo
298.306 344.265 li
@
292.647 335.937 mo
286.647 335.937 li
f
292.647 335.937 mo
286.647 335.937 li
@
304.306 335.937 mo
298.306 335.937 li
f
304.306 335.937 mo
298.306 335.937 li
@
286.647 343.101 mo
292.647 343.101 li
292.647 337.101 li
286.647 337.101 li
cp
f
0 lj
286.647 343.101 mo
292.647 343.101 li
292.647 337.101 li
286.647 337.101 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
298.306 343.101 mo
304.306 343.101 li
304.306 337.101 li
298.306 337.101 li
cp
0 .993988 1 0 cmyk
f
298.306 343.101 mo
304.306 343.101 li
304.306 337.101 li
298.306 337.101 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
311.283 336.945 mo
312.108 336.945 li
312.108 339.435 li
315.089 339.435 li
315.089 336.945 li
315.914 336.945 li
315.914 343.016 li
315.089 343.016 li
315.089 340.126 li
312.108 340.126 li
312.108 343.016 li
311.283 343.016 li
311.283 336.945 li
f
319.278 338.985 mo
318.878 338.985 318.562 339.143 318.329 339.46 cv
318.095 339.776 317.979 340.201 317.979 340.742 cv
317.979 341.292 318.087 341.717 318.32 342.033 cv
318.553 342.35 318.87 342.5 319.278 342.5 cv
319.678 342.5 319.994 342.35 320.227 342.033 cv
320.461 341.717 320.577 341.292 320.577 340.742 cv
320.577 340.209 320.461 339.776 320.227 339.46 cv
319.994 339.143 319.678 338.985 319.278 338.985 cv
319.278 338.352 mo
319.928 338.352 320.436 338.569 320.81 338.985 cv
321.177 339.41 321.368 339.993 321.368 340.742 cv
321.368 341.492 321.177 342.075 320.81 342.491 cv
320.436 342.916 319.928 343.124 319.278 343.124 cv
318.62 343.124 318.104 342.916 317.737 342.491 cv
317.371 342.075 317.188 341.492 317.188 340.742 cv
317.188 339.993 317.371 339.41 317.737 338.985 cv
318.104 338.569 318.62 338.352 319.278 338.352 cv
f
325.516 338.594 mo
325.516 339.302 li
325.299 339.202 325.083 339.118 324.858 339.06 cv
324.625 339.01 324.391 338.977 324.15 338.977 cv
323.775 338.977 323.492 339.035 323.309 339.152 cv
323.126 339.268 323.034 339.435 323.034 339.66 cv
323.034 339.835 323.101 339.968 323.234 340.068 cv
323.367 340.168 323.634 340.268 324.033 340.351 cv
324.291 340.409 li
324.824 340.526 325.199 340.692 325.424 340.892 cv
325.641 341.101 325.757 341.392 325.757 341.758 cv
325.757 342.183 325.591 342.516 325.258 342.758 cv
324.924 343.008 324.458 343.124 323.875 343.124 cv
323.625 343.124 323.375 343.099 323.109 343.058 cv
322.842 343.016 322.568 342.949 322.276 342.849 cv
322.276 342.075 li
322.551 342.225 322.826 342.333 323.092 342.4 cv
323.359 342.475 323.625 342.508 323.892 342.508 cv
324.242 342.508 324.516 342.45 324.708 342.333 cv
324.891 342.216 324.991 342.042 324.991 341.817 cv
324.991 341.617 324.916 341.459 324.783 341.35 cv
324.65 341.242 324.35 341.134 323.883 341.034 cv
323.625 340.976 li
323.159 340.876 322.817 340.726 322.618 340.526 cv
322.409 340.326 322.309 340.051 322.309 339.693 cv
322.309 339.268 322.459 338.935 322.759 338.702 cv
323.059 338.469 323.492 338.352 324.058 338.352 cv
324.333 338.352 324.591 338.377 324.841 338.419 cv
325.083 338.461 325.307 338.519 325.516 338.594 cv
f
327.689 337.17 mo
327.689 338.461 li
329.23 338.461 li
329.23 339.044 li
327.689 339.044 li
327.689 341.517 li
327.689 341.892 327.739 342.133 327.839 342.233 cv
327.939 342.341 328.147 342.391 328.464 342.391 cv
329.23 342.391 li
329.23 343.016 li
328.464 343.016 li
327.881 343.016 327.481 342.908 327.265 342.691 cv
327.048 342.475 326.94 342.083 326.94 341.517 cv
326.94 339.044 li
326.39 339.044 li
326.39 338.461 li
326.94 338.461 li
326.94 337.17 li
327.689 337.17 li
f
330.246 336.945 mo
331.07 336.945 li
331.07 342.325 li
334.027 342.325 li
334.027 343.016 li
330.246 343.016 li
330.246 336.945 li
f
334.851 338.461 mo
335.601 338.461 li
335.601 343.016 li
334.851 343.016 li
334.851 338.461 li
334.851 336.687 mo
335.601 336.687 li
335.601 337.636 li
334.851 337.636 li
334.851 336.687 li
f
339.473 336.687 mo
339.473 337.311 li
338.757 337.311 li
338.491 337.311 338.299 337.37 338.199 337.478 cv
338.091 337.586 338.041 337.778 338.041 338.061 cv
338.041 338.461 li
339.274 338.461 li
339.274 339.044 li
338.041 339.044 li
338.041 343.016 li
337.291 343.016 li
337.291 339.044 li
336.575 339.044 li
336.575 338.461 li
337.291 338.461 li
337.291 338.144 li
337.291 337.644 337.408 337.27 337.641 337.036 cv
337.874 336.803 338.249 336.687 338.766 336.687 cv
339.473 336.687 li
f
343.996 340.551 mo
343.996 340.917 li
340.556 340.917 li
340.589 341.434 340.739 341.833 341.022 342.1 cv
341.297 342.366 341.68 342.5 342.18 342.5 cv
342.463 342.5 342.746 342.466 343.013 342.4 cv
343.279 342.333 343.554 342.225 343.821 342.075 cv
343.821 342.783 li
343.554 342.899 343.279 342.991 342.996 343.041 cv
342.713 343.091 342.422 343.124 342.138 343.124 cv
341.406 343.124 340.831 342.916 340.406 342.5 cv
339.981 342.083 339.773 341.509 339.773 340.784 cv
339.773 340.043 339.973 339.452 340.373 339.01 cv
340.773 338.577 341.322 338.352 342.005 338.352 cv
342.621 338.352 343.104 338.552 343.463 338.944 cv
343.812 339.343 343.996 339.876 343.996 340.551 cv
343.246 340.334 mo
343.238 339.926 343.121 339.602 342.905 339.352 cv
342.68 339.11 342.38 338.985 342.014 338.985 cv
341.597 338.985 341.264 339.11 341.014 339.343 cv
340.764 339.577 340.614 339.91 340.581 340.334 cv
343.246 340.334 li
f
348.892 337.145 mo
348.892 337.944 li
348.576 337.794 348.285 337.686 348.01 337.611 cv
347.727 337.544 347.46 337.503 347.21 337.503 cv
346.761 337.503 346.411 337.594 346.169 337.761 cv
345.928 337.936 345.811 338.186 345.811 338.502 cv
345.811 338.769 345.886 338.977 346.053 339.11 cv
346.211 339.252 346.519 339.36 346.969 339.443 cv
347.468 339.543 li
348.076 339.66 348.526 339.868 348.818 340.159 cv
349.109 340.459 349.259 340.851 349.259 341.342 cv
349.259 341.933 349.059 342.375 348.668 342.675 cv
348.268 342.974 347.693 343.124 346.935 343.124 cv
346.644 343.124 346.336 343.091 346.011 343.033 cv
345.686 342.974 345.353 342.883 345.012 342.749 cv
345.012 341.9 li
345.345 342.092 345.67 342.233 345.986 342.325 cv
346.302 342.425 346.619 342.466 346.935 342.466 cv
347.402 342.466 347.76 342.375 348.018 342.192 cv
348.268 342.008 348.401 341.75 348.401 341.4 cv
348.401 341.101 348.31 340.867 348.126 340.701 cv
347.943 340.534 347.643 340.409 347.227 340.326 cv
346.727 340.226 li
346.111 340.11 345.67 339.918 345.395 339.651 cv
345.12 339.393 344.987 339.035 344.987 338.569 cv
344.987 338.036 345.17 337.611 345.553 337.303 cv
345.928 336.995 346.452 336.837 347.119 336.837 cv
347.402 336.837 347.685 336.862 347.985 336.912 cv
348.276 336.962 348.576 337.045 348.892 337.145 cv
f
351.249 337.17 mo
351.249 338.461 li
352.79 338.461 li
352.79 339.044 li
351.249 339.044 li
351.249 341.517 li
351.249 341.892 351.299 342.133 351.399 342.233 cv
351.499 342.341 351.707 342.391 352.024 342.391 cv
352.79 342.391 li
352.79 343.016 li
352.024 343.016 li
351.441 343.016 351.041 342.908 350.825 342.691 cv
350.608 342.475 350.5 342.083 350.5 341.517 cv
350.5 339.044 li
349.95 339.044 li
349.95 338.461 li
350.5 338.461 li
350.5 337.17 li
351.249 337.17 li
f
355.671 343.432 mo
355.455 343.965 355.247 344.323 355.047 344.49 cv
354.847 344.657 354.58 344.74 354.247 344.74 cv
353.648 344.74 li
353.648 344.115 li
354.089 344.115 li
354.289 344.115 354.447 344.065 354.564 343.965 cv
354.68 343.865 354.805 343.641 354.947 343.274 cv
355.08 342.941 li
353.24 338.461 li
354.031 338.461 li
355.455 342.025 li
356.879 338.461 li
357.67 338.461 li
355.671 343.432 li
f
358.703 336.687 mo
359.452 336.687 li
359.452 343.016 li
358.703 343.016 li
358.703 336.687 li
f
364.915 340.551 mo
364.915 340.917 li
361.476 340.917 li
361.509 341.434 361.659 341.833 361.942 342.1 cv
362.217 342.366 362.6 342.5 363.1 342.5 cv
363.383 342.5 363.666 342.466 363.933 342.4 cv
364.199 342.333 364.474 342.225 364.741 342.075 cv
364.741 342.783 li
364.474 342.899 364.199 342.991 363.916 343.041 cv
363.633 343.091 363.341 343.124 363.058 343.124 cv
362.325 343.124 361.751 342.916 361.326 342.5 cv
360.901 342.083 360.693 341.509 360.693 340.784 cv
360.693 340.043 360.893 339.452 361.293 339.01 cv
361.693 338.577 362.242 338.352 362.925 338.352 cv
363.541 338.352 364.024 338.552 364.382 338.944 cv
364.732 339.343 364.915 339.876 364.915 340.551 cv
364.166 340.334 mo
364.158 339.926 364.041 339.602 363.824 339.352 cv
363.6 339.11 363.3 338.985 362.933 338.985 cv
362.517 338.985 362.184 339.11 361.934 339.343 cv
361.684 339.577 361.534 339.91 361.501 340.334 cv
364.166 340.334 li
f
369.604 344.39 mo
369.604 344.973 li
365.282 344.973 li
365.282 344.39 li
369.604 344.39 li
f
374.093 340.268 mo
374.093 343.016 li
373.343 343.016 li
373.343 340.293 li
373.343 339.86 373.252 339.543 373.085 339.327 cv
372.919 339.11 372.669 339.002 372.336 339.002 cv
371.928 339.002 371.611 339.135 371.378 339.393 cv
371.145 339.651 371.028 340.001 371.028 340.443 cv
371.028 343.016 li
370.279 343.016 li
370.279 336.687 li
371.028 336.687 li
371.028 339.168 li
371.203 338.902 371.411 338.694 371.661 338.561 cv
371.903 338.427 372.186 338.352 372.502 338.352 cv
373.019 338.352 373.418 338.519 373.685 338.844 cv
373.951 339.168 374.093 339.643 374.093 340.268 cv
f
379.048 344.39 mo
379.048 344.973 li
374.726 344.973 li
374.726 344.39 li
379.048 344.39 li
f
383.42 337.145 mo
383.42 337.944 li
383.104 337.794 382.812 337.686 382.538 337.611 cv
382.254 337.544 381.988 337.503 381.738 337.503 cv
381.288 337.503 380.939 337.594 380.697 337.761 cv
380.456 337.936 380.339 338.186 380.339 338.502 cv
380.339 338.769 380.414 338.977 380.58 339.11 cv
380.739 339.252 381.047 339.36 381.497 339.443 cv
381.996 339.543 li
382.604 339.66 383.054 339.868 383.345 340.159 cv
383.637 340.459 383.787 340.851 383.787 341.342 cv
383.787 341.933 383.587 342.375 383.195 342.675 cv
382.796 342.974 382.221 343.124 381.463 343.124 cv
381.172 343.124 380.864 343.091 380.539 343.033 cv
380.214 342.974 379.881 342.883 379.539 342.749 cv
379.539 341.9 li
379.873 342.092 380.197 342.233 380.514 342.325 cv
380.83 342.425 381.147 342.466 381.463 342.466 cv
381.93 342.466 382.288 342.375 382.546 342.192 cv
382.796 342.008 382.929 341.75 382.929 341.4 cv
382.929 341.101 382.837 340.867 382.654 340.701 cv
382.471 340.534 382.171 340.409 381.755 340.326 cv
381.255 340.226 li
380.639 340.11 380.197 339.918 379.923 339.651 cv
379.648 339.393 379.514 339.035 379.514 338.569 cv
379.514 338.036 379.698 337.611 380.081 337.303 cv
380.456 336.995 380.98 336.837 381.646 336.837 cv
381.93 336.837 382.213 336.862 382.513 336.912 cv
382.804 336.962 383.104 337.045 383.42 337.145 cv
f
385.777 337.17 mo
385.777 338.461 li
387.318 338.461 li
387.318 339.044 li
385.777 339.044 li
385.777 341.517 li
385.777 341.892 385.827 342.133 385.927 342.233 cv
386.027 342.341 386.235 342.391 386.552 342.391 cv
387.318 342.391 li
387.318 343.016 li
386.552 343.016 li
385.969 343.016 385.569 342.908 385.352 342.691 cv
385.136 342.475 385.028 342.083 385.028 341.517 cv
385.028 339.044 li
384.478 339.044 li
384.478 338.461 li
385.028 338.461 li
385.028 337.17 li
385.777 337.17 li
f
390.066 338.985 mo
389.666 338.985 389.35 339.143 389.117 339.46 cv
388.883 339.776 388.767 340.201 388.767 340.742 cv
388.767 341.292 388.875 341.717 389.108 342.033 cv
389.341 342.35 389.658 342.5 390.066 342.5 cv
390.466 342.5 390.782 342.35 391.015 342.033 cv
391.249 341.717 391.365 341.292 391.365 340.742 cv
391.365 340.209 391.249 339.776 391.015 339.46 cv
390.782 339.143 390.466 338.985 390.066 338.985 cv
390.066 338.352 mo
390.716 338.352 391.224 338.569 391.598 338.985 cv
391.965 339.41 392.156 339.993 392.156 340.742 cv
392.156 341.492 391.965 342.075 391.598 342.491 cv
391.224 342.916 390.716 343.124 390.066 343.124 cv
389.408 343.124 388.892 342.916 388.525 342.491 cv
388.159 342.075 387.976 341.492 387.976 340.742 cv
387.976 339.993 388.159 339.41 388.525 338.985 cv
388.892 338.569 389.408 338.352 390.066 338.352 cv
f
395.163 338.985 mo
394.763 338.985 394.447 339.143 394.213 339.46 cv
393.98 339.776 393.864 340.201 393.864 340.742 cv
393.864 341.292 393.972 341.717 394.205 342.033 cv
394.438 342.35 394.755 342.5 395.163 342.5 cv
395.563 342.5 395.879 342.35 396.112 342.033 cv
396.345 341.717 396.462 341.292 396.462 340.742 cv
396.462 340.209 396.345 339.776 396.112 339.46 cv
395.879 339.143 395.563 338.985 395.163 338.985 cv
395.163 338.352 mo
395.812 338.352 396.32 338.569 396.695 338.985 cv
397.062 339.41 397.253 339.993 397.253 340.742 cv
397.253 341.492 397.062 342.075 396.695 342.491 cv
396.32 342.916 395.812 343.124 395.163 343.124 cv
394.505 343.124 393.988 342.916 393.622 342.491 cv
393.256 342.075 393.072 341.492 393.072 340.742 cv
393.072 339.993 393.256 339.41 393.622 338.985 cv
393.988 338.569 394.505 338.352 395.163 338.352 cv
f
398.494 336.687 mo
399.243 336.687 li
399.243 343.016 li
398.494 343.016 li
398.494 336.687 li
f
401.667 340.118 mo
401.667 342.341 li
402.983 342.341 li
403.424 342.341 403.749 342.25 403.965 342.067 cv
404.174 341.883 404.282 341.609 404.282 341.225 cv
404.282 340.851 404.174 340.576 403.965 340.393 cv
403.749 340.209 403.424 340.118 402.983 340.118 cv
401.667 340.118 li
401.667 337.619 mo
401.667 339.452 li
402.883 339.452 li
403.283 339.452 403.574 339.377 403.774 339.227 cv
403.974 339.077 404.074 338.852 404.074 338.536 cv
404.074 338.236 403.974 338.003 403.774 337.853 cv
403.574 337.703 403.283 337.619 402.883 337.619 cv
401.667 337.619 li
400.842 336.945 mo
402.941 336.945 li
403.566 336.945 404.049 337.078 404.39 337.336 cv
404.723 337.603 404.898 337.969 404.898 338.444 cv
404.898 338.819 404.807 339.118 404.632 339.335 cv
404.457 339.552 404.207 339.693 403.874 339.743 cv
404.274 339.835 404.59 340.018 404.815 340.293 cv
405.031 340.568 405.148 340.909 405.148 341.317 cv
405.148 341.867 404.956 342.283 404.59 342.575 cv
404.224 342.874 403.699 343.016 403.024 343.016 cv
400.842 343.016 li
400.842 336.945 li
f
409.987 344.39 mo
409.987 344.973 li
405.664 344.973 li
405.664 344.39 li
409.987 344.39 li
f
413.684 339.152 mo
413.684 336.687 li
414.434 336.687 li
414.434 343.016 li
413.684 343.016 li
413.684 342.333 li
413.526 342.608 413.326 342.808 413.085 342.933 cv
412.843 343.058 412.56 343.124 412.227 343.124 cv
411.677 343.124 411.228 342.908 410.878 342.475 cv
410.528 342.042 410.361 341.459 410.361 340.742 cv
410.361 340.026 410.528 339.452 410.878 339.01 cv
411.228 338.577 411.677 338.352 412.227 338.352 cv
412.56 338.352 412.843 338.419 413.085 338.552 cv
413.326 338.685 413.526 338.885 413.684 339.152 cv
411.136 340.742 mo
411.136 341.292 411.244 341.725 411.469 342.042 cv
411.694 342.358 412.01 342.508 412.41 342.508 cv
412.801 342.508 413.11 342.358 413.343 342.042 cv
413.568 341.725 413.684 341.292 413.684 340.742 cv
413.684 340.193 413.568 339.768 413.343 339.452 cv
413.11 339.135 412.801 338.977 412.41 338.977 cv
412.01 338.977 411.694 339.135 411.469 339.452 cv
411.244 339.768 411.136 340.193 411.136 340.742 cv
f
418.048 340.726 mo
417.44 340.726 417.024 340.801 416.791 340.934 cv
416.557 341.076 416.441 341.309 416.441 341.642 cv
416.441 341.908 416.524 342.125 416.699 342.275 cv
416.874 342.433 417.115 342.508 417.415 342.508 cv
417.832 342.508 418.165 342.366 418.415 342.067 cv
418.664 341.775 418.789 341.384 418.789 340.892 cv
418.789 340.726 li
418.048 340.726 li
419.539 340.418 mo
419.539 343.016 li
418.789 343.016 li
418.789 342.325 li
418.614 342.608 418.398 342.808 418.148 342.933 cv
417.898 343.058 417.582 343.124 417.215 343.124 cv
416.749 343.124 416.374 342.999 416.099 342.741 cv
415.825 342.483 415.691 342.133 415.691 341.692 cv
415.691 341.184 415.858 340.801 416.208 340.534 cv
416.549 340.276 417.057 340.143 417.74 340.143 cv
418.789 340.143 li
418.789 340.068 li
418.789 339.726 418.673 339.46 418.448 339.268 cv
418.223 339.085 417.907 338.985 417.498 338.985 cv
417.232 338.985 416.982 339.019 416.732 339.085 cv
416.482 339.152 416.249 339.243 416.024 339.36 cv
416.024 338.669 li
416.291 338.569 416.557 338.486 416.816 338.436 cv
417.074 338.386 417.324 338.352 417.573 338.352 cv
418.231 338.352 418.723 338.527 419.047 338.869 cv
419.372 339.21 419.539 339.726 419.539 340.418 cv
f
422.978 343.432 mo
422.762 343.965 422.554 344.323 422.354 344.49 cv
422.154 344.657 421.887 344.74 421.554 344.74 cv
420.955 344.74 li
420.955 344.115 li
421.396 344.115 li
421.596 344.115 421.754 344.065 421.871 343.965 cv
421.987 343.865 422.112 343.641 422.254 343.274 cv
422.387 342.941 li
420.547 338.461 li
421.338 338.461 li
422.762 342.025 li
424.186 338.461 li
424.977 338.461 li
422.978 343.432 li
f
427.875 337.486 mo
427.45 337.486 427.134 337.694 426.917 338.111 cv
426.701 338.527 426.601 339.152 426.601 339.985 cv
426.601 340.817 426.701 341.442 426.917 341.858 cv
427.134 342.275 427.45 342.483 427.875 342.483 cv
428.3 342.483 428.616 342.275 428.833 341.858 cv
429.041 341.442 429.149 340.817 429.149 339.985 cv
429.149 339.152 429.041 338.527 428.833 338.111 cv
428.616 337.694 428.3 337.486 427.875 337.486 cv
427.875 336.837 mo
428.55 336.837 429.066 337.111 429.432 337.644 cv
429.791 338.186 429.974 338.969 429.974 339.985 cv
429.974 341.009 429.791 341.792 429.432 342.325 cv
429.066 342.858 428.55 343.124 427.875 343.124 cv
427.192 343.124 426.668 342.858 426.309 342.325 cv
425.951 341.792 425.776 341.009 425.776 339.985 cv
425.776 338.969 425.951 338.186 426.309 337.644 cv
426.668 337.111 427.192 336.837 427.875 336.837 cv
f
432.047 337.17 mo
432.047 338.461 li
433.588 338.461 li
433.588 339.044 li
432.047 339.044 li
432.047 341.517 li
432.047 341.892 432.097 342.133 432.197 342.233 cv
432.297 342.341 432.506 342.391 432.822 342.391 cv
433.588 342.391 li
433.588 343.016 li
432.822 343.016 li
432.239 343.016 431.839 342.908 431.623 342.691 cv
431.406 342.475 431.298 342.083 431.298 341.517 cv
431.298 339.044 li
430.748 339.044 li
430.748 338.461 li
431.298 338.461 li
431.298 337.17 li
432.047 337.17 li
f
436.336 338.985 mo
435.937 338.985 435.62 339.143 435.387 339.46 cv
435.154 339.776 435.037 340.201 435.037 340.742 cv
435.037 341.292 435.145 341.717 435.379 342.033 cv
435.612 342.35 435.928 342.5 436.336 342.5 cv
436.736 342.5 437.053 342.35 437.286 342.033 cv
437.519 341.717 437.636 341.292 437.636 340.742 cv
437.636 340.209 437.519 339.776 437.286 339.46 cv
437.053 339.143 436.736 338.985 436.336 338.985 cv
436.336 338.352 mo
436.986 338.352 437.494 338.569 437.869 338.985 cv
438.235 339.41 438.427 339.993 438.427 340.742 cv
438.427 341.492 438.235 342.075 437.869 342.491 cv
437.494 342.916 436.986 343.124 436.336 343.124 cv
435.678 343.124 435.162 342.916 434.796 342.491 cv
434.429 342.075 434.246 341.492 434.246 340.742 cv
434.246 339.993 434.429 339.41 434.796 338.985 cv
435.162 338.569 435.678 338.352 436.336 338.352 cv
f
439.801 342.891 mo
439.801 342.142 li
440.001 342.241 440.209 342.316 440.425 342.366 cv
440.634 342.416 440.842 342.441 441.05 342.441 cv
441.583 342.441 441.999 342.266 442.283 341.9 cv
442.566 341.534 442.732 340.984 442.782 340.234 cv
442.616 340.468 442.416 340.651 442.183 340.776 cv
441.941 340.901 441.675 340.959 441.383 340.959 cv
440.767 340.959 440.284 340.776 439.934 340.409 cv
439.584 340.043 439.409 339.543 439.409 338.902 cv
439.409 338.286 439.593 337.786 439.959 337.403 cv
440.326 337.028 440.817 336.837 441.433 336.837 cv
442.133 336.837 442.674 337.111 443.04 337.644 cv
443.407 338.186 443.598 338.969 443.598 339.985 cv
443.598 340.951 443.365 341.708 442.916 342.275 cv
442.457 342.841 441.85 343.124 441.083 343.124 cv
440.875 343.124 440.667 343.099 440.459 343.066 cv
440.242 343.033 440.026 342.974 439.801 342.891 cv
441.433 340.318 mo
441.8 340.318 442.091 340.193 442.308 339.943 cv
442.524 339.693 442.632 339.343 442.632 338.902 cv
442.632 338.469 442.524 338.119 442.308 337.869 cv
442.091 337.619 441.8 337.486 441.433 337.486 cv
441.067 337.486 440.775 337.619 440.559 337.869 cv
440.342 338.119 440.234 338.469 440.234 338.902 cv
440.234 339.343 440.342 339.693 440.559 339.943 cv
440.775 340.193 441.067 340.318 441.433 340.318 cv
f
445.097 342.891 mo
445.097 342.142 li
445.297 342.241 445.506 342.316 445.722 342.366 cv
445.93 342.416 446.138 342.441 446.347 342.441 cv
446.88 342.441 447.296 342.266 447.579 341.9 cv
447.862 341.534 448.029 340.984 448.079 340.234 cv
447.912 340.468 447.712 340.651 447.479 340.776 cv
447.238 340.901 446.971 340.959 446.68 340.959 cv
446.064 340.959 445.581 340.776 445.231 340.409 cv
444.881 340.043 444.706 339.543 444.706 338.902 cv
444.706 338.286 444.889 337.786 445.256 337.403 cv
445.622 337.028 446.113 336.837 446.73 336.837 cv
447.429 336.837 447.971 337.111 448.337 337.644 cv
448.703 338.186 448.895 338.969 448.895 339.985 cv
448.895 340.951 448.662 341.708 448.212 342.275 cv
447.754 342.841 447.146 343.124 446.38 343.124 cv
446.172 343.124 445.964 343.099 445.755 343.066 cv
445.539 343.033 445.322 342.974 445.097 342.891 cv
446.73 340.318 mo
447.096 340.318 447.388 340.193 447.604 339.943 cv
447.821 339.693 447.929 339.343 447.929 338.902 cv
447.929 338.469 447.821 338.119 447.604 337.869 cv
447.388 337.619 447.096 337.486 446.73 337.486 cv
446.363 337.486 446.072 337.619 445.855 337.869 cv
445.639 338.119 445.531 338.469 445.531 338.902 cv
445.531 339.343 445.639 339.693 445.855 339.943 cv
446.072 340.193 446.363 340.318 446.73 340.318 cv
f
453.725 344.39 mo
453.725 344.973 li
449.403 344.973 li
449.403 344.39 li
453.725 344.39 li
f
457.331 338.594 mo
457.331 339.302 li
457.115 339.202 456.898 339.118 456.673 339.06 cv
456.44 339.01 456.207 338.977 455.966 338.977 cv
455.591 338.977 455.308 339.035 455.124 339.152 cv
454.941 339.268 454.85 339.435 454.85 339.66 cv
454.85 339.835 454.916 339.968 455.049 340.068 cv
455.183 340.168 455.449 340.268 455.849 340.351 cv
456.107 340.409 li
456.64 340.526 457.015 340.692 457.24 340.892 cv
457.456 341.101 457.573 341.392 457.573 341.758 cv
457.573 342.183 457.406 342.516 457.073 342.758 cv
456.74 343.008 456.274 343.124 455.691 343.124 cv
455.441 343.124 455.191 343.099 454.924 343.058 cv
454.658 343.016 454.383 342.949 454.092 342.849 cv
454.092 342.075 li
454.367 342.225 454.641 342.333 454.908 342.4 cv
455.174 342.475 455.441 342.508 455.707 342.508 cv
456.057 342.508 456.332 342.45 456.523 342.333 cv
456.707 342.216 456.807 342.042 456.807 341.817 cv
456.807 341.617 456.732 341.459 456.598 341.35 cv
456.465 341.242 456.165 341.134 455.699 341.034 cv
455.441 340.976 li
454.974 340.876 454.633 340.726 454.433 340.526 cv
454.225 340.326 454.125 340.051 454.125 339.693 cv
454.125 339.268 454.275 338.935 454.575 338.702 cv
454.875 338.469 455.308 338.352 455.874 338.352 cv
456.149 338.352 456.407 338.377 456.657 338.419 cv
456.898 338.461 457.123 338.519 457.331 338.594 cv
f
459.505 337.17 mo
459.505 338.461 li
461.046 338.461 li
461.046 339.044 li
459.505 339.044 li
459.505 341.517 li
459.505 341.892 459.555 342.133 459.655 342.233 cv
459.755 342.341 459.963 342.391 460.279 342.391 cv
461.046 342.391 li
461.046 343.016 li
460.279 343.016 li
459.696 343.016 459.297 342.908 459.08 342.691 cv
458.864 342.475 458.755 342.083 458.755 341.517 cv
458.755 339.044 li
458.206 339.044 li
458.206 338.461 li
458.755 338.461 li
458.755 337.17 li
459.505 337.17 li
f
464.102 340.726 mo
463.494 340.726 463.078 340.801 462.844 340.934 cv
462.611 341.076 462.495 341.309 462.495 341.642 cv
462.495 341.908 462.578 342.125 462.753 342.275 cv
462.928 342.433 463.169 342.508 463.469 342.508 cv
463.885 342.508 464.219 342.366 464.468 342.067 cv
464.718 341.775 464.843 341.384 464.843 340.892 cv
464.843 340.726 li
464.102 340.726 li
465.593 340.418 mo
465.593 343.016 li
464.843 343.016 li
464.843 342.325 li
464.668 342.608 464.452 342.808 464.202 342.933 cv
463.952 343.058 463.636 343.124 463.269 343.124 cv
462.803 343.124 462.428 342.999 462.153 342.741 cv
461.878 342.483 461.745 342.133 461.745 341.692 cv
461.745 341.184 461.912 340.801 462.261 340.534 cv
462.603 340.276 463.111 340.143 463.794 340.143 cv
464.843 340.143 li
464.843 340.068 li
464.843 339.726 464.727 339.46 464.502 339.268 cv
464.277 339.085 463.96 338.985 463.552 338.985 cv
463.286 338.985 463.036 339.019 462.786 339.085 cv
462.536 339.152 462.303 339.243 462.078 339.36 cv
462.078 338.669 li
462.345 338.569 462.611 338.486 462.869 338.436 cv
463.128 338.386 463.377 338.352 463.627 338.352 cv
464.285 338.352 464.776 338.527 465.101 338.869 cv
465.426 339.21 465.593 339.726 465.593 340.418 cv
f
470.406 340.742 mo
470.406 340.193 470.29 339.768 470.065 339.452 cv
469.832 339.135 469.523 338.977 469.132 338.977 cv
468.732 338.977 468.424 339.135 468.199 339.452 cv
467.966 339.768 467.858 340.193 467.858 340.742 cv
467.858 341.292 467.966 341.725 468.199 342.042 cv
468.424 342.358 468.732 342.508 469.132 342.508 cv
469.523 342.508 469.832 342.358 470.065 342.042 cv
470.29 341.725 470.406 341.292 470.406 340.742 cv
467.858 339.152 mo
468.008 338.885 468.208 338.685 468.449 338.552 cv
468.691 338.419 468.982 338.352 469.315 338.352 cv
469.865 338.352 470.315 338.577 470.664 339.01 cv
471.006 339.452 471.181 340.026 471.181 340.742 cv
471.181 341.459 471.006 342.042 470.664 342.475 cv
470.315 342.908 469.865 343.124 469.315 343.124 cv
468.982 343.124 468.691 343.058 468.449 342.933 cv
468.208 342.808 468.008 342.608 467.858 342.333 cv
467.858 343.016 li
467.108 343.016 li
467.108 336.687 li
467.858 336.687 li
467.858 339.152 li
f
472.422 336.687 mo
473.171 336.687 li
473.171 343.016 li
472.422 343.016 li
472.422 336.687 li
f
478.634 340.551 mo
478.634 340.917 li
475.195 340.917 li
475.228 341.434 475.378 341.833 475.661 342.1 cv
475.936 342.366 476.319 342.5 476.819 342.5 cv
477.102 342.5 477.385 342.466 477.652 342.4 cv
477.918 342.333 478.193 342.225 478.459 342.075 cv
478.459 342.783 li
478.193 342.899 477.918 342.991 477.635 343.041 cv
477.352 343.091 477.06 343.124 476.777 343.124 cv
476.044 343.124 475.47 342.916 475.045 342.5 cv
474.62 342.083 474.412 341.509 474.412 340.784 cv
474.412 340.043 474.612 339.452 475.012 339.01 cv
475.411 338.577 475.961 338.352 476.644 338.352 cv
477.26 338.352 477.743 338.552 478.101 338.944 cv
478.451 339.343 478.634 339.876 478.634 340.551 cv
477.885 340.334 mo
477.876 339.926 477.76 339.602 477.543 339.352 cv
477.318 339.11 477.019 338.985 476.652 338.985 cv
476.236 338.985 475.903 339.11 475.653 339.343 cv
475.403 339.577 475.253 339.91 475.22 340.334 cv
477.885 340.334 li
f
1 lw
1 lj
285.483 352.234 mo
293.811 352.234 li
.873533 .244297 1 .131685 cmyk
@
297.142 352.234 mo
305.47 352.234 li
@
289.647 356.398 mo
289.647 348.07 li
@
301.306 356.398 mo
301.306 348.07 li
@
285.483 355.234 mo
285.483 349.234 li
f
.5 lw
285.483 355.234 mo
285.483 349.234 li
@
297.142 355.234 mo
297.142 349.234 li
f
297.142 355.234 mo
297.142 349.234 li
@
293.811 355.234 mo
293.811 349.234 li
f
293.811 355.234 mo
293.811 349.234 li
@
305.47 355.234 mo
305.47 349.234 li
f
305.47 355.234 mo
305.47 349.234 li
@
292.647 356.398 mo
286.647 356.398 li
f
292.647 356.398 mo
286.647 356.398 li
@
304.306 356.398 mo
298.306 356.398 li
f
304.306 356.398 mo
298.306 356.398 li
@
292.647 348.07 mo
286.647 348.07 li
f
292.647 348.07 mo
286.647 348.07 li
@
304.306 348.07 mo
298.306 348.07 li
f
304.306 348.07 mo
298.306 348.07 li
@
gsave
286.544 354.911 mo
292.75 354.911 li
292.75 348.984 li
286.544 348.984 li
cp
clp
289.647 349.234 mo
288.973 351.307 li
286.794 351.307 li
288.557 352.588 li
287.884 354.661 li
289.647 353.38 li
291.41 354.661 li
290.737 352.588 li
292.5 351.307 li
290.321 351.307 li
cp
f
2 lj
289.647 349.234 mo
288.973 351.307 li
286.794 351.307 li
288.557 352.588 li
287.884 354.661 li
289.647 353.38 li
291.41 354.661 li
290.737 352.588 li
292.5 351.307 li
290.321 351.307 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
298.203 354.911 mo
304.41 354.911 li
304.41 348.984 li
298.203 348.984 li
cp
clp
301.306 349.234 mo
300.632 351.307 li
298.453 351.307 li
300.216 352.588 li
299.543 354.661 li
301.306 353.38 li
303.069 354.661 li
302.396 352.588 li
304.159 351.307 li
301.98 351.307 li
cp
f
2 lj
301.306 349.234 mo
300.632 351.307 li
298.453 351.307 li
300.216 352.588 li
299.543 354.661 li
301.306 353.38 li
303.069 354.661 li
302.396 352.588 li
304.159 351.307 li
301.98 351.307 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
311.283 349.078 mo
312.108 349.078 li
312.108 351.568 li
315.089 351.568 li
315.089 349.078 li
315.914 349.078 li
315.914 355.149 li
315.089 355.149 li
315.089 352.259 li
312.108 352.259 li
312.108 355.149 li
311.283 355.149 li
311.283 349.078 li
1 /0 /CSD get_res sepcs
1 sep
f
319.278 351.118 mo
318.878 351.118 318.562 351.276 318.329 351.593 cv
318.095 351.909 317.979 352.334 317.979 352.875 cv
317.979 353.425 318.087 353.85 318.32 354.166 cv
318.553 354.483 318.87 354.633 319.278 354.633 cv
319.678 354.633 319.994 354.483 320.227 354.166 cv
320.461 353.85 320.577 353.425 320.577 352.875 cv
320.577 352.342 320.461 351.909 320.227 351.593 cv
319.994 351.276 319.678 351.118 319.278 351.118 cv
319.278 350.485 mo
319.928 350.485 320.436 350.702 320.81 351.118 cv
321.177 351.543 321.368 352.126 321.368 352.875 cv
321.368 353.625 321.177 354.208 320.81 354.624 cv
320.436 355.049 319.928 355.257 319.278 355.257 cv
318.62 355.257 318.104 355.049 317.737 354.624 cv
317.371 354.208 317.188 353.625 317.188 352.875 cv
317.188 352.126 317.371 351.543 317.737 351.118 cv
318.104 350.702 318.62 350.485 319.278 350.485 cv
f
325.516 350.727 mo
325.516 351.435 li
325.299 351.335 325.083 351.251 324.858 351.193 cv
324.625 351.143 324.391 351.11 324.15 351.11 cv
323.775 351.11 323.492 351.168 323.309 351.285 cv
323.126 351.401 323.034 351.568 323.034 351.793 cv
323.034 351.968 323.101 352.101 323.234 352.201 cv
323.367 352.301 323.634 352.401 324.033 352.484 cv
324.291 352.542 li
324.824 352.659 325.199 352.825 325.424 353.025 cv
325.641 353.234 325.757 353.525 325.757 353.891 cv
325.757 354.316 325.591 354.649 325.258 354.891 cv
324.924 355.141 324.458 355.257 323.875 355.257 cv
323.625 355.257 323.375 355.232 323.109 355.191 cv
322.842 355.149 322.568 355.082 322.276 354.982 cv
322.276 354.208 li
322.551 354.358 322.826 354.466 323.092 354.533 cv
323.359 354.608 323.625 354.641 323.892 354.641 cv
324.242 354.641 324.516 354.583 324.708 354.466 cv
324.891 354.349 324.991 354.175 324.991 353.95 cv
324.991 353.75 324.916 353.592 324.783 353.483 cv
324.65 353.375 324.35 353.267 323.883 353.167 cv
323.625 353.109 li
323.159 353.009 322.817 352.859 322.618 352.659 cv
322.409 352.459 322.309 352.184 322.309 351.826 cv
322.309 351.401 322.459 351.068 322.759 350.835 cv
323.059 350.602 323.492 350.485 324.058 350.485 cv
324.333 350.485 324.591 350.51 324.841 350.552 cv
325.083 350.594 325.307 350.652 325.516 350.727 cv
f
327.689 349.303 mo
327.689 350.594 li
329.23 350.594 li
329.23 351.177 li
327.689 351.177 li
327.689 353.65 li
327.689 354.025 327.739 354.266 327.839 354.366 cv
327.939 354.474 328.147 354.524 328.464 354.524 cv
329.23 354.524 li
329.23 355.149 li
328.464 355.149 li
327.881 355.149 327.481 355.041 327.265 354.824 cv
327.048 354.608 326.94 354.216 326.94 353.65 cv
326.94 351.177 li
326.39 351.177 li
326.39 350.594 li
326.94 350.594 li
326.94 349.303 li
327.689 349.303 li
f
330.246 349.078 mo
331.07 349.078 li
331.07 354.458 li
334.027 354.458 li
334.027 355.149 li
330.246 355.149 li
330.246 349.078 li
f
334.851 350.594 mo
335.601 350.594 li
335.601 355.149 li
334.851 355.149 li
334.851 350.594 li
334.851 348.82 mo
335.601 348.82 li
335.601 349.769 li
334.851 349.769 li
334.851 348.82 li
f
339.473 348.82 mo
339.473 349.444 li
338.757 349.444 li
338.491 349.444 338.299 349.503 338.199 349.611 cv
338.091 349.719 338.041 349.911 338.041 350.194 cv
338.041 350.594 li
339.274 350.594 li
339.274 351.177 li
338.041 351.177 li
338.041 355.149 li
337.291 355.149 li
337.291 351.177 li
336.575 351.177 li
336.575 350.594 li
337.291 350.594 li
337.291 350.277 li
337.291 349.777 337.408 349.403 337.641 349.169 cv
337.874 348.936 338.249 348.82 338.766 348.82 cv
339.473 348.82 li
f
343.996 352.684 mo
343.996 353.05 li
340.556 353.05 li
340.589 353.567 340.739 353.966 341.022 354.233 cv
341.297 354.499 341.68 354.633 342.18 354.633 cv
342.463 354.633 342.746 354.599 343.013 354.533 cv
343.279 354.466 343.554 354.358 343.821 354.208 cv
343.821 354.916 li
343.554 355.032 343.279 355.124 342.996 355.174 cv
342.713 355.224 342.422 355.257 342.138 355.257 cv
341.406 355.257 340.831 355.049 340.406 354.633 cv
339.981 354.216 339.773 353.642 339.773 352.917 cv
339.773 352.176 339.973 351.585 340.373 351.143 cv
340.773 350.71 341.322 350.485 342.005 350.485 cv
342.621 350.485 343.104 350.685 343.463 351.077 cv
343.812 351.476 343.996 352.009 343.996 352.684 cv
343.246 352.467 mo
343.238 352.059 343.121 351.734 342.905 351.485 cv
342.68 351.243 342.38 351.118 342.014 351.118 cv
341.597 351.118 341.264 351.243 341.014 351.476 cv
340.764 351.71 340.614 352.043 340.581 352.467 cv
343.246 352.467 li
f
348.892 349.278 mo
348.892 350.077 li
348.576 349.927 348.285 349.819 348.01 349.744 cv
347.727 349.677 347.46 349.636 347.21 349.636 cv
346.761 349.636 346.411 349.727 346.169 349.894 cv
345.928 350.069 345.811 350.319 345.811 350.635 cv
345.811 350.902 345.886 351.11 346.053 351.243 cv
346.211 351.385 346.519 351.493 346.969 351.576 cv
347.468 351.676 li
348.076 351.793 348.526 352.001 348.818 352.292 cv
349.109 352.592 349.259 352.984 349.259 353.475 cv
349.259 354.066 349.059 354.508 348.668 354.808 cv
348.268 355.107 347.693 355.257 346.935 355.257 cv
346.644 355.257 346.336 355.224 346.011 355.166 cv
345.686 355.107 345.353 355.016 345.012 354.882 cv
345.012 354.033 li
345.345 354.225 345.67 354.366 345.986 354.458 cv
346.302 354.558 346.619 354.599 346.935 354.599 cv
347.402 354.599 347.76 354.508 348.018 354.325 cv
348.268 354.141 348.401 353.883 348.401 353.533 cv
348.401 353.234 348.31 353 348.126 352.834 cv
347.943 352.667 347.643 352.542 347.227 352.459 cv
346.727 352.359 li
346.111 352.243 345.67 352.051 345.395 351.784 cv
345.12 351.526 344.987 351.168 344.987 350.702 cv
344.987 350.169 345.17 349.744 345.553 349.436 cv
345.928 349.128 346.452 348.97 347.119 348.97 cv
347.402 348.97 347.685 348.995 347.985 349.045 cv
348.276 349.095 348.576 349.178 348.892 349.278 cv
f
351.249 349.303 mo
351.249 350.594 li
352.79 350.594 li
352.79 351.177 li
351.249 351.177 li
351.249 353.65 li
351.249 354.025 351.299 354.266 351.399 354.366 cv
351.499 354.474 351.707 354.524 352.024 354.524 cv
352.79 354.524 li
352.79 355.149 li
352.024 355.149 li
351.441 355.149 351.041 355.041 350.825 354.824 cv
350.608 354.608 350.5 354.216 350.5 353.65 cv
350.5 351.177 li
349.95 351.177 li
349.95 350.594 li
350.5 350.594 li
350.5 349.303 li
351.249 349.303 li
f
355.671 355.565 mo
355.455 356.098 355.247 356.456 355.047 356.623 cv
354.847 356.79 354.58 356.873 354.247 356.873 cv
353.648 356.873 li
353.648 356.248 li
354.089 356.248 li
354.289 356.248 354.447 356.198 354.564 356.098 cv
354.68 355.998 354.805 355.774 354.947 355.407 cv
355.08 355.074 li
353.24 350.594 li
354.031 350.594 li
355.455 354.158 li
356.879 350.594 li
357.67 350.594 li
355.671 355.565 li
f
358.703 348.82 mo
359.452 348.82 li
359.452 355.149 li
358.703 355.149 li
358.703 348.82 li
f
364.915 352.684 mo
364.915 353.05 li
361.476 353.05 li
361.509 353.567 361.659 353.966 361.942 354.233 cv
362.217 354.499 362.6 354.633 363.1 354.633 cv
363.383 354.633 363.666 354.599 363.933 354.533 cv
364.199 354.466 364.474 354.358 364.741 354.208 cv
364.741 354.916 li
364.474 355.032 364.199 355.124 363.916 355.174 cv
363.633 355.224 363.341 355.257 363.058 355.257 cv
362.325 355.257 361.751 355.049 361.326 354.633 cv
360.901 354.216 360.693 353.642 360.693 352.917 cv
360.693 352.176 360.893 351.585 361.293 351.143 cv
361.693 350.71 362.242 350.485 362.925 350.485 cv
363.541 350.485 364.024 350.685 364.382 351.077 cv
364.732 351.476 364.915 352.009 364.915 352.684 cv
364.166 352.467 mo
364.158 352.059 364.041 351.734 363.824 351.485 cv
363.6 351.243 363.3 351.118 362.933 351.118 cv
362.517 351.118 362.184 351.243 361.934 351.476 cv
361.684 351.71 361.534 352.043 361.501 352.467 cv
364.166 352.467 li
f
369.604 356.523 mo
369.604 357.106 li
365.282 357.106 li
365.282 356.523 li
369.604 356.523 li
f
374.093 352.401 mo
374.093 355.149 li
373.343 355.149 li
373.343 352.426 li
373.343 351.993 373.252 351.676 373.085 351.46 cv
372.919 351.243 372.669 351.135 372.336 351.135 cv
371.928 351.135 371.611 351.268 371.378 351.526 cv
371.145 351.784 371.028 352.134 371.028 352.576 cv
371.028 355.149 li
370.279 355.149 li
370.279 348.82 li
371.028 348.82 li
371.028 351.301 li
371.203 351.035 371.411 350.827 371.661 350.694 cv
371.903 350.56 372.186 350.485 372.502 350.485 cv
373.019 350.485 373.418 350.652 373.685 350.977 cv
373.951 351.301 374.093 351.776 374.093 352.401 cv
f
379.048 356.523 mo
379.048 357.106 li
374.726 357.106 li
374.726 356.523 li
379.048 356.523 li
f
383.42 349.278 mo
383.42 350.077 li
383.104 349.927 382.812 349.819 382.538 349.744 cv
382.254 349.677 381.988 349.636 381.738 349.636 cv
381.288 349.636 380.939 349.727 380.697 349.894 cv
380.456 350.069 380.339 350.319 380.339 350.635 cv
380.339 350.902 380.414 351.11 380.58 351.243 cv
380.739 351.385 381.047 351.493 381.497 351.576 cv
381.996 351.676 li
382.604 351.793 383.054 352.001 383.345 352.292 cv
383.637 352.592 383.787 352.984 383.787 353.475 cv
383.787 354.066 383.587 354.508 383.195 354.808 cv
382.796 355.107 382.221 355.257 381.463 355.257 cv
381.172 355.257 380.864 355.224 380.539 355.166 cv
380.214 355.107 379.881 355.016 379.539 354.882 cv
379.539 354.033 li
379.873 354.225 380.197 354.366 380.514 354.458 cv
380.83 354.558 381.147 354.599 381.463 354.599 cv
381.93 354.599 382.288 354.508 382.546 354.325 cv
382.796 354.141 382.929 353.883 382.929 353.533 cv
382.929 353.234 382.837 353 382.654 352.834 cv
382.471 352.667 382.171 352.542 381.755 352.459 cv
381.255 352.359 li
380.639 352.243 380.197 352.051 379.923 351.784 cv
379.648 351.526 379.514 351.168 379.514 350.702 cv
379.514 350.169 379.698 349.744 380.081 349.436 cv
380.456 349.128 380.98 348.97 381.646 348.97 cv
381.93 348.97 382.213 348.995 382.513 349.045 cv
382.804 349.095 383.104 349.178 383.42 349.278 cv
f
385.777 349.303 mo
385.777 350.594 li
387.318 350.594 li
387.318 351.177 li
385.777 351.177 li
385.777 353.65 li
385.777 354.025 385.827 354.266 385.927 354.366 cv
386.027 354.474 386.235 354.524 386.552 354.524 cv
387.318 354.524 li
387.318 355.149 li
386.552 355.149 li
385.969 355.149 385.569 355.041 385.352 354.824 cv
385.136 354.608 385.028 354.216 385.028 353.65 cv
385.028 351.177 li
384.478 351.177 li
384.478 350.594 li
385.028 350.594 li
385.028 349.303 li
385.777 349.303 li
f
390.066 351.118 mo
389.666 351.118 389.35 351.276 389.117 351.593 cv
388.883 351.909 388.767 352.334 388.767 352.875 cv
388.767 353.425 388.875 353.85 389.108 354.166 cv
389.341 354.483 389.658 354.633 390.066 354.633 cv
390.466 354.633 390.782 354.483 391.015 354.166 cv
391.249 353.85 391.365 353.425 391.365 352.875 cv
391.365 352.342 391.249 351.909 391.015 351.593 cv
390.782 351.276 390.466 351.118 390.066 351.118 cv
390.066 350.485 mo
390.716 350.485 391.224 350.702 391.598 351.118 cv
391.965 351.543 392.156 352.126 392.156 352.875 cv
392.156 353.625 391.965 354.208 391.598 354.624 cv
391.224 355.049 390.716 355.257 390.066 355.257 cv
389.408 355.257 388.892 355.049 388.525 354.624 cv
388.159 354.208 387.976 353.625 387.976 352.875 cv
387.976 352.126 388.159 351.543 388.525 351.118 cv
388.892 350.702 389.408 350.485 390.066 350.485 cv
f
395.163 351.118 mo
394.763 351.118 394.447 351.276 394.213 351.593 cv
393.98 351.909 393.864 352.334 393.864 352.875 cv
393.864 353.425 393.972 353.85 394.205 354.166 cv
394.438 354.483 394.755 354.633 395.163 354.633 cv
395.563 354.633 395.879 354.483 396.112 354.166 cv
396.345 353.85 396.462 353.425 396.462 352.875 cv
396.462 352.342 396.345 351.909 396.112 351.593 cv
395.879 351.276 395.563 351.118 395.163 351.118 cv
395.163 350.485 mo
395.812 350.485 396.32 350.702 396.695 351.118 cv
397.062 351.543 397.253 352.126 397.253 352.875 cv
397.253 353.625 397.062 354.208 396.695 354.624 cv
396.32 355.049 395.812 355.257 395.163 355.257 cv
394.505 355.257 393.988 355.049 393.622 354.624 cv
393.256 354.208 393.072 353.625 393.072 352.875 cv
393.072 352.126 393.256 351.543 393.622 351.118 cv
393.988 350.702 394.505 350.485 395.163 350.485 cv
f
398.494 348.82 mo
399.243 348.82 li
399.243 355.149 li
398.494 355.149 li
398.494 348.82 li
f
401.667 352.251 mo
401.667 354.474 li
402.983 354.474 li
403.424 354.474 403.749 354.383 403.965 354.2 cv
404.174 354.016 404.282 353.742 404.282 353.358 cv
404.282 352.984 404.174 352.709 403.965 352.526 cv
403.749 352.342 403.424 352.251 402.983 352.251 cv
401.667 352.251 li
401.667 349.752 mo
401.667 351.585 li
402.883 351.585 li
403.283 351.585 403.574 351.51 403.774 351.36 cv
403.974 351.21 404.074 350.985 404.074 350.669 cv
404.074 350.369 403.974 350.136 403.774 349.986 cv
403.574 349.836 403.283 349.752 402.883 349.752 cv
401.667 349.752 li
400.842 349.078 mo
402.941 349.078 li
403.566 349.078 404.049 349.211 404.39 349.469 cv
404.723 349.736 404.898 350.102 404.898 350.577 cv
404.898 350.952 404.807 351.251 404.632 351.468 cv
404.457 351.685 404.207 351.826 403.874 351.876 cv
404.274 351.968 404.59 352.151 404.815 352.426 cv
405.031 352.701 405.148 353.042 405.148 353.45 cv
405.148 354 404.956 354.416 404.59 354.708 cv
404.224 355.007 403.699 355.149 403.024 355.149 cv
400.842 355.149 li
400.842 349.078 li
f
409.987 356.523 mo
409.987 357.106 li
405.664 357.106 li
405.664 356.523 li
409.987 356.523 li
f
413.684 351.285 mo
413.684 348.82 li
414.434 348.82 li
414.434 355.149 li
413.684 355.149 li
413.684 354.466 li
413.526 354.741 413.326 354.941 413.085 355.066 cv
412.843 355.191 412.56 355.257 412.227 355.257 cv
411.677 355.257 411.228 355.041 410.878 354.608 cv
410.528 354.175 410.361 353.592 410.361 352.875 cv
410.361 352.159 410.528 351.585 410.878 351.143 cv
411.228 350.71 411.677 350.485 412.227 350.485 cv
412.56 350.485 412.843 350.552 413.085 350.685 cv
413.326 350.818 413.526 351.018 413.684 351.285 cv
411.136 352.875 mo
411.136 353.425 411.244 353.858 411.469 354.175 cv
411.694 354.491 412.01 354.641 412.41 354.641 cv
412.801 354.641 413.11 354.491 413.343 354.175 cv
413.568 353.858 413.684 353.425 413.684 352.875 cv
413.684 352.326 413.568 351.901 413.343 351.585 cv
413.11 351.268 412.801 351.11 412.41 351.11 cv
412.01 351.11 411.694 351.268 411.469 351.585 cv
411.244 351.901 411.136 352.326 411.136 352.875 cv
f
418.048 352.859 mo
417.44 352.859 417.024 352.934 416.791 353.067 cv
416.557 353.209 416.441 353.442 416.441 353.775 cv
416.441 354.041 416.524 354.258 416.699 354.408 cv
416.874 354.566 417.115 354.641 417.415 354.641 cv
417.832 354.641 418.165 354.499 418.415 354.2 cv
418.664 353.908 418.789 353.517 418.789 353.025 cv
418.789 352.859 li
418.048 352.859 li
419.539 352.551 mo
419.539 355.149 li
418.789 355.149 li
418.789 354.458 li
418.614 354.741 418.398 354.941 418.148 355.066 cv
417.898 355.191 417.582 355.257 417.215 355.257 cv
416.749 355.257 416.374 355.132 416.099 354.874 cv
415.825 354.616 415.691 354.266 415.691 353.825 cv
415.691 353.317 415.858 352.934 416.208 352.667 cv
416.549 352.409 417.057 352.276 417.74 352.276 cv
418.789 352.276 li
418.789 352.201 li
418.789 351.859 418.673 351.593 418.448 351.401 cv
418.223 351.218 417.907 351.118 417.498 351.118 cv
417.232 351.118 416.982 351.152 416.732 351.218 cv
416.482 351.285 416.249 351.376 416.024 351.493 cv
416.024 350.802 li
416.291 350.702 416.557 350.619 416.816 350.569 cv
417.074 350.519 417.324 350.485 417.573 350.485 cv
418.231 350.485 418.723 350.66 419.047 351.002 cv
419.372 351.343 419.539 351.859 419.539 352.551 cv
f
422.978 355.565 mo
422.762 356.098 422.554 356.456 422.354 356.623 cv
422.154 356.79 421.887 356.873 421.554 356.873 cv
420.955 356.873 li
420.955 356.248 li
421.396 356.248 li
421.596 356.248 421.754 356.198 421.871 356.098 cv
421.987 355.998 422.112 355.774 422.254 355.407 cv
422.387 355.074 li
420.547 350.594 li
421.338 350.594 li
422.762 354.158 li
424.186 350.594 li
424.977 350.594 li
422.978 355.565 li
f
426.26 354.458 mo
427.6 354.458 li
427.6 349.827 li
426.143 350.119 li
426.143 349.369 li
427.592 349.078 li
428.416 349.078 li
428.416 354.458 li
429.757 354.458 li
429.757 355.149 li
426.26 355.149 li
426.26 354.458 li
f
433.172 349.619 mo
432.747 349.619 432.431 349.827 432.214 350.244 cv
431.998 350.66 431.898 351.285 431.898 352.118 cv
431.898 352.95 431.998 353.575 432.214 353.991 cv
432.431 354.408 432.747 354.616 433.172 354.616 cv
433.596 354.616 433.913 354.408 434.129 353.991 cv
434.338 353.575 434.446 352.95 434.446 352.118 cv
434.446 351.285 434.338 350.66 434.129 350.244 cv
433.913 349.827 433.596 349.619 433.172 349.619 cv
433.172 348.97 mo
433.846 348.97 434.363 349.244 434.729 349.777 cv
435.087 350.319 435.27 351.102 435.27 352.118 cv
435.27 353.142 435.087 353.925 434.729 354.458 cv
434.363 354.991 433.846 355.257 433.172 355.257 cv
432.489 355.257 431.964 354.991 431.606 354.458 cv
431.248 353.925 431.073 353.142 431.073 352.118 cv
431.073 351.102 431.248 350.319 431.606 349.777 cv
431.964 349.244 432.489 348.97 433.172 348.97 cv
f
438.468 349.619 mo
438.044 349.619 437.727 349.827 437.511 350.244 cv
437.294 350.66 437.194 351.285 437.194 352.118 cv
437.194 352.95 437.294 353.575 437.511 353.991 cv
437.727 354.408 438.044 354.616 438.468 354.616 cv
438.893 354.616 439.21 354.408 439.426 353.991 cv
439.634 353.575 439.743 352.95 439.743 352.118 cv
439.743 351.285 439.634 350.66 439.426 350.244 cv
439.21 349.827 438.893 349.619 438.468 349.619 cv
438.468 348.97 mo
439.143 348.97 439.659 349.244 440.026 349.777 cv
440.384 350.319 440.567 351.102 440.567 352.118 cv
440.567 353.142 440.384 353.925 440.026 354.458 cv
439.659 354.991 439.143 355.257 438.468 355.257 cv
437.785 355.257 437.261 354.991 436.903 354.458 cv
436.545 353.925 436.37 353.142 436.37 352.118 cv
436.37 351.102 436.545 350.319 436.903 349.777 cv
437.261 349.244 437.785 348.97 438.468 348.97 cv
f
442.641 349.303 mo
442.641 350.594 li
444.181 350.594 li
444.181 351.177 li
442.641 351.177 li
442.641 353.65 li
442.641 354.025 442.691 354.266 442.791 354.366 cv
442.891 354.474 443.099 354.524 443.415 354.524 cv
444.181 354.524 li
444.181 355.149 li
443.415 355.149 li
442.832 355.149 442.433 355.041 442.216 354.824 cv
441.999 354.608 441.891 354.216 441.891 353.65 cv
441.891 351.177 li
441.342 351.177 li
441.342 350.594 li
441.891 350.594 li
441.891 349.303 li
442.641 349.303 li
f
446.93 351.118 mo
446.53 351.118 446.213 351.276 445.98 351.593 cv
445.747 351.909 445.63 352.334 445.63 352.875 cv
445.63 353.425 445.739 353.85 445.972 354.166 cv
446.205 354.483 446.522 354.633 446.93 354.633 cv
447.329 354.633 447.646 354.483 447.879 354.166 cv
448.112 353.85 448.229 353.425 448.229 352.875 cv
448.229 352.342 448.112 351.909 447.879 351.593 cv
447.646 351.276 447.329 351.118 446.93 351.118 cv
446.93 350.485 mo
447.579 350.485 448.087 350.702 448.462 351.118 cv
448.828 351.543 449.02 352.126 449.02 352.875 cv
449.02 353.625 448.828 354.208 448.462 354.624 cv
448.087 355.049 447.579 355.257 446.93 355.257 cv
446.272 355.257 445.755 355.049 445.389 354.624 cv
445.023 354.208 444.839 353.625 444.839 352.875 cv
444.839 352.126 445.023 351.543 445.389 351.118 cv
445.755 350.702 446.272 350.485 446.93 350.485 cv
f
450.511 354.458 mo
451.851 354.458 li
451.851 349.827 li
450.394 350.119 li
450.394 349.369 li
451.843 349.078 li
452.668 349.078 li
452.668 354.458 li
454.008 354.458 li
454.008 355.149 li
450.511 355.149 li
450.511 354.458 li
f
457.923 349.794 mo
455.849 353.034 li
457.923 353.034 li
457.923 349.794 li
457.706 349.078 mo
458.739 349.078 li
458.739 353.034 li
459.605 353.034 li
459.605 353.717 li
458.739 353.717 li
458.739 355.149 li
457.923 355.149 li
457.923 353.717 li
455.183 353.717 li
455.183 352.925 li
457.706 349.078 li
f
461.67 354.458 mo
464.535 354.458 li
464.535 355.149 li
460.679 355.149 li
460.679 354.458 li
460.987 354.141 461.412 353.708 461.953 353.159 cv
462.486 352.617 462.828 352.267 462.969 352.109 cv
463.236 351.818 463.419 351.568 463.519 351.36 cv
463.619 351.16 463.677 350.952 463.677 350.752 cv
463.677 350.435 463.561 350.169 463.336 349.969 cv
463.111 349.769 462.819 349.661 462.453 349.661 cv
462.195 349.661 461.92 349.711 461.637 349.794 cv
461.354 349.886 461.046 350.019 460.721 350.202 cv
460.721 349.369 li
461.054 349.236 461.362 349.136 461.645 349.07 cv
461.928 349.003 462.195 348.97 462.436 348.97 cv
463.061 348.97 463.561 349.128 463.935 349.444 cv
464.31 349.761 464.502 350.177 464.502 350.702 cv
464.502 350.952 464.452 351.193 464.36 351.41 cv
464.269 351.635 464.102 351.901 463.852 352.201 cv
463.786 352.284 463.569 352.509 463.203 352.884 cv
462.836 353.259 462.328 353.783 461.67 354.458 cv
f
469.615 356.523 mo
469.615 357.106 li
465.293 357.106 li
465.293 356.523 li
469.615 356.523 li
f
473.588 352.875 mo
473.588 352.326 473.471 351.901 473.246 351.585 cv
473.013 351.268 472.705 351.11 472.313 351.11 cv
471.914 351.11 471.606 351.268 471.381 351.585 cv
471.147 351.901 471.039 352.326 471.039 352.875 cv
471.039 353.425 471.147 353.858 471.381 354.175 cv
471.606 354.491 471.914 354.641 472.313 354.641 cv
472.705 354.641 473.013 354.491 473.246 354.175 cv
473.471 353.858 473.588 353.425 473.588 352.875 cv
471.039 351.285 mo
471.189 351.018 471.389 350.818 471.631 350.685 cv
471.872 350.552 472.164 350.485 472.497 350.485 cv
473.046 350.485 473.496 350.71 473.846 351.143 cv
474.187 351.585 474.362 352.159 474.362 352.875 cv
474.362 353.592 474.187 354.175 473.846 354.608 cv
473.496 355.041 473.046 355.257 472.497 355.257 cv
472.164 355.257 471.872 355.191 471.631 355.066 cv
471.389 354.941 471.189 354.741 471.039 354.466 cv
471.039 355.149 li
470.29 355.149 li
470.29 348.82 li
471.039 348.82 li
471.039 351.285 li
f
479.5 352.684 mo
479.5 353.05 li
476.061 353.05 li
476.094 353.567 476.244 353.966 476.527 354.233 cv
476.802 354.499 477.185 354.633 477.685 354.633 cv
477.968 354.633 478.251 354.599 478.518 354.533 cv
478.784 354.466 479.059 354.358 479.326 354.208 cv
479.326 354.916 li
479.059 355.032 478.784 355.124 478.501 355.174 cv
478.218 355.224 477.926 355.257 477.643 355.257 cv
476.91 355.257 476.336 355.049 475.911 354.633 cv
475.486 354.216 475.278 353.642 475.278 352.917 cv
475.278 352.176 475.478 351.585 475.878 351.143 cv
476.277 350.71 476.827 350.485 477.51 350.485 cv
478.126 350.485 478.609 350.685 478.967 351.077 cv
479.317 351.476 479.5 352.009 479.5 352.684 cv
478.751 352.467 mo
478.743 352.059 478.626 351.734 478.409 351.485 cv
478.185 351.243 477.885 351.118 477.518 351.118 cv
477.102 351.118 476.769 351.243 476.519 351.476 cv
476.269 351.71 476.119 352.043 476.086 352.467 cv
478.751 352.467 li
f
483.032 348.82 mo
483.032 349.444 li
482.315 349.444 li
482.049 349.444 481.857 349.503 481.757 349.611 cv
481.649 349.719 481.599 349.911 481.599 350.194 cv
481.599 350.594 li
482.832 350.594 li
482.832 351.177 li
481.599 351.177 li
481.599 355.149 li
480.85 355.149 li
480.85 351.177 li
480.133 351.177 li
480.133 350.594 li
480.85 350.594 li
480.85 350.277 li
480.85 349.777 480.966 349.403 481.199 349.169 cv
481.433 348.936 481.807 348.82 482.324 348.82 cv
483.032 348.82 li
f
485.422 351.118 mo
485.022 351.118 484.706 351.276 484.472 351.593 cv
484.239 351.909 484.123 352.334 484.123 352.875 cv
484.123 353.425 484.231 353.85 484.464 354.166 cv
484.697 354.483 485.014 354.633 485.422 354.633 cv
485.821 354.633 486.138 354.483 486.371 354.166 cv
486.604 353.85 486.721 353.425 486.721 352.875 cv
486.721 352.342 486.604 351.909 486.371 351.593 cv
486.138 351.276 485.821 351.118 485.422 351.118 cv
485.422 350.485 mo
486.071 350.485 486.579 350.702 486.954 351.118 cv
487.32 351.543 487.512 352.126 487.512 352.875 cv
487.512 353.625 487.32 354.208 486.954 354.624 cv
486.579 355.049 486.071 355.257 485.422 355.257 cv
484.764 355.257 484.247 355.049 483.881 354.624 cv
483.515 354.208 483.331 353.625 483.331 352.875 cv
483.331 352.126 483.515 351.543 483.881 351.118 cv
484.247 350.702 484.764 350.485 485.422 350.485 cv
f
491.393 351.293 mo
491.31 351.243 491.218 351.21 491.118 351.185 cv
491.018 351.168 490.91 351.152 490.793 351.152 cv
490.369 351.152 490.044 351.293 489.819 351.568 cv
489.586 351.843 489.477 352.234 489.477 352.751 cv
489.477 355.149 li
488.728 355.149 li
488.728 350.594 li
489.477 350.594 li
489.477 351.301 li
489.627 351.027 489.836 350.818 490.085 350.685 cv
490.335 350.552 490.643 350.485 491.01 350.485 cv
491.185 350.494 li
491.393 350.527 li
491.393 351.293 li
f
496.073 352.684 mo
496.073 353.05 li
492.634 353.05 li
492.667 353.567 492.817 353.966 493.1 354.233 cv
493.375 354.499 493.758 354.633 494.258 354.633 cv
494.541 354.633 494.824 354.599 495.091 354.533 cv
495.357 354.466 495.632 354.358 495.898 354.208 cv
495.898 354.916 li
495.632 355.032 495.357 355.124 495.074 355.174 cv
494.791 355.224 494.499 355.257 494.216 355.257 cv
493.483 355.257 492.909 355.049 492.484 354.633 cv
492.059 354.216 491.851 353.642 491.851 352.917 cv
491.851 352.176 492.051 351.585 492.451 351.143 cv
492.85 350.71 493.4 350.485 494.083 350.485 cv
494.699 350.485 495.182 350.685 495.54 351.077 cv
495.89 351.476 496.073 352.009 496.073 352.684 cv
495.324 352.467 mo
495.315 352.059 495.199 351.734 494.982 351.485 cv
494.757 351.243 494.458 351.118 494.091 351.118 cv
493.675 351.118 493.342 351.243 493.092 351.476 cv
492.842 351.71 492.692 352.043 492.659 352.467 cv
495.324 352.467 li
f
1 lw
285.483 364.367 mo
293.811 364.367 li
.883665 .769161 0 0 cmyk
@
297.142 364.367 mo
305.47 364.367 li
@
289.647 368.531 mo
289.647 360.203 li
@
301.306 368.531 mo
301.306 360.203 li
@
285.483 367.367 mo
285.483 361.367 li
f
.5 lw
285.483 367.367 mo
285.483 361.367 li
@
297.142 367.367 mo
297.142 361.367 li
f
297.142 367.367 mo
297.142 361.367 li
@
293.811 367.367 mo
293.811 361.367 li
f
293.811 367.367 mo
293.811 361.367 li
@
305.47 367.367 mo
305.47 361.367 li
f
305.47 367.367 mo
305.47 361.367 li
@
292.647 368.531 mo
286.647 368.531 li
f
292.647 368.531 mo
286.647 368.531 li
@
304.306 368.531 mo
298.306 368.531 li
f
304.306 368.531 mo
298.306 368.531 li
@
292.647 360.203 mo
286.647 360.203 li
f
292.647 360.203 mo
286.647 360.203 li
@
304.306 360.203 mo
298.306 360.203 li
f
304.306 360.203 mo
298.306 360.203 li
@
289.647 368.609 mo
293.89 364.366 li
289.647 360.124 li
285.404 364.366 li
cp
f
0 lj
289.647 368.609 mo
293.89 364.366 li
289.647 360.124 li
285.404 364.366 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
301.306 368.609 mo
305.549 364.366 li
301.306 360.124 li
297.063 364.366 li
cp
.883665 .769161 0 0 cmyk
f
301.306 368.609 mo
305.549 364.366 li
301.306 360.124 li
297.063 364.366 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
311.283 361.21 mo
312.108 361.21 li
312.108 363.7 li
315.089 363.7 li
315.089 361.21 li
315.914 361.21 li
315.914 367.281 li
315.089 367.281 li
315.089 364.391 li
312.108 364.391 li
312.108 367.281 li
311.283 367.281 li
311.283 361.21 li
f
319.278 363.25 mo
318.878 363.25 318.562 363.408 318.329 363.725 cv
318.095 364.041 317.979 364.466 317.979 365.007 cv
317.979 365.557 318.087 365.982 318.32 366.298 cv
318.553 366.615 318.87 366.765 319.278 366.765 cv
319.678 366.765 319.994 366.615 320.227 366.298 cv
320.461 365.982 320.577 365.557 320.577 365.007 cv
320.577 364.474 320.461 364.041 320.227 363.725 cv
319.994 363.408 319.678 363.25 319.278 363.25 cv
319.278 362.617 mo
319.928 362.617 320.436 362.834 320.81 363.25 cv
321.177 363.675 321.368 364.258 321.368 365.007 cv
321.368 365.757 321.177 366.34 320.81 366.756 cv
320.436 367.181 319.928 367.389 319.278 367.389 cv
318.62 367.389 318.104 367.181 317.737 366.756 cv
317.371 366.34 317.188 365.757 317.188 365.007 cv
317.188 364.258 317.371 363.675 317.737 363.25 cv
318.104 362.834 318.62 362.617 319.278 362.617 cv
f
325.516 362.859 mo
325.516 363.567 li
325.299 363.467 325.083 363.384 324.858 363.325 cv
324.625 363.275 324.391 363.242 324.15 363.242 cv
323.775 363.242 323.492 363.3 323.309 363.417 cv
323.126 363.533 323.034 363.7 323.034 363.925 cv
323.034 364.1 323.101 364.233 323.234 364.333 cv
323.367 364.433 323.634 364.533 324.033 364.616 cv
324.291 364.674 li
324.824 364.791 325.199 364.957 325.424 365.157 cv
325.641 365.366 325.757 365.657 325.757 366.023 cv
325.757 366.448 325.591 366.781 325.258 367.023 cv
324.924 367.273 324.458 367.389 323.875 367.389 cv
323.625 367.389 323.375 367.364 323.109 367.323 cv
322.842 367.281 322.568 367.214 322.276 367.114 cv
322.276 366.34 li
322.551 366.49 322.826 366.598 323.092 366.665 cv
323.359 366.74 323.625 366.773 323.892 366.773 cv
324.242 366.773 324.516 366.715 324.708 366.598 cv
324.891 366.482 324.991 366.307 324.991 366.082 cv
324.991 365.882 324.916 365.724 324.783 365.615 cv
324.65 365.507 324.35 365.399 323.883 365.299 cv
323.625 365.241 li
323.159 365.141 322.817 364.991 322.618 364.791 cv
322.409 364.591 322.309 364.316 322.309 363.958 cv
322.309 363.533 322.459 363.2 322.759 362.967 cv
323.059 362.734 323.492 362.617 324.058 362.617 cv
324.333 362.617 324.591 362.642 324.841 362.684 cv
325.083 362.726 325.307 362.784 325.516 362.859 cv
f
327.689 361.435 mo
327.689 362.726 li
329.23 362.726 li
329.23 363.309 li
327.689 363.309 li
327.689 365.782 li
327.689 366.157 327.739 366.398 327.839 366.498 cv
327.939 366.606 328.147 366.656 328.464 366.656 cv
329.23 366.656 li
329.23 367.281 li
328.464 367.281 li
327.881 367.281 327.481 367.173 327.265 366.956 cv
327.048 366.74 326.94 366.348 326.94 365.782 cv
326.94 363.309 li
326.39 363.309 li
326.39 362.726 li
326.94 362.726 li
326.94 361.435 li
327.689 361.435 li
f
330.246 361.21 mo
331.07 361.21 li
331.07 366.59 li
334.027 366.59 li
334.027 367.281 li
330.246 367.281 li
330.246 361.21 li
f
334.851 362.726 mo
335.601 362.726 li
335.601 367.281 li
334.851 367.281 li
334.851 362.726 li
334.851 360.952 mo
335.601 360.952 li
335.601 361.901 li
334.851 361.901 li
334.851 360.952 li
f
339.473 360.952 mo
339.473 361.576 li
338.757 361.576 li
338.491 361.576 338.299 361.635 338.199 361.743 cv
338.091 361.851 338.041 362.043 338.041 362.326 cv
338.041 362.726 li
339.274 362.726 li
339.274 363.309 li
338.041 363.309 li
338.041 367.281 li
337.291 367.281 li
337.291 363.309 li
336.575 363.309 li
336.575 362.726 li
337.291 362.726 li
337.291 362.409 li
337.291 361.909 337.408 361.535 337.641 361.302 cv
337.874 361.068 338.249 360.952 338.766 360.952 cv
339.473 360.952 li
f
343.996 364.816 mo
343.996 365.182 li
340.556 365.182 li
340.589 365.699 340.739 366.098 341.022 366.365 cv
341.297 366.631 341.68 366.765 342.18 366.765 cv
342.463 366.765 342.746 366.731 343.013 366.665 cv
343.279 366.598 343.554 366.49 343.821 366.34 cv
343.821 367.048 li
343.554 367.164 343.279 367.256 342.996 367.306 cv
342.713 367.356 342.422 367.389 342.138 367.389 cv
341.406 367.389 340.831 367.181 340.406 366.765 cv
339.981 366.348 339.773 365.774 339.773 365.049 cv
339.773 364.308 339.973 363.717 340.373 363.275 cv
340.773 362.842 341.322 362.617 342.005 362.617 cv
342.621 362.617 343.104 362.817 343.463 363.209 cv
343.812 363.608 343.996 364.141 343.996 364.816 cv
343.246 364.599 mo
343.238 364.191 343.121 363.867 342.905 363.617 cv
342.68 363.375 342.38 363.25 342.014 363.25 cv
341.597 363.25 341.264 363.375 341.014 363.608 cv
340.764 363.842 340.614 364.175 340.581 364.599 cv
343.246 364.599 li
f
348.892 361.41 mo
348.892 362.209 li
348.576 362.059 348.285 361.951 348.01 361.876 cv
347.727 361.81 347.46 361.768 347.21 361.768 cv
346.761 361.768 346.411 361.859 346.169 362.026 cv
345.928 362.201 345.811 362.451 345.811 362.767 cv
345.811 363.034 345.886 363.242 346.053 363.375 cv
346.211 363.517 346.519 363.625 346.969 363.708 cv
347.468 363.808 li
348.076 363.925 348.526 364.133 348.818 364.424 cv
349.109 364.724 349.259 365.116 349.259 365.607 cv
349.259 366.198 349.059 366.64 348.668 366.94 cv
348.268 367.239 347.693 367.389 346.935 367.389 cv
346.644 367.389 346.336 367.356 346.011 367.298 cv
345.686 367.239 345.353 367.148 345.012 367.014 cv
345.012 366.165 li
345.345 366.357 345.67 366.498 345.986 366.59 cv
346.302 366.69 346.619 366.731 346.935 366.731 cv
347.402 366.731 347.76 366.64 348.018 366.457 cv
348.268 366.273 348.401 366.015 348.401 365.665 cv
348.401 365.366 348.31 365.132 348.126 364.966 cv
347.943 364.799 347.643 364.674 347.227 364.591 cv
346.727 364.491 li
346.111 364.375 345.67 364.183 345.395 363.917 cv
345.12 363.658 344.987 363.3 344.987 362.834 cv
344.987 362.301 345.17 361.876 345.553 361.568 cv
345.928 361.26 346.452 361.102 347.119 361.102 cv
347.402 361.102 347.685 361.127 347.985 361.177 cv
348.276 361.227 348.576 361.31 348.892 361.41 cv
f
351.249 361.435 mo
351.249 362.726 li
352.79 362.726 li
352.79 363.309 li
351.249 363.309 li
351.249 365.782 li
351.249 366.157 351.299 366.398 351.399 366.498 cv
351.499 366.606 351.707 366.656 352.024 366.656 cv
352.79 366.656 li
352.79 367.281 li
352.024 367.281 li
351.441 367.281 351.041 367.173 350.825 366.956 cv
350.608 366.74 350.5 366.348 350.5 365.782 cv
350.5 363.309 li
349.95 363.309 li
349.95 362.726 li
350.5 362.726 li
350.5 361.435 li
351.249 361.435 li
f
355.671 367.697 mo
355.455 368.23 355.247 368.589 355.047 368.755 cv
354.847 368.922 354.58 369.005 354.247 369.005 cv
353.648 369.005 li
353.648 368.38 li
354.089 368.38 li
354.289 368.38 354.447 368.33 354.564 368.23 cv
354.68 368.13 354.805 367.906 354.947 367.539 cv
355.08 367.206 li
353.24 362.726 li
354.031 362.726 li
355.455 366.29 li
356.879 362.726 li
357.67 362.726 li
355.671 367.697 li
f
358.703 360.952 mo
359.452 360.952 li
359.452 367.281 li
358.703 367.281 li
358.703 360.952 li
f
364.915 364.816 mo
364.915 365.182 li
361.476 365.182 li
361.509 365.699 361.659 366.098 361.942 366.365 cv
362.217 366.631 362.6 366.765 363.1 366.765 cv
363.383 366.765 363.666 366.731 363.933 366.665 cv
364.199 366.598 364.474 366.49 364.741 366.34 cv
364.741 367.048 li
364.474 367.164 364.199 367.256 363.916 367.306 cv
363.633 367.356 363.341 367.389 363.058 367.389 cv
362.325 367.389 361.751 367.181 361.326 366.765 cv
360.901 366.348 360.693 365.774 360.693 365.049 cv
360.693 364.308 360.893 363.717 361.293 363.275 cv
361.693 362.842 362.242 362.617 362.925 362.617 cv
363.541 362.617 364.024 362.817 364.382 363.209 cv
364.732 363.608 364.915 364.141 364.915 364.816 cv
364.166 364.599 mo
364.158 364.191 364.041 363.867 363.824 363.617 cv
363.6 363.375 363.3 363.25 362.933 363.25 cv
362.517 363.25 362.184 363.375 361.934 363.608 cv
361.684 363.842 361.534 364.175 361.501 364.599 cv
364.166 364.599 li
f
369.604 368.655 mo
369.604 369.238 li
365.282 369.238 li
365.282 368.655 li
369.604 368.655 li
f
373.976 361.41 mo
373.976 362.209 li
373.66 362.059 373.368 361.951 373.094 361.876 cv
372.81 361.81 372.544 361.768 372.294 361.768 cv
371.844 361.768 371.495 361.859 371.253 362.026 cv
371.012 362.201 370.895 362.451 370.895 362.767 cv
370.895 363.034 370.97 363.242 371.137 363.375 cv
371.295 363.517 371.603 363.625 372.053 363.708 cv
372.552 363.808 li
373.16 363.925 373.61 364.133 373.901 364.424 cv
374.193 364.724 374.343 365.116 374.343 365.607 cv
374.343 366.198 374.143 366.64 373.751 366.94 cv
373.352 367.239 372.777 367.389 372.019 367.389 cv
371.728 367.389 371.42 367.356 371.095 367.298 cv
370.77 367.239 370.437 367.148 370.096 367.014 cv
370.096 366.165 li
370.429 366.357 370.753 366.498 371.07 366.59 cv
371.386 366.69 371.703 366.731 372.019 366.731 cv
372.486 366.731 372.844 366.64 373.102 366.457 cv
373.352 366.273 373.485 366.015 373.485 365.665 cv
373.485 365.366 373.393 365.132 373.21 364.966 cv
373.027 364.799 372.727 364.674 372.311 364.591 cv
371.811 364.491 li
371.195 364.375 370.753 364.183 370.479 363.917 cv
370.204 363.658 370.071 363.3 370.071 362.834 cv
370.071 362.301 370.254 361.876 370.637 361.568 cv
371.012 361.26 371.536 361.102 372.202 361.102 cv
372.486 361.102 372.769 361.127 373.069 361.177 cv
373.36 361.227 373.66 361.31 373.976 361.41 cv
f
376.333 361.435 mo
376.333 362.726 li
377.874 362.726 li
377.874 363.309 li
376.333 363.309 li
376.333 365.782 li
376.333 366.157 376.383 366.398 376.483 366.498 cv
376.583 366.606 376.791 366.656 377.108 366.656 cv
377.874 366.656 li
377.874 367.281 li
377.108 367.281 li
376.525 367.281 376.125 367.173 375.908 366.956 cv
375.692 366.74 375.584 366.348 375.584 365.782 cv
375.584 363.309 li
375.034 363.309 li
375.034 362.726 li
375.584 362.726 li
375.584 361.435 li
376.333 361.435 li
f
380.622 363.25 mo
380.222 363.25 379.906 363.408 379.673 363.725 cv
379.439 364.041 379.323 364.466 379.323 365.007 cv
379.323 365.557 379.431 365.982 379.664 366.298 cv
379.897 366.615 380.214 366.765 380.622 366.765 cv
381.022 366.765 381.338 366.615 381.571 366.298 cv
381.805 365.982 381.921 365.557 381.921 365.007 cv
381.921 364.474 381.805 364.041 381.571 363.725 cv
381.338 363.408 381.022 363.25 380.622 363.25 cv
380.622 362.617 mo
381.272 362.617 381.78 362.834 382.154 363.25 cv
382.521 363.675 382.712 364.258 382.712 365.007 cv
382.712 365.757 382.521 366.34 382.154 366.756 cv
381.78 367.181 381.272 367.389 380.622 367.389 cv
379.964 367.389 379.448 367.181 379.081 366.756 cv
378.715 366.34 378.532 365.757 378.532 365.007 cv
378.532 364.258 378.715 363.675 379.081 363.25 cv
379.448 362.834 379.964 362.617 380.622 362.617 cv
f
385.719 363.25 mo
385.319 363.25 385.003 363.408 384.769 363.725 cv
384.536 364.041 384.42 364.466 384.42 365.007 cv
384.42 365.557 384.528 365.982 384.761 366.298 cv
384.994 366.615 385.311 366.765 385.719 366.765 cv
386.119 366.765 386.435 366.615 386.668 366.298 cv
386.901 365.982 387.018 365.557 387.018 365.007 cv
387.018 364.474 386.901 364.041 386.668 363.725 cv
386.435 363.408 386.119 363.25 385.719 363.25 cv
385.719 362.617 mo
386.368 362.617 386.876 362.834 387.251 363.25 cv
387.618 363.675 387.809 364.258 387.809 365.007 cv
387.809 365.757 387.618 366.34 387.251 366.756 cv
386.876 367.181 386.368 367.389 385.719 367.389 cv
385.061 367.389 384.545 367.181 384.178 366.756 cv
383.812 366.34 383.628 365.757 383.628 365.007 cv
383.628 364.258 383.812 363.675 384.178 363.25 cv
384.545 362.834 385.061 362.617 385.719 362.617 cv
f
389.05 360.952 mo
389.799 360.952 li
389.799 367.281 li
389.05 367.281 li
389.05 360.952 li
f
392.223 364.383 mo
392.223 366.606 li
393.539 366.606 li
393.98 366.606 394.305 366.515 394.521 366.332 cv
394.73 366.148 394.838 365.874 394.838 365.49 cv
394.838 365.116 394.73 364.841 394.521 364.658 cv
394.305 364.474 393.98 364.383 393.539 364.383 cv
392.223 364.383 li
392.223 361.884 mo
392.223 363.717 li
393.439 363.717 li
393.839 363.717 394.13 363.642 394.33 363.492 cv
394.53 363.342 394.63 363.117 394.63 362.801 cv
394.63 362.501 394.53 362.268 394.33 362.118 cv
394.13 361.968 393.839 361.884 393.439 361.884 cv
392.223 361.884 li
391.398 361.21 mo
393.497 361.21 li
394.122 361.21 394.605 361.343 394.946 361.601 cv
395.279 361.868 395.454 362.234 395.454 362.709 cv
395.454 363.084 395.363 363.384 395.188 363.6 cv
395.013 363.817 394.763 363.958 394.43 364.008 cv
394.83 364.1 395.146 364.283 395.371 364.558 cv
395.587 364.833 395.704 365.174 395.704 365.582 cv
395.704 366.132 395.513 366.548 395.146 366.84 cv
394.78 367.139 394.255 367.281 393.58 367.281 cv
391.398 367.281 li
391.398 361.21 li
f
400.543 368.655 mo
400.543 369.238 li
396.22 369.238 li
396.22 368.655 li
400.543 368.655 li
f
404.24 363.417 mo
404.24 360.952 li
404.99 360.952 li
404.99 367.281 li
404.24 367.281 li
404.24 366.598 li
404.082 366.873 403.882 367.073 403.641 367.198 cv
403.399 367.323 403.116 367.389 402.783 367.389 cv
402.233 367.389 401.784 367.173 401.434 366.74 cv
401.084 366.307 400.917 365.724 400.917 365.007 cv
400.917 364.291 401.084 363.717 401.434 363.275 cv
401.784 362.842 402.233 362.617 402.783 362.617 cv
403.116 362.617 403.399 362.684 403.641 362.817 cv
403.882 362.95 404.082 363.15 404.24 363.417 cv
401.692 365.007 mo
401.692 365.557 401.8 365.99 402.025 366.307 cv
402.25 366.623 402.566 366.773 402.966 366.773 cv
403.358 366.773 403.666 366.623 403.899 366.307 cv
404.124 365.99 404.24 365.557 404.24 365.007 cv
404.24 364.458 404.124 364.033 403.899 363.717 cv
403.666 363.4 403.358 363.242 402.966 363.242 cv
402.566 363.242 402.25 363.4 402.025 363.717 cv
401.8 364.033 401.692 364.458 401.692 365.007 cv
f
408.604 364.991 mo
407.996 364.991 407.58 365.066 407.347 365.199 cv
407.113 365.341 406.997 365.574 406.997 365.907 cv
406.997 366.173 407.08 366.39 407.255 366.54 cv
407.43 366.698 407.671 366.773 407.971 366.773 cv
408.388 366.773 408.721 366.631 408.971 366.332 cv
409.22 366.04 409.345 365.649 409.345 365.157 cv
409.345 364.991 li
408.604 364.991 li
410.095 364.683 mo
410.095 367.281 li
409.345 367.281 li
409.345 366.59 li
409.17 366.873 408.954 367.073 408.704 367.198 cv
408.454 367.323 408.138 367.389 407.771 367.389 cv
407.305 367.389 406.93 367.264 406.655 367.006 cv
406.381 366.748 406.247 366.398 406.247 365.957 cv
406.247 365.449 406.414 365.066 406.764 364.799 cv
407.105 364.541 407.613 364.408 408.296 364.408 cv
409.345 364.408 li
409.345 364.333 li
409.345 363.991 409.229 363.725 409.004 363.533 cv
408.779 363.35 408.463 363.25 408.054 363.25 cv
407.788 363.25 407.538 363.284 407.288 363.35 cv
407.038 363.417 406.805 363.508 406.58 363.625 cv
406.58 362.934 li
406.847 362.834 407.113 362.751 407.372 362.701 cv
407.63 362.651 407.88 362.617 408.129 362.617 cv
408.787 362.617 409.279 362.792 409.603 363.134 cv
409.928 363.475 410.095 363.991 410.095 364.683 cv
f
413.534 367.697 mo
413.318 368.23 413.11 368.589 412.91 368.755 cv
412.71 368.922 412.443 369.005 412.11 369.005 cv
411.511 369.005 li
411.511 368.38 li
411.952 368.38 li
412.152 368.38 412.31 368.33 412.427 368.23 cv
412.543 368.13 412.668 367.906 412.81 367.539 cv
412.943 367.206 li
411.103 362.726 li
411.894 362.726 li
413.318 366.29 li
414.742 362.726 li
415.533 362.726 li
413.534 367.697 li
f
416.816 366.59 mo
418.156 366.59 li
418.156 361.959 li
416.699 362.251 li
416.699 361.501 li
418.148 361.21 li
418.973 361.21 li
418.973 366.59 li
420.313 366.59 li
420.313 367.281 li
416.816 367.281 li
416.816 366.59 li
f
424.227 361.926 mo
422.154 365.166 li
424.227 365.166 li
424.227 361.926 li
424.011 361.21 mo
425.044 361.21 li
425.044 365.166 li
425.91 365.166 li
425.91 365.849 li
425.044 365.849 li
425.044 367.281 li
424.227 367.281 li
424.227 365.849 li
421.488 365.849 li
421.488 365.057 li
424.011 361.21 li
f
429.757 364.008 mo
430.149 364.091 430.457 364.266 430.673 364.533 cv
430.89 364.799 431.006 365.132 431.006 365.515 cv
431.006 366.115 430.798 366.581 430.39 366.906 cv
429.974 367.231 429.391 367.389 428.633 367.389 cv
428.375 367.389 428.108 367.364 427.842 367.314 cv
427.575 367.273 427.292 367.198 427.009 367.098 cv
427.009 366.307 li
427.234 366.44 427.484 366.54 427.759 366.606 cv
428.025 366.673 428.308 366.706 428.608 366.706 cv
429.124 366.706 429.516 366.606 429.782 366.407 cv
430.049 366.207 430.19 365.907 430.19 365.515 cv
430.19 365.166 430.065 364.883 429.816 364.683 cv
429.566 364.483 429.216 364.375 428.766 364.375 cv
428.058 364.375 li
428.058 363.7 li
428.8 363.7 li
429.199 363.7 429.507 363.625 429.724 363.458 cv
429.94 363.3 430.049 363.067 430.049 362.759 cv
430.049 362.451 429.932 362.209 429.716 362.043 cv
429.491 361.876 429.174 361.793 428.766 361.793 cv
428.541 361.793 428.3 361.818 428.042 361.868 cv
427.784 361.918 427.5 361.993 427.192 362.093 cv
427.192 361.36 li
427.5 361.277 427.792 361.21 428.067 361.168 cv
428.333 361.127 428.591 361.102 428.841 361.102 cv
429.457 361.102 429.949 361.243 430.315 361.526 cv
430.682 361.81 430.865 362.193 430.865 362.676 cv
430.865 363.009 430.765 363.292 430.573 363.525 cv
430.382 363.758 430.107 363.925 429.757 364.008 cv
f
433.197 361.435 mo
433.197 362.726 li
434.737 362.726 li
434.737 363.309 li
433.197 363.309 li
433.197 365.782 li
433.197 366.157 433.247 366.398 433.347 366.498 cv
433.447 366.606 433.655 366.656 433.971 366.656 cv
434.737 366.656 li
434.737 367.281 li
433.971 367.281 li
433.388 367.281 432.989 367.173 432.772 366.956 cv
432.556 366.74 432.447 366.348 432.447 365.782 cv
432.447 363.309 li
431.898 363.309 li
431.898 362.726 li
432.447 362.726 li
432.447 361.435 li
433.197 361.435 li
f
437.486 363.25 mo
437.086 363.25 436.769 363.408 436.536 363.725 cv
436.303 364.041 436.186 364.466 436.186 365.007 cv
436.186 365.557 436.295 365.982 436.528 366.298 cv
436.761 366.615 437.078 366.765 437.486 366.765 cv
437.885 366.765 438.202 366.615 438.435 366.298 cv
438.668 365.982 438.785 365.557 438.785 365.007 cv
438.785 364.474 438.668 364.041 438.435 363.725 cv
438.202 363.408 437.885 363.25 437.486 363.25 cv
437.486 362.617 mo
438.135 362.617 438.643 362.834 439.018 363.25 cv
439.384 363.675 439.576 364.258 439.576 365.007 cv
439.576 365.757 439.384 366.34 439.018 366.756 cv
438.643 367.181 438.135 367.389 437.486 367.389 cv
436.828 367.389 436.311 367.181 435.945 366.756 cv
435.579 366.34 435.395 365.757 435.395 365.007 cv
435.395 364.258 435.579 363.675 435.945 363.25 cv
436.311 362.834 436.828 362.617 437.486 362.617 cv
f
441.067 366.59 mo
442.408 366.59 li
442.408 361.959 li
440.95 362.251 li
440.95 361.501 li
442.399 361.21 li
443.224 361.21 li
443.224 366.59 li
444.564 366.59 li
444.564 367.281 li
441.067 367.281 li
441.067 366.59 li
f
448.079 363.917 mo
447.712 363.917 447.421 364.05 447.204 364.3 cv
446.988 364.549 446.88 364.899 446.88 365.332 cv
446.88 365.774 446.988 366.123 447.204 366.373 cv
447.421 366.623 447.712 366.748 448.079 366.748 cv
448.445 366.748 448.737 366.623 448.953 366.373 cv
449.17 366.123 449.278 365.774 449.278 365.332 cv
449.278 364.899 449.17 364.549 448.953 364.3 cv
448.737 364.05 448.445 363.917 448.079 363.917 cv
449.711 361.343 mo
449.711 362.093 li
449.503 361.993 449.295 361.918 449.087 361.868 cv
448.87 361.818 448.662 361.793 448.462 361.793 cv
447.912 361.793 447.496 361.976 447.213 362.342 cv
446.93 362.709 446.763 363.267 446.73 364 cv
446.888 363.767 447.088 363.583 447.329 363.458 cv
447.571 363.334 447.837 363.267 448.129 363.267 cv
448.737 363.267 449.22 363.458 449.57 363.825 cv
449.919 364.191 450.103 364.699 450.103 365.332 cv
450.103 365.957 449.911 366.457 449.545 366.831 cv
449.178 367.206 448.687 367.389 448.079 367.389 cv
447.379 367.389 446.838 367.123 446.472 366.59 cv
446.097 366.057 445.914 365.274 445.914 364.25 cv
445.914 363.292 446.138 362.526 446.596 361.959 cv
447.046 361.393 447.662 361.102 448.429 361.102 cv
448.629 361.102 448.837 361.127 449.053 361.16 cv
449.261 361.202 449.478 361.26 449.711 361.343 cv
f
452.226 366.59 mo
455.091 366.59 li
455.091 367.281 li
451.235 367.281 li
451.235 366.59 li
451.543 366.273 451.968 365.84 452.509 365.291 cv
453.042 364.749 453.384 364.4 453.525 364.241 cv
453.792 363.95 453.975 363.7 454.075 363.492 cv
454.175 363.292 454.233 363.084 454.233 362.884 cv
454.233 362.567 454.117 362.301 453.892 362.101 cv
453.667 361.901 453.375 361.793 453.009 361.793 cv
452.751 361.793 452.476 361.843 452.193 361.926 cv
451.91 362.018 451.602 362.151 451.277 362.334 cv
451.277 361.501 li
451.61 361.368 451.918 361.268 452.201 361.202 cv
452.484 361.135 452.751 361.102 452.992 361.102 cv
453.617 361.102 454.117 361.26 454.491 361.576 cv
454.866 361.893 455.058 362.309 455.058 362.834 cv
455.058 363.084 455.008 363.325 454.916 363.542 cv
454.825 363.767 454.658 364.033 454.408 364.333 cv
454.342 364.416 454.125 364.641 453.759 365.016 cv
453.392 365.391 452.884 365.915 452.226 366.59 cv
f
460.171 368.655 mo
460.171 369.238 li
455.849 369.238 li
455.849 368.655 li
460.171 368.655 li
f
460.871 362.726 mo
461.62 362.726 li
461.62 367.281 li
460.871 367.281 li
460.871 362.726 li
460.871 360.952 mo
461.62 360.952 li
461.62 361.901 li
460.871 361.901 li
460.871 360.952 li
f
466.975 364.533 mo
466.975 367.281 li
466.226 367.281 li
466.226 364.558 li
466.226 364.125 466.134 363.808 465.967 363.592 cv
465.801 363.375 465.551 363.267 465.218 363.267 cv
464.81 363.267 464.493 363.4 464.26 363.658 cv
464.027 363.917 463.91 364.266 463.91 364.708 cv
463.91 367.281 li
463.161 367.281 li
463.161 362.726 li
463.91 362.726 li
463.91 363.433 li
464.085 363.167 464.294 362.959 464.543 362.826 cv
464.785 362.692 465.068 362.617 465.384 362.617 cv
465.901 362.617 466.301 362.784 466.567 363.109 cv
466.834 363.433 466.975 363.908 466.975 364.533 cv
f
470.773 360.952 mo
470.773 361.576 li
470.057 361.576 li
469.79 361.576 469.598 361.635 469.499 361.743 cv
469.39 361.851 469.34 362.043 469.34 362.326 cv
469.34 362.726 li
470.573 362.726 li
470.573 363.309 li
469.34 363.309 li
469.34 367.281 li
468.591 367.281 li
468.591 363.309 li
467.875 363.309 li
467.875 362.726 li
468.591 362.726 li
468.591 362.409 li
468.591 361.909 468.707 361.535 468.941 361.302 cv
469.174 361.068 469.549 360.952 470.065 360.952 cv
470.773 360.952 li
f
475.295 364.816 mo
475.295 365.182 li
471.855 365.182 li
471.889 365.699 472.039 366.098 472.322 366.365 cv
472.597 366.631 472.98 366.765 473.479 366.765 cv
473.763 366.765 474.046 366.731 474.312 366.665 cv
474.579 366.598 474.854 366.49 475.12 366.34 cv
475.12 367.048 li
474.854 367.164 474.579 367.256 474.296 367.306 cv
474.012 367.356 473.721 367.389 473.438 367.389 cv
472.705 367.389 472.13 367.181 471.706 366.765 cv
471.281 366.348 471.073 365.774 471.073 365.049 cv
471.073 364.308 471.272 363.717 471.672 363.275 cv
472.072 362.842 472.622 362.617 473.305 362.617 cv
473.921 362.617 474.404 362.817 474.762 363.209 cv
475.112 363.608 475.295 364.141 475.295 364.816 cv
474.545 364.599 mo
474.537 364.191 474.42 363.867 474.204 363.617 cv
473.979 363.375 473.679 363.25 473.313 363.25 cv
472.896 363.25 472.563 363.375 472.313 363.608 cv
472.064 363.842 471.914 364.175 471.88 364.599 cv
474.545 364.599 li
f
479.8 362.9 mo
479.8 363.6 li
479.584 363.483 479.376 363.4 479.159 363.342 cv
478.943 363.284 478.734 363.25 478.518 363.25 cv
478.035 363.25 477.652 363.408 477.385 363.717 cv
477.119 364.025 476.986 364.458 476.986 365.007 cv
476.986 365.565 477.119 365.999 477.385 366.307 cv
477.652 366.615 478.035 366.765 478.518 366.765 cv
478.734 366.765 478.943 366.74 479.159 366.681 cv
479.376 366.623 479.584 366.531 479.8 366.415 cv
479.8 367.106 li
479.584 367.206 479.367 367.281 479.151 367.323 cv
478.926 367.364 478.684 367.389 478.435 367.389 cv
477.752 367.389 477.202 367.181 476.802 366.748 cv
476.394 366.323 476.194 365.74 476.194 365.007 cv
476.194 364.266 476.394 363.683 476.802 363.259 cv
477.21 362.834 477.768 362.617 478.485 362.617 cv
478.718 362.617 478.943 362.642 479.159 362.692 cv
479.376 362.742 479.592 362.809 479.8 362.9 cv
f
481.841 361.435 mo
481.841 362.726 li
483.381 362.726 li
483.381 363.309 li
481.841 363.309 li
481.841 365.782 li
481.841 366.157 481.891 366.398 481.991 366.498 cv
482.091 366.606 482.299 366.656 482.615 366.656 cv
483.381 366.656 li
483.381 367.281 li
482.615 367.281 li
482.032 367.281 481.633 367.173 481.416 366.956 cv
481.2 366.74 481.091 366.348 481.091 365.782 cv
481.091 363.309 li
480.542 363.309 li
480.542 362.726 li
481.091 362.726 li
481.091 361.435 li
481.841 361.435 li
f
484.364 362.726 mo
485.114 362.726 li
485.114 367.281 li
484.364 367.281 li
484.364 362.726 li
484.364 360.952 mo
485.114 360.952 li
485.114 361.901 li
484.364 361.901 li
484.364 360.952 li
f
488.445 363.25 mo
488.045 363.25 487.729 363.408 487.495 363.725 cv
487.262 364.041 487.146 364.466 487.146 365.007 cv
487.146 365.557 487.254 365.982 487.487 366.298 cv
487.72 366.615 488.037 366.765 488.445 366.765 cv
488.845 366.765 489.161 366.615 489.394 366.298 cv
489.627 365.982 489.744 365.557 489.744 365.007 cv
489.744 364.474 489.627 364.041 489.394 363.725 cv
489.161 363.408 488.845 363.25 488.445 363.25 cv
488.445 362.617 mo
489.094 362.617 489.602 362.834 489.977 363.25 cv
490.344 363.675 490.535 364.258 490.535 365.007 cv
490.535 365.757 490.344 366.34 489.977 366.756 cv
489.602 367.181 489.094 367.389 488.445 367.389 cv
487.787 367.389 487.271 367.181 486.904 366.756 cv
486.538 366.34 486.355 365.757 486.355 365.007 cv
486.355 364.258 486.538 363.675 486.904 363.25 cv
487.271 362.834 487.787 362.617 488.445 362.617 cv
f
495.565 364.533 mo
495.565 367.281 li
494.816 367.281 li
494.816 364.558 li
494.816 364.125 494.724 363.808 494.558 363.592 cv
494.391 363.375 494.141 363.267 493.808 363.267 cv
493.4 363.267 493.084 363.4 492.85 363.658 cv
492.617 363.917 492.501 364.266 492.501 364.708 cv
492.501 367.281 li
491.751 367.281 li
491.751 362.726 li
492.501 362.726 li
492.501 363.433 li
492.675 363.167 492.884 362.959 493.134 362.826 cv
493.375 362.692 493.658 362.617 493.975 362.617 cv
494.491 362.617 494.891 362.784 495.157 363.109 cv
495.424 363.433 495.565 363.908 495.565 364.533 cv
f
1 lw
1 lj
285.483 376.499 mo
293.811 376.499 li
1 /0 /CSD get_res sepcs
.7 sep
@
297.142 376.499 mo
305.47 376.499 li
@
289.647 380.663 mo
289.647 372.335 li
@
301.306 380.663 mo
301.306 372.335 li
@
285.483 379.499 mo
285.483 373.499 li
f
.5 lw
285.483 379.499 mo
285.483 373.499 li
@
297.142 379.499 mo
297.142 373.499 li
f
297.142 379.499 mo
297.142 373.499 li
@
293.811 379.499 mo
293.811 373.499 li
f
293.811 379.499 mo
293.811 373.499 li
@
305.47 379.499 mo
305.47 373.499 li
f
305.47 379.499 mo
305.47 373.499 li
@
292.647 380.663 mo
286.647 380.663 li
f
292.647 380.663 mo
286.647 380.663 li
@
304.306 380.663 mo
298.306 380.663 li
f
304.306 380.663 mo
298.306 380.663 li
@
292.647 372.335 mo
286.647 372.335 li
f
292.647 372.335 mo
286.647 372.335 li
@
304.306 372.335 mo
298.306 372.335 li
f
304.306 372.335 mo
298.306 372.335 li
@
gsave
286.397 379.749 mo
292.897 379.749 li
292.897 373.249 li
286.397 373.249 li
cp
clp
289.647 379.499 mo
290.443 379.499 291.206 379.183 291.768 378.62 cv
292.331 378.058 292.647 377.295 292.647 376.499 cv
292.647 375.703 292.331 374.94 291.768 374.378 cv
291.206 373.815 290.443 373.499 289.647 373.499 cv
288.851 373.499 288.088 373.815 287.526 374.378 cv
286.963 374.94 286.647 375.703 286.647 376.499 cv
286.647 377.295 286.963 378.058 287.526 378.62 cv
288.088 379.183 288.851 379.499 289.647 379.499 cv
cp
f
289.647 379.499 mo
290.443 379.499 291.206 379.183 291.768 378.62 cv
292.331 378.058 292.647 377.295 292.647 376.499 cv
292.647 375.703 292.331 374.94 291.768 374.378 cv
291.206 373.815 290.443 373.499 289.647 373.499 cv
288.851 373.499 288.088 373.815 287.526 374.378 cv
286.963 374.94 286.647 375.703 286.647 376.499 cv
286.647 377.295 286.963 378.058 287.526 378.62 cv
288.088 379.183 288.851 379.499 289.647 379.499 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
298.056 379.749 mo
304.556 379.749 li
304.556 373.249 li
298.056 373.249 li
cp
clp
301.306 379.499 mo
302.102 379.499 302.865 379.183 303.427 378.62 cv
303.99 378.058 304.306 377.295 304.306 376.499 cv
304.306 375.703 303.99 374.94 303.427 374.378 cv
302.865 373.815 302.102 373.499 301.306 373.499 cv
300.51 373.499 299.747 373.815 299.185 374.378 cv
298.622 374.94 298.306 375.703 298.306 376.499 cv
298.306 377.295 298.622 378.058 299.185 378.62 cv
299.747 379.183 300.51 379.499 301.306 379.499 cv
cp
f
301.306 379.499 mo
302.102 379.499 302.865 379.183 303.427 378.62 cv
303.99 378.058 304.306 377.295 304.306 376.499 cv
304.306 375.703 303.99 374.94 303.427 374.378 cv
302.865 373.815 302.102 373.499 301.306 373.499 cv
300.51 373.499 299.747 373.815 299.185 374.378 cv
298.622 374.94 298.306 375.703 298.306 376.499 cv
298.306 377.295 298.622 378.058 299.185 378.62 cv
299.747 379.183 300.51 379.499 301.306 379.499 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
311.283 373.343 mo
312.108 373.343 li
312.108 375.833 li
315.089 375.833 li
315.089 373.343 li
315.914 373.343 li
315.914 379.414 li
315.089 379.414 li
315.089 376.524 li
312.108 376.524 li
312.108 379.414 li
311.283 379.414 li
311.283 373.343 li
1 /0 /CSD get_res sepcs
1 sep
f
319.278 375.383 mo
318.878 375.383 318.562 375.541 318.329 375.858 cv
318.095 376.174 317.979 376.599 317.979 377.14 cv
317.979 377.69 318.087 378.115 318.32 378.431 cv
318.553 378.748 318.87 378.898 319.278 378.898 cv
319.678 378.898 319.994 378.748 320.227 378.431 cv
320.461 378.115 320.577 377.69 320.577 377.14 cv
320.577 376.607 320.461 376.174 320.227 375.858 cv
319.994 375.541 319.678 375.383 319.278 375.383 cv
319.278 374.75 mo
319.928 374.75 320.436 374.967 320.81 375.383 cv
321.177 375.808 321.368 376.391 321.368 377.14 cv
321.368 377.89 321.177 378.473 320.81 378.889 cv
320.436 379.314 319.928 379.522 319.278 379.522 cv
318.62 379.522 318.104 379.314 317.737 378.889 cv
317.371 378.473 317.188 377.89 317.188 377.14 cv
317.188 376.391 317.371 375.808 317.737 375.383 cv
318.104 374.967 318.62 374.75 319.278 374.75 cv
f
325.516 374.992 mo
325.516 375.7 li
325.299 375.6 325.083 375.517 324.858 375.458 cv
324.625 375.408 324.391 375.375 324.15 375.375 cv
323.775 375.375 323.492 375.433 323.309 375.55 cv
323.126 375.666 323.034 375.833 323.034 376.058 cv
323.034 376.233 323.101 376.366 323.234 376.466 cv
323.367 376.566 323.634 376.666 324.033 376.749 cv
324.291 376.807 li
324.824 376.924 325.199 377.09 325.424 377.29 cv
325.641 377.499 325.757 377.79 325.757 378.156 cv
325.757 378.581 325.591 378.914 325.258 379.156 cv
324.924 379.406 324.458 379.522 323.875 379.522 cv
323.625 379.522 323.375 379.497 323.109 379.456 cv
322.842 379.414 322.568 379.347 322.276 379.247 cv
322.276 378.473 li
322.551 378.623 322.826 378.731 323.092 378.798 cv
323.359 378.873 323.625 378.906 323.892 378.906 cv
324.242 378.906 324.516 378.848 324.708 378.731 cv
324.891 378.615 324.991 378.44 324.991 378.215 cv
324.991 378.015 324.916 377.857 324.783 377.748 cv
324.65 377.64 324.35 377.532 323.883 377.432 cv
323.625 377.374 li
323.159 377.274 322.817 377.124 322.618 376.924 cv
322.409 376.724 322.309 376.449 322.309 376.091 cv
322.309 375.666 322.459 375.333 322.759 375.1 cv
323.059 374.867 323.492 374.75 324.058 374.75 cv
324.333 374.75 324.591 374.775 324.841 374.817 cv
325.083 374.859 325.307 374.917 325.516 374.992 cv
f
327.689 373.568 mo
327.689 374.859 li
329.23 374.859 li
329.23 375.442 li
327.689 375.442 li
327.689 377.915 li
327.689 378.29 327.739 378.531 327.839 378.631 cv
327.939 378.739 328.147 378.789 328.464 378.789 cv
329.23 378.789 li
329.23 379.414 li
328.464 379.414 li
327.881 379.414 327.481 379.306 327.265 379.089 cv
327.048 378.873 326.94 378.481 326.94 377.915 cv
326.94 375.442 li
326.39 375.442 li
326.39 374.859 li
326.94 374.859 li
326.94 373.568 li
327.689 373.568 li
f
330.246 373.343 mo
331.07 373.343 li
331.07 378.723 li
334.027 378.723 li
334.027 379.414 li
330.246 379.414 li
330.246 373.343 li
f
334.851 374.859 mo
335.601 374.859 li
335.601 379.414 li
334.851 379.414 li
334.851 374.859 li
334.851 373.085 mo
335.601 373.085 li
335.601 374.034 li
334.851 374.034 li
334.851 373.085 li
f
339.473 373.085 mo
339.473 373.709 li
338.757 373.709 li
338.491 373.709 338.299 373.768 338.199 373.876 cv
338.091 373.984 338.041 374.176 338.041 374.459 cv
338.041 374.859 li
339.274 374.859 li
339.274 375.442 li
338.041 375.442 li
338.041 379.414 li
337.291 379.414 li
337.291 375.442 li
336.575 375.442 li
336.575 374.859 li
337.291 374.859 li
337.291 374.542 li
337.291 374.042 337.408 373.668 337.641 373.435 cv
337.874 373.201 338.249 373.085 338.766 373.085 cv
339.473 373.085 li
f
343.996 376.949 mo
343.996 377.315 li
340.556 377.315 li
340.589 377.832 340.739 378.231 341.022 378.498 cv
341.297 378.764 341.68 378.898 342.18 378.898 cv
342.463 378.898 342.746 378.864 343.013 378.798 cv
343.279 378.731 343.554 378.623 343.821 378.473 cv
343.821 379.181 li
343.554 379.297 343.279 379.389 342.996 379.439 cv
342.713 379.489 342.422 379.522 342.138 379.522 cv
341.406 379.522 340.831 379.314 340.406 378.898 cv
339.981 378.481 339.773 377.907 339.773 377.182 cv
339.773 376.441 339.973 375.85 340.373 375.408 cv
340.773 374.975 341.322 374.75 342.005 374.75 cv
342.621 374.75 343.104 374.95 343.463 375.342 cv
343.812 375.741 343.996 376.274 343.996 376.949 cv
343.246 376.732 mo
343.238 376.324 343.121 376 342.905 375.75 cv
342.68 375.508 342.38 375.383 342.014 375.383 cv
341.597 375.383 341.264 375.508 341.014 375.741 cv
340.764 375.975 340.614 376.308 340.581 376.732 cv
343.246 376.732 li
f
348.892 373.543 mo
348.892 374.342 li
348.576 374.192 348.285 374.084 348.01 374.009 cv
347.727 373.943 347.46 373.901 347.21 373.901 cv
346.761 373.901 346.411 373.992 346.169 374.159 cv
345.928 374.334 345.811 374.584 345.811 374.9 cv
345.811 375.167 345.886 375.375 346.053 375.508 cv
346.211 375.65 346.519 375.758 346.969 375.841 cv
347.468 375.941 li
348.076 376.058 348.526 376.266 348.818 376.557 cv
349.109 376.857 349.259 377.249 349.259 377.74 cv
349.259 378.331 349.059 378.773 348.668 379.073 cv
348.268 379.372 347.693 379.522 346.935 379.522 cv
346.644 379.522 346.336 379.489 346.011 379.431 cv
345.686 379.372 345.353 379.281 345.012 379.147 cv
345.012 378.298 li
345.345 378.49 345.67 378.631 345.986 378.723 cv
346.302 378.823 346.619 378.864 346.935 378.864 cv
347.402 378.864 347.76 378.773 348.018 378.59 cv
348.268 378.406 348.401 378.148 348.401 377.798 cv
348.401 377.499 348.31 377.265 348.126 377.099 cv
347.943 376.932 347.643 376.807 347.227 376.724 cv
346.727 376.624 li
346.111 376.508 345.67 376.316 345.395 376.049 cv
345.12 375.791 344.987 375.433 344.987 374.967 cv
344.987 374.434 345.17 374.009 345.553 373.701 cv
345.928 373.393 346.452 373.235 347.119 373.235 cv
347.402 373.235 347.685 373.26 347.985 373.31 cv
348.276 373.36 348.576 373.443 348.892 373.543 cv
f
351.249 373.568 mo
351.249 374.859 li
352.79 374.859 li
352.79 375.442 li
351.249 375.442 li
351.249 377.915 li
351.249 378.29 351.299 378.531 351.399 378.631 cv
351.499 378.739 351.707 378.789 352.024 378.789 cv
352.79 378.789 li
352.79 379.414 li
352.024 379.414 li
351.441 379.414 351.041 379.306 350.825 379.089 cv
350.608 378.873 350.5 378.481 350.5 377.915 cv
350.5 375.442 li
349.95 375.442 li
349.95 374.859 li
350.5 374.859 li
350.5 373.568 li
351.249 373.568 li
f
355.671 379.83 mo
355.455 380.363 355.247 380.721 355.047 380.888 cv
354.847 381.055 354.58 381.138 354.247 381.138 cv
353.648 381.138 li
353.648 380.513 li
354.089 380.513 li
354.289 380.513 354.447 380.463 354.564 380.363 cv
354.68 380.263 354.805 380.039 354.947 379.672 cv
355.08 379.339 li
353.24 374.859 li
354.031 374.859 li
355.455 378.423 li
356.879 374.859 li
357.67 374.859 li
355.671 379.83 li
f
358.703 373.085 mo
359.452 373.085 li
359.452 379.414 li
358.703 379.414 li
358.703 373.085 li
f
364.915 376.949 mo
364.915 377.315 li
361.476 377.315 li
361.509 377.832 361.659 378.231 361.942 378.498 cv
362.217 378.764 362.6 378.898 363.1 378.898 cv
363.383 378.898 363.666 378.864 363.933 378.798 cv
364.199 378.731 364.474 378.623 364.741 378.473 cv
364.741 379.181 li
364.474 379.297 364.199 379.389 363.916 379.439 cv
363.633 379.489 363.341 379.522 363.058 379.522 cv
362.325 379.522 361.751 379.314 361.326 378.898 cv
360.901 378.481 360.693 377.907 360.693 377.182 cv
360.693 376.441 360.893 375.85 361.293 375.408 cv
361.693 374.975 362.242 374.75 362.925 374.75 cv
363.541 374.75 364.024 374.95 364.382 375.342 cv
364.732 375.741 364.915 376.274 364.915 376.949 cv
364.166 376.732 mo
364.158 376.324 364.041 376 363.824 375.75 cv
363.6 375.508 363.3 375.383 362.933 375.383 cv
362.517 375.383 362.184 375.508 361.934 375.741 cv
361.684 375.975 361.534 376.308 361.501 376.732 cv
364.166 376.732 li
f
369.604 380.788 mo
369.604 381.371 li
365.282 381.371 li
365.282 380.788 li
369.604 380.788 li
f
373.976 373.543 mo
373.976 374.342 li
373.66 374.192 373.368 374.084 373.094 374.009 cv
372.81 373.943 372.544 373.901 372.294 373.901 cv
371.844 373.901 371.495 373.992 371.253 374.159 cv
371.012 374.334 370.895 374.584 370.895 374.9 cv
370.895 375.167 370.97 375.375 371.137 375.508 cv
371.295 375.65 371.603 375.758 372.053 375.841 cv
372.552 375.941 li
373.16 376.058 373.61 376.266 373.901 376.557 cv
374.193 376.857 374.343 377.249 374.343 377.74 cv
374.343 378.331 374.143 378.773 373.751 379.073 cv
373.352 379.372 372.777 379.522 372.019 379.522 cv
371.728 379.522 371.42 379.489 371.095 379.431 cv
370.77 379.372 370.437 379.281 370.096 379.147 cv
370.096 378.298 li
370.429 378.49 370.753 378.631 371.07 378.723 cv
371.386 378.823 371.703 378.864 372.019 378.864 cv
372.486 378.864 372.844 378.773 373.102 378.59 cv
373.352 378.406 373.485 378.148 373.485 377.798 cv
373.485 377.499 373.393 377.265 373.21 377.099 cv
373.027 376.932 372.727 376.807 372.311 376.724 cv
371.811 376.624 li
371.195 376.508 370.753 376.316 370.479 376.049 cv
370.204 375.791 370.071 375.433 370.071 374.967 cv
370.071 374.434 370.254 374.009 370.637 373.701 cv
371.012 373.393 371.536 373.235 372.202 373.235 cv
372.486 373.235 372.769 373.26 373.069 373.31 cv
373.36 373.36 373.66 373.443 373.976 373.543 cv
f
376.333 373.568 mo
376.333 374.859 li
377.874 374.859 li
377.874 375.442 li
376.333 375.442 li
376.333 377.915 li
376.333 378.29 376.383 378.531 376.483 378.631 cv
376.583 378.739 376.791 378.789 377.108 378.789 cv
377.874 378.789 li
377.874 379.414 li
377.108 379.414 li
376.525 379.414 376.125 379.306 375.908 379.089 cv
375.692 378.873 375.584 378.481 375.584 377.915 cv
375.584 375.442 li
375.034 375.442 li
375.034 374.859 li
375.584 374.859 li
375.584 373.568 li
376.333 373.568 li
f
380.622 375.383 mo
380.222 375.383 379.906 375.541 379.673 375.858 cv
379.439 376.174 379.323 376.599 379.323 377.14 cv
379.323 377.69 379.431 378.115 379.664 378.431 cv
379.897 378.748 380.214 378.898 380.622 378.898 cv
381.022 378.898 381.338 378.748 381.571 378.431 cv
381.805 378.115 381.921 377.69 381.921 377.14 cv
381.921 376.607 381.805 376.174 381.571 375.858 cv
381.338 375.541 381.022 375.383 380.622 375.383 cv
380.622 374.75 mo
381.272 374.75 381.78 374.967 382.154 375.383 cv
382.521 375.808 382.712 376.391 382.712 377.14 cv
382.712 377.89 382.521 378.473 382.154 378.889 cv
381.78 379.314 381.272 379.522 380.622 379.522 cv
379.964 379.522 379.448 379.314 379.081 378.889 cv
378.715 378.473 378.532 377.89 378.532 377.14 cv
378.532 376.391 378.715 375.808 379.081 375.383 cv
379.448 374.967 379.964 374.75 380.622 374.75 cv
f
385.719 375.383 mo
385.319 375.383 385.003 375.541 384.769 375.858 cv
384.536 376.174 384.42 376.599 384.42 377.14 cv
384.42 377.69 384.528 378.115 384.761 378.431 cv
384.994 378.748 385.311 378.898 385.719 378.898 cv
386.119 378.898 386.435 378.748 386.668 378.431 cv
386.901 378.115 387.018 377.69 387.018 377.14 cv
387.018 376.607 386.901 376.174 386.668 375.858 cv
386.435 375.541 386.119 375.383 385.719 375.383 cv
385.719 374.75 mo
386.368 374.75 386.876 374.967 387.251 375.383 cv
387.618 375.808 387.809 376.391 387.809 377.14 cv
387.809 377.89 387.618 378.473 387.251 378.889 cv
386.876 379.314 386.368 379.522 385.719 379.522 cv
385.061 379.522 384.545 379.314 384.178 378.889 cv
383.812 378.473 383.628 377.89 383.628 377.14 cv
383.628 376.391 383.812 375.808 384.178 375.383 cv
384.545 374.967 385.061 374.75 385.719 374.75 cv
f
389.05 373.085 mo
389.799 373.085 li
389.799 379.414 li
389.05 379.414 li
389.05 373.085 li
f
392.223 376.516 mo
392.223 378.739 li
393.539 378.739 li
393.98 378.739 394.305 378.648 394.521 378.465 cv
394.73 378.281 394.838 378.007 394.838 377.623 cv
394.838 377.249 394.73 376.974 394.521 376.791 cv
394.305 376.607 393.98 376.516 393.539 376.516 cv
392.223 376.516 li
392.223 374.017 mo
392.223 375.85 li
393.439 375.85 li
393.839 375.85 394.13 375.775 394.33 375.625 cv
394.53 375.475 394.63 375.25 394.63 374.934 cv
394.63 374.634 394.53 374.401 394.33 374.251 cv
394.13 374.101 393.839 374.017 393.439 374.017 cv
392.223 374.017 li
391.398 373.343 mo
393.497 373.343 li
394.122 373.343 394.605 373.476 394.946 373.734 cv
395.279 374.001 395.454 374.367 395.454 374.842 cv
395.454 375.217 395.363 375.517 395.188 375.733 cv
395.013 375.95 394.763 376.091 394.43 376.141 cv
394.83 376.233 395.146 376.416 395.371 376.691 cv
395.587 376.966 395.704 377.307 395.704 377.715 cv
395.704 378.265 395.513 378.681 395.146 378.973 cv
394.78 379.272 394.255 379.414 393.58 379.414 cv
391.398 379.414 li
391.398 373.343 li
f
400.543 380.788 mo
400.543 381.371 li
396.22 381.371 li
396.22 380.788 li
400.543 380.788 li
f
404.24 375.55 mo
404.24 373.085 li
404.99 373.085 li
404.99 379.414 li
404.24 379.414 li
404.24 378.731 li
404.082 379.006 403.882 379.206 403.641 379.331 cv
403.399 379.456 403.116 379.522 402.783 379.522 cv
402.233 379.522 401.784 379.306 401.434 378.873 cv
401.084 378.44 400.917 377.857 400.917 377.14 cv
400.917 376.424 401.084 375.85 401.434 375.408 cv
401.784 374.975 402.233 374.75 402.783 374.75 cv
403.116 374.75 403.399 374.817 403.641 374.95 cv
403.882 375.083 404.082 375.283 404.24 375.55 cv
401.692 377.14 mo
401.692 377.69 401.8 378.123 402.025 378.44 cv
402.25 378.756 402.566 378.906 402.966 378.906 cv
403.358 378.906 403.666 378.756 403.899 378.44 cv
404.124 378.123 404.24 377.69 404.24 377.14 cv
404.24 376.591 404.124 376.166 403.899 375.85 cv
403.666 375.533 403.358 375.375 402.966 375.375 cv
402.566 375.375 402.25 375.533 402.025 375.85 cv
401.8 376.166 401.692 376.591 401.692 377.14 cv
f
408.604 377.124 mo
407.996 377.124 407.58 377.199 407.347 377.332 cv
407.113 377.474 406.997 377.707 406.997 378.04 cv
406.997 378.306 407.08 378.523 407.255 378.673 cv
407.43 378.831 407.671 378.906 407.971 378.906 cv
408.388 378.906 408.721 378.764 408.971 378.465 cv
409.22 378.173 409.345 377.782 409.345 377.29 cv
409.345 377.124 li
408.604 377.124 li
410.095 376.816 mo
410.095 379.414 li
409.345 379.414 li
409.345 378.723 li
409.17 379.006 408.954 379.206 408.704 379.331 cv
408.454 379.456 408.138 379.522 407.771 379.522 cv
407.305 379.522 406.93 379.397 406.655 379.139 cv
406.381 378.881 406.247 378.531 406.247 378.09 cv
406.247 377.582 406.414 377.199 406.764 376.932 cv
407.105 376.674 407.613 376.541 408.296 376.541 cv
409.345 376.541 li
409.345 376.466 li
409.345 376.124 409.229 375.858 409.004 375.666 cv
408.779 375.483 408.463 375.383 408.054 375.383 cv
407.788 375.383 407.538 375.417 407.288 375.483 cv
407.038 375.55 406.805 375.641 406.58 375.758 cv
406.58 375.067 li
406.847 374.967 407.113 374.884 407.372 374.834 cv
407.63 374.784 407.88 374.75 408.129 374.75 cv
408.787 374.75 409.279 374.925 409.603 375.267 cv
409.928 375.608 410.095 376.124 410.095 376.816 cv
f
413.534 379.83 mo
413.318 380.363 413.11 380.721 412.91 380.888 cv
412.71 381.055 412.443 381.138 412.11 381.138 cv
411.511 381.138 li
411.511 380.513 li
411.952 380.513 li
412.152 380.513 412.31 380.463 412.427 380.363 cv
412.543 380.263 412.668 380.039 412.81 379.672 cv
412.943 379.339 li
411.103 374.859 li
411.894 374.859 li
413.318 378.423 li
414.742 374.859 li
415.533 374.859 li
413.534 379.83 li
f
416.816 378.723 mo
418.156 378.723 li
418.156 374.092 li
416.699 374.384 li
416.699 373.634 li
418.148 373.343 li
418.973 373.343 li
418.973 378.723 li
420.313 378.723 li
420.313 379.414 li
416.816 379.414 li
416.816 378.723 li
f
423.828 376.049 mo
423.461 376.049 423.17 376.183 422.953 376.433 cv
422.737 376.682 422.629 377.032 422.629 377.465 cv
422.629 377.907 422.737 378.256 422.953 378.506 cv
423.17 378.756 423.461 378.881 423.828 378.881 cv
424.194 378.881 424.486 378.756 424.702 378.506 cv
424.919 378.256 425.027 377.907 425.027 377.465 cv
425.027 377.032 424.919 376.682 424.702 376.433 cv
424.486 376.183 424.194 376.049 423.828 376.049 cv
425.46 373.476 mo
425.46 374.226 li
425.252 374.126 425.044 374.051 424.835 374.001 cv
424.619 373.951 424.411 373.926 424.211 373.926 cv
423.661 373.926 423.245 374.109 422.962 374.475 cv
422.678 374.842 422.512 375.4 422.479 376.133 cv
422.637 375.9 422.837 375.716 423.078 375.591 cv
423.32 375.467 423.586 375.4 423.878 375.4 cv
424.486 375.4 424.969 375.591 425.318 375.958 cv
425.668 376.324 425.851 376.832 425.851 377.465 cv
425.851 378.09 425.66 378.59 425.293 378.964 cv
424.927 379.339 424.436 379.522 423.828 379.522 cv
423.128 379.522 422.587 379.256 422.22 378.723 cv
421.846 378.19 421.662 377.407 421.662 376.383 cv
421.662 375.425 421.887 374.659 422.345 374.092 cv
422.795 373.526 423.411 373.235 424.178 373.235 cv
424.377 373.235 424.586 373.26 424.802 373.293 cv
425.01 373.335 425.227 373.393 425.46 373.476 cv
f
429.757 376.141 mo
430.149 376.224 430.457 376.399 430.673 376.666 cv
430.89 376.932 431.006 377.265 431.006 377.648 cv
431.006 378.248 430.798 378.714 430.39 379.039 cv
429.974 379.364 429.391 379.522 428.633 379.522 cv
428.375 379.522 428.108 379.497 427.842 379.447 cv
427.575 379.406 427.292 379.331 427.009 379.231 cv
427.009 378.44 li
427.234 378.573 427.484 378.673 427.759 378.739 cv
428.025 378.806 428.308 378.839 428.608 378.839 cv
429.124 378.839 429.516 378.739 429.782 378.54 cv
430.049 378.34 430.19 378.04 430.19 377.648 cv
430.19 377.299 430.065 377.016 429.816 376.816 cv
429.566 376.616 429.216 376.508 428.766 376.508 cv
428.058 376.508 li
428.058 375.833 li
428.8 375.833 li
429.199 375.833 429.507 375.758 429.724 375.591 cv
429.94 375.433 430.049 375.2 430.049 374.892 cv
430.049 374.584 429.932 374.342 429.716 374.176 cv
429.491 374.009 429.174 373.926 428.766 373.926 cv
428.541 373.926 428.3 373.951 428.042 374.001 cv
427.784 374.051 427.5 374.126 427.192 374.226 cv
427.192 373.493 li
427.5 373.41 427.792 373.343 428.067 373.301 cv
428.333 373.26 428.591 373.235 428.841 373.235 cv
429.457 373.235 429.949 373.376 430.315 373.659 cv
430.682 373.943 430.865 374.326 430.865 374.809 cv
430.865 375.142 430.765 375.425 430.573 375.658 cv
430.382 375.891 430.107 376.058 429.757 376.141 cv
f
433.197 373.568 mo
433.197 374.859 li
434.737 374.859 li
434.737 375.442 li
433.197 375.442 li
433.197 377.915 li
433.197 378.29 433.247 378.531 433.347 378.631 cv
433.447 378.739 433.655 378.789 433.971 378.789 cv
434.737 378.789 li
434.737 379.414 li
433.971 379.414 li
433.388 379.414 432.989 379.306 432.772 379.089 cv
432.556 378.873 432.447 378.481 432.447 377.915 cv
432.447 375.442 li
431.898 375.442 li
431.898 374.859 li
432.447 374.859 li
432.447 373.568 li
433.197 373.568 li
f
437.486 375.383 mo
437.086 375.383 436.769 375.541 436.536 375.858 cv
436.303 376.174 436.186 376.599 436.186 377.14 cv
436.186 377.69 436.295 378.115 436.528 378.431 cv
436.761 378.748 437.078 378.898 437.486 378.898 cv
437.885 378.898 438.202 378.748 438.435 378.431 cv
438.668 378.115 438.785 377.69 438.785 377.14 cv
438.785 376.607 438.668 376.174 438.435 375.858 cv
438.202 375.541 437.885 375.383 437.486 375.383 cv
437.486 374.75 mo
438.135 374.75 438.643 374.967 439.018 375.383 cv
439.384 375.808 439.576 376.391 439.576 377.14 cv
439.576 377.89 439.384 378.473 439.018 378.889 cv
438.643 379.314 438.135 379.522 437.486 379.522 cv
436.828 379.522 436.311 379.314 435.945 378.889 cv
435.579 378.473 435.395 377.89 435.395 377.14 cv
435.395 376.391 435.579 375.808 435.945 375.383 cv
436.311 374.967 436.828 374.75 437.486 374.75 cv
f
443.415 376.141 mo
443.807 376.224 444.115 376.399 444.331 376.666 cv
444.548 376.932 444.664 377.265 444.664 377.648 cv
444.664 378.248 444.456 378.714 444.048 379.039 cv
443.632 379.364 443.049 379.522 442.291 379.522 cv
442.033 379.522 441.766 379.497 441.5 379.447 cv
441.233 379.406 440.95 379.331 440.667 379.231 cv
440.667 378.44 li
440.892 378.573 441.142 378.673 441.416 378.739 cv
441.683 378.806 441.966 378.839 442.266 378.839 cv
442.782 378.839 443.174 378.739 443.44 378.54 cv
443.707 378.34 443.848 378.04 443.848 377.648 cv
443.848 377.299 443.723 377.016 443.473 376.816 cv
443.224 376.616 442.874 376.508 442.424 376.508 cv
441.716 376.508 li
441.716 375.833 li
442.457 375.833 li
442.857 375.833 443.165 375.758 443.382 375.591 cv
443.598 375.433 443.707 375.2 443.707 374.892 cv
443.707 374.584 443.59 374.342 443.374 374.176 cv
443.149 374.009 442.832 373.926 442.424 373.926 cv
442.199 373.926 441.958 373.951 441.7 374.001 cv
441.441 374.051 441.158 374.126 440.85 374.226 cv
440.85 373.493 li
441.158 373.41 441.45 373.343 441.725 373.301 cv
441.991 373.26 442.249 373.235 442.499 373.235 cv
443.115 373.235 443.607 373.376 443.973 373.659 cv
444.34 373.943 444.523 374.326 444.523 374.809 cv
444.523 375.142 444.423 375.425 444.231 375.658 cv
444.04 375.891 443.765 376.058 443.415 376.141 cv
f
446.363 378.723 mo
447.704 378.723 li
447.704 374.092 li
446.247 374.384 li
446.247 373.634 li
447.696 373.343 li
448.52 373.343 li
448.52 378.723 li
449.861 378.723 li
449.861 379.414 li
446.363 379.414 li
446.363 378.723 li
f
453.276 376.533 mo
452.884 376.533 452.576 376.641 452.351 376.849 cv
452.126 377.057 452.018 377.34 452.018 377.707 cv
452.018 378.073 452.126 378.365 452.351 378.573 cv
452.576 378.781 452.884 378.881 453.276 378.881 cv
453.659 378.881 453.967 378.781 454.192 378.565 cv
454.417 378.356 454.533 378.073 454.533 377.707 cv
454.533 377.34 454.417 377.057 454.2 376.849 cv
453.975 376.641 453.667 376.533 453.276 376.533 cv
452.451 376.183 mo
452.101 376.099 451.826 375.933 451.627 375.691 cv
451.427 375.45 451.335 375.158 451.335 374.809 cv
451.335 374.326 451.502 373.943 451.851 373.659 cv
452.193 373.376 452.668 373.235 453.276 373.235 cv
453.875 373.235 454.35 373.376 454.7 373.659 cv
455.041 373.943 455.216 374.326 455.216 374.809 cv
455.216 375.158 455.116 375.45 454.916 375.691 cv
454.716 375.933 454.45 376.099 454.1 376.183 cv
454.491 376.274 454.8 376.458 455.024 376.724 cv
455.241 376.991 455.358 377.324 455.358 377.707 cv
455.358 378.298 455.174 378.748 454.816 379.056 cv
454.45 379.372 453.942 379.522 453.276 379.522 cv
452.601 379.522 452.085 379.372 451.727 379.056 cv
451.368 378.748 451.194 378.298 451.194 377.707 cv
451.194 377.324 451.302 376.991 451.527 376.724 cv
451.743 376.458 452.051 376.274 452.451 376.183 cv
452.151 374.884 mo
452.151 375.2 452.243 375.45 452.443 375.625 cv
452.643 375.8 452.917 375.883 453.276 375.883 cv
453.625 375.883 453.9 375.8 454.1 375.625 cv
454.3 375.45 454.4 375.2 454.4 374.884 cv
454.4 374.567 454.3 374.326 454.1 374.151 cv
453.9 373.976 453.625 373.884 453.276 373.884 cv
452.917 373.884 452.643 373.976 452.443 374.151 cv
452.243 374.326 452.151 374.567 452.151 374.884 cv
f
460.171 380.788 mo
460.171 381.371 li
455.849 381.371 li
455.849 380.788 li
460.171 380.788 li
f
464.66 376.666 mo
464.66 379.414 li
463.91 379.414 li
463.91 376.691 li
463.91 376.258 463.819 375.941 463.652 375.725 cv
463.486 375.508 463.236 375.4 462.903 375.4 cv
462.495 375.4 462.178 375.533 461.945 375.791 cv
461.712 376.049 461.595 376.399 461.595 376.841 cv
461.595 379.414 li
460.846 379.414 li
460.846 373.085 li
461.595 373.085 li
461.595 375.566 li
461.77 375.3 461.978 375.092 462.228 374.959 cv
462.47 374.825 462.753 374.75 463.069 374.75 cv
463.586 374.75 463.985 374.917 464.252 375.242 cv
464.518 375.566 464.66 376.041 464.66 376.666 cv
f
469.615 380.788 mo
469.615 381.371 li
465.293 381.371 li
465.293 380.788 li
469.615 380.788 li
f
472.388 377.124 mo
471.78 377.124 471.364 377.199 471.131 377.332 cv
470.898 377.474 470.781 377.707 470.781 378.04 cv
470.781 378.306 470.864 378.523 471.039 378.673 cv
471.214 378.831 471.456 378.906 471.755 378.906 cv
472.172 378.906 472.505 378.764 472.755 378.465 cv
473.005 378.173 473.13 377.782 473.13 377.29 cv
473.13 377.124 li
472.388 377.124 li
473.879 376.816 mo
473.879 379.414 li
473.13 379.414 li
473.13 378.723 li
472.955 379.006 472.738 379.206 472.488 379.331 cv
472.238 379.456 471.922 379.522 471.556 379.522 cv
471.089 379.522 470.714 379.397 470.44 379.139 cv
470.165 378.881 470.032 378.531 470.032 378.09 cv
470.032 377.582 470.198 377.199 470.548 376.932 cv
470.889 376.674 471.397 376.541 472.08 376.541 cv
473.13 376.541 li
473.13 376.466 li
473.13 376.124 473.013 375.858 472.788 375.666 cv
472.563 375.483 472.247 375.383 471.839 375.383 cv
471.572 375.383 471.322 375.417 471.073 375.483 cv
470.823 375.55 470.59 375.641 470.365 375.758 cv
470.365 375.067 li
470.631 374.967 470.898 374.884 471.156 374.834 cv
471.414 374.784 471.664 374.75 471.914 374.75 cv
472.572 374.75 473.063 374.925 473.388 375.267 cv
473.713 375.608 473.879 376.124 473.879 376.816 cv
f
477.727 373.085 mo
477.727 373.709 li
477.01 373.709 li
476.744 373.709 476.552 373.768 476.452 373.876 cv
476.344 373.984 476.294 374.176 476.294 374.459 cv
476.294 374.859 li
477.527 374.859 li
477.527 375.442 li
476.294 375.442 li
476.294 379.414 li
475.545 379.414 li
475.545 375.442 li
474.829 375.442 li
474.829 374.859 li
475.545 374.859 li
475.545 374.542 li
475.545 374.042 475.661 373.668 475.895 373.435 cv
476.128 373.201 476.502 373.085 477.019 373.085 cv
477.727 373.085 li
f
479.092 373.568 mo
479.092 374.859 li
480.633 374.859 li
480.633 375.442 li
479.092 375.442 li
479.092 377.915 li
479.092 378.29 479.142 378.531 479.242 378.631 cv
479.342 378.739 479.551 378.789 479.867 378.789 cv
480.633 378.789 li
480.633 379.414 li
479.867 379.414 li
479.284 379.414 478.884 379.306 478.668 379.089 cv
478.451 378.873 478.343 378.481 478.343 377.915 cv
478.343 375.442 li
477.793 375.442 li
477.793 374.859 li
478.343 374.859 li
478.343 373.568 li
479.092 373.568 li
f
485.513 376.949 mo
485.513 377.315 li
482.074 377.315 li
482.107 377.832 482.257 378.231 482.54 378.498 cv
482.815 378.764 483.198 378.898 483.698 378.898 cv
483.981 378.898 484.264 378.864 484.531 378.798 cv
484.797 378.731 485.072 378.623 485.339 378.473 cv
485.339 379.181 li
485.072 379.297 484.797 379.389 484.514 379.439 cv
484.231 379.489 483.939 379.522 483.656 379.522 cv
482.923 379.522 482.349 379.314 481.924 378.898 cv
481.499 378.481 481.291 377.907 481.291 377.182 cv
481.291 376.441 481.491 375.85 481.891 375.408 cv
482.29 374.975 482.84 374.75 483.523 374.75 cv
484.139 374.75 484.622 374.95 484.98 375.342 cv
485.33 375.741 485.513 376.274 485.513 376.949 cv
484.764 376.732 mo
484.756 376.324 484.639 376 484.422 375.75 cv
484.198 375.508 483.898 375.383 483.531 375.383 cv
483.115 375.383 482.782 375.508 482.532 375.741 cv
482.282 375.975 482.132 376.308 482.099 376.732 cv
484.764 376.732 li
f
489.378 375.558 mo
489.294 375.508 489.203 375.475 489.103 375.45 cv
489.003 375.433 488.895 375.417 488.778 375.417 cv
488.353 375.417 488.028 375.558 487.804 375.833 cv
487.57 376.108 487.462 376.499 487.462 377.016 cv
487.462 379.414 li
486.713 379.414 li
486.713 374.859 li
487.462 374.859 li
487.462 375.566 li
487.612 375.292 487.82 375.083 488.07 374.95 cv
488.32 374.817 488.628 374.75 488.995 374.75 cv
489.169 374.759 li
489.378 374.792 li
489.378 375.558 li
f
490.194 373.343 mo
491.018 373.343 li
491.018 379.414 li
490.194 379.414 li
490.194 373.343 li
f
496.406 376.666 mo
496.406 379.414 li
495.657 379.414 li
495.657 376.691 li
495.657 376.258 495.565 375.941 495.399 375.725 cv
495.232 375.508 494.982 375.4 494.649 375.4 cv
494.241 375.4 493.925 375.533 493.691 375.791 cv
493.458 376.049 493.342 376.399 493.342 376.841 cv
493.342 379.414 li
492.592 379.414 li
492.592 374.859 li
493.342 374.859 li
493.342 375.566 li
493.517 375.3 493.725 375.092 493.975 374.959 cv
494.216 374.825 494.499 374.75 494.816 374.75 cv
495.332 374.75 495.732 374.917 495.998 375.242 cv
496.265 375.566 496.406 376.041 496.406 376.666 cv
f
500.204 373.085 mo
500.204 373.709 li
499.488 373.709 li
499.221 373.709 499.03 373.768 498.93 373.876 cv
498.822 373.984 498.772 374.176 498.772 374.459 cv
498.772 374.859 li
500.004 374.859 li
500.004 375.442 li
498.772 375.442 li
498.772 379.414 li
498.022 379.414 li
498.022 375.442 li
497.306 375.442 li
497.306 374.859 li
498.022 374.859 li
498.022 374.542 li
498.022 374.042 498.139 373.668 498.372 373.435 cv
498.605 373.201 498.98 373.085 499.496 373.085 cv
500.204 373.085 li
f
504.726 376.949 mo
504.726 377.315 li
501.287 377.315 li
501.32 377.832 501.47 378.231 501.753 378.498 cv
502.028 378.764 502.411 378.898 502.911 378.898 cv
503.194 378.898 503.477 378.864 503.743 378.798 cv
504.01 378.731 504.285 378.623 504.551 378.473 cv
504.551 379.181 li
504.285 379.297 504.01 379.389 503.727 379.439 cv
503.444 379.489 503.152 379.522 502.869 379.522 cv
502.136 379.522 501.561 379.314 501.137 378.898 cv
500.712 378.481 500.504 377.907 500.504 377.182 cv
500.504 376.441 500.704 375.85 501.103 375.408 cv
501.503 374.975 502.053 374.75 502.736 374.75 cv
503.352 374.75 503.835 374.95 504.193 375.342 cv
504.543 375.741 504.726 376.274 504.726 376.949 cv
503.977 376.732 mo
503.968 376.324 503.852 376 503.635 375.75 cv
503.41 375.508 503.11 375.383 502.744 375.383 cv
502.328 375.383 501.995 375.508 501.745 375.741 cv
501.495 375.975 501.345 376.308 501.312 376.732 cv
503.977 376.732 li
f
509.232 375.033 mo
509.232 375.733 li
509.015 375.616 508.807 375.533 508.59 375.475 cv
508.374 375.417 508.166 375.383 507.949 375.383 cv
507.466 375.383 507.083 375.541 506.816 375.85 cv
506.55 376.158 506.417 376.591 506.417 377.14 cv
506.417 377.698 506.55 378.132 506.816 378.44 cv
507.083 378.748 507.466 378.898 507.949 378.898 cv
508.166 378.898 508.374 378.873 508.59 378.814 cv
508.807 378.756 509.015 378.664 509.232 378.548 cv
509.232 379.239 li
509.015 379.339 508.799 379.414 508.582 379.456 cv
508.357 379.497 508.116 379.522 507.866 379.522 cv
507.183 379.522 506.633 379.314 506.234 378.881 cv
505.825 378.456 505.626 377.873 505.626 377.14 cv
505.626 376.399 505.825 375.816 506.234 375.392 cv
506.642 374.967 507.2 374.75 507.916 374.75 cv
508.149 374.75 508.374 374.775 508.59 374.825 cv
508.807 374.875 509.023 374.942 509.232 375.033 cv
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
